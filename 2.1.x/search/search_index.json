{
    "docs": [
        {
            "location": "/", 
            "text": "Drutiny - automated site auditing\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nThis is a generic Drupal site auditing and optional remediation tool.\n\n\nInstallation\n\n\nYou can install Drutiny into your project with \ncomposer\n. Drutiny is a require-dev type dependency.\n\n\ncomposer require --dev drutiny/drutiny 2.1.*@dev\n\n\n\n\nAlternately, Drutiny can be built as a standalone tool:\n\n\ncomposer create-project --no-interaction --prefer-source -s dev drutiny/project-dev drutiny-dev\n\n\n\n\nDrush\n is also required. Its not specifically marked as a dependency as the version of Drush to use will depend on the site you're auditing.\n\n\ncomposer require --global drush/drush\n\n\n\n\nUsage\n\n\nDrutiny is a command line tool that can be called from the composer vendor bin directory:\n\n\n./vendor/bin/drutiny\n\n\n\n\n(Substitute \n./bin/drutiny\n if using Drutiny as a standalone tool.)\n\n\nFinding policies available to run\n\n\nDrutiny comes with a \npolicy:list\n command that lists all the policies available to audit against.\n\n\n./vendor/bin/drutiny policy:list\n\n\n\n\nPolicies provided by other packages such as \ndrutiny/plugin-distro-common\n will also appear here if they are installed.\n\n\nInstalling Drutiny Plugins\n\n\nAdditional Drutiny policies, audits, profiles and commands can be installed from composer.\n\n\n$ composer search drutiny\n\n\n\n\nFor Drupal 8 sites, \ndrutiny/plugin-drupal-8\n would be a good plugin to add.\n\n\n$ composer require drutiny/plugin-drupal-8 2.x-dev\n\n\n\n\nRunning an Audit\n\n\nAn audit of a single policy can be run against a site by using \npolicy:audit\n and passing the policy name and site target:\n\n\n./vendor/bin/drutiny policy:audit Drupal-8:PageCacheExpiry @drupalvm.dev\n\n\n\n\nThe command above would audit the site that resolved to the \n@drupalvm.dev\n drush alias against the \nDrupal-8:PageCacheExpiry\n policy.\n\n\nSome policies have parameters you can specify which can be passed in at call time. Use \npolicy:info\n to find out more about the parameters available for a check.\n\n\n./vendor/bin/drutiny policy:audit -p max_age=600 Drupal-8:PageCacheExpiry @drupalvm.dev\n\n\n\n\nAudits are simple self contained classes that are simple to read and understand. Policies are simple YAML files that determine how to use Audit classes. Drutiny can be extended very easily to audit for your own unique requirements. Pull requests are welcome as well, please see the \ncontributing guide\n.\n\n\nRemediation\n\n\nSome checks have redemptive capability. Passing the \n--remediate\n flag into the call with \"auto-heal\" the site if the check fails on first pass.\n\n\n./vendor/bin/drutiny policy:audit -p max_age=600 --remediate Drupal-8:PageCacheExpiry @drupalvm.dev\n\n\n\n\nRunning a profile of checks\n\n\nA site audit is running a collection of checks that make up a profile. This allows you to audit against a specific standard, policy or best practice. Drutiny comes with some base profiles which you can find using \nprofile:list\n. You can run a profile with \nprofile:run\n in a simlar format to \npolicy:audit\n.\n\n\n./vendor/bin/drutiny profile:run --remediate d8 @drupalvm.dev\n\n\n\n\nParameters can not be passed in at runtime for profiles but are instead predefined by the profile itself.\n\n\nCreating your own profiles\n\n\nThe \nprofile:generate\n wizard will help you to produce a profile. stored in the \nprofiles\n directory.\n\n\nCustomizing policies in profiles\n\n\nProfiles allow you to define parameters to fine tune policies within. You can do this by specifying parameters listed in \npolicy:info\n in the profile file:\n\n\ntitle: 10s Page Cache Expiry Profile\npolicies:\n    'Drupal-8:PageCacheExpiry':\n      parameters:\n        value: 10\n\n\n\n\nReporting\n\n\nBy default, profile runs report to the console but reports can also be exported in html and json formats.\n\n\n./vendor/bin/drutiny profile:run --remediate --format=html --report-filename=drupalvm-dev.html d8 drush:@drupalvm.dev\n\n\n\n\nGetting help\n\n\nBecause this is a Symfony Console application, you have some other familiar commands:\n\n\n./vendor/bin/drutiny help profile:run\n\n\n\n\nIn particular, if you use the \n-vvv\n argument, then you will see all the drush commands, and SSH commands printed to the screen.\n\n\nDocumentation\n\n\nYou can find more documentation in the \ndocs\n folder.\n\n\nCredits\n\n\n\n\nTheodoros Ploumis\n for \ncreating the logo\n for Drutiny.", 
            "title": "Home"
        }, 
        {
            "location": "/#drutiny-automated-site-auditing", 
            "text": "This is a generic Drupal site auditing and optional remediation tool.", 
            "title": "Drutiny - automated site auditing"
        }, 
        {
            "location": "/#installation", 
            "text": "You can install Drutiny into your project with  composer . Drutiny is a require-dev type dependency.  composer require --dev drutiny/drutiny 2.1.*@dev  Alternately, Drutiny can be built as a standalone tool:  composer create-project --no-interaction --prefer-source -s dev drutiny/project-dev drutiny-dev  Drush  is also required. Its not specifically marked as a dependency as the version of Drush to use will depend on the site you're auditing.  composer require --global drush/drush", 
            "title": "Installation"
        }, 
        {
            "location": "/#usage", 
            "text": "Drutiny is a command line tool that can be called from the composer vendor bin directory:  ./vendor/bin/drutiny  (Substitute  ./bin/drutiny  if using Drutiny as a standalone tool.)", 
            "title": "Usage"
        }, 
        {
            "location": "/#finding-policies-available-to-run", 
            "text": "Drutiny comes with a  policy:list  command that lists all the policies available to audit against.  ./vendor/bin/drutiny policy:list  Policies provided by other packages such as  drutiny/plugin-distro-common  will also appear here if they are installed.", 
            "title": "Finding policies available to run"
        }, 
        {
            "location": "/#installing-drutiny-plugins", 
            "text": "Additional Drutiny policies, audits, profiles and commands can be installed from composer.  $ composer search drutiny  For Drupal 8 sites,  drutiny/plugin-drupal-8  would be a good plugin to add.  $ composer require drutiny/plugin-drupal-8 2.x-dev", 
            "title": "Installing Drutiny Plugins"
        }, 
        {
            "location": "/#running-an-audit", 
            "text": "An audit of a single policy can be run against a site by using  policy:audit  and passing the policy name and site target:  ./vendor/bin/drutiny policy:audit Drupal-8:PageCacheExpiry @drupalvm.dev  The command above would audit the site that resolved to the  @drupalvm.dev  drush alias against the  Drupal-8:PageCacheExpiry  policy.  Some policies have parameters you can specify which can be passed in at call time. Use  policy:info  to find out more about the parameters available for a check.  ./vendor/bin/drutiny policy:audit -p max_age=600 Drupal-8:PageCacheExpiry @drupalvm.dev  Audits are simple self contained classes that are simple to read and understand. Policies are simple YAML files that determine how to use Audit classes. Drutiny can be extended very easily to audit for your own unique requirements. Pull requests are welcome as well, please see the  contributing guide .", 
            "title": "Running an Audit"
        }, 
        {
            "location": "/#remediation", 
            "text": "Some checks have redemptive capability. Passing the  --remediate  flag into the call with \"auto-heal\" the site if the check fails on first pass.  ./vendor/bin/drutiny policy:audit -p max_age=600 --remediate Drupal-8:PageCacheExpiry @drupalvm.dev", 
            "title": "Remediation"
        }, 
        {
            "location": "/#running-a-profile-of-checks", 
            "text": "A site audit is running a collection of checks that make up a profile. This allows you to audit against a specific standard, policy or best practice. Drutiny comes with some base profiles which you can find using  profile:list . You can run a profile with  profile:run  in a simlar format to  policy:audit .  ./vendor/bin/drutiny profile:run --remediate d8 @drupalvm.dev  Parameters can not be passed in at runtime for profiles but are instead predefined by the profile itself.", 
            "title": "Running a profile of checks"
        }, 
        {
            "location": "/#creating-your-own-profiles", 
            "text": "The  profile:generate  wizard will help you to produce a profile. stored in the  profiles  directory.", 
            "title": "Creating your own profiles"
        }, 
        {
            "location": "/#customizing-policies-in-profiles", 
            "text": "Profiles allow you to define parameters to fine tune policies within. You can do this by specifying parameters listed in  policy:info  in the profile file:  title: 10s Page Cache Expiry Profile\npolicies:\n    'Drupal-8:PageCacheExpiry':\n      parameters:\n        value: 10", 
            "title": "Customizing policies in profiles"
        }, 
        {
            "location": "/#reporting", 
            "text": "By default, profile runs report to the console but reports can also be exported in html and json formats.  ./vendor/bin/drutiny profile:run --remediate --format=html --report-filename=drupalvm-dev.html d8 drush:@drupalvm.dev", 
            "title": "Reporting"
        }, 
        {
            "location": "/#getting-help", 
            "text": "Because this is a Symfony Console application, you have some other familiar commands:  ./vendor/bin/drutiny help profile:run  In particular, if you use the  -vvv  argument, then you will see all the drush commands, and SSH commands printed to the screen.", 
            "title": "Getting help"
        }, 
        {
            "location": "/#documentation", 
            "text": "You can find more documentation in the  docs  folder.", 
            "title": "Documentation"
        }, 
        {
            "location": "/#credits", 
            "text": "Theodoros Ploumis  for  creating the logo  for Drutiny.", 
            "title": "Credits"
        }, 
        {
            "location": "/getting-started/", 
            "text": "Getting Started\n\n\nThis getting started guide is a tutorial to get you setup with Drutiny and to\nshow you around the tool.\n\n\nStandalone Installation\n\n\nWhile Drutiny can be included as a tool inside of any composer project, running\nit as a standalone tool is the easiest way to get started. The Drutiny \nproject-dev\n\ncomposer project is a great way to get a comprehensive setup going locally and fast.\n\n\ncomposer create-project --no-interaction -s dev drutiny/project-dev drutiny\n\n\n\n\nNote\n: \nDrush\n is also required but not an explicit\ndependency so make sure its available before continuing.\n\n\nThe Executable\n\n\nDrutiny is controlled from the command-line through a Symfony Console executable\ncalled \ndrutiny\n located in composer's \nbin-dir\n directory. For \ndrutiny/project-dev\n,\nthat is located in the \nbin\n directory in the root of the directory.\n\n\n./bin/drutiny\n\n\n\n\nWhen you run it, it should show you all the commands available from it. \nNote\n:\ncomposer's default \nbin-dir\n is \n./vendor/bin\n.\n\n\nDrupal site access via Drush alias\n\n\nBy default, Drutiny depends on Drush alias files to inform Drutiny where the site\nis to audit. We call the site a \ntarget\n. Make sure your target is accessible via\na drush command. You should be able to execute this command if remote:\n\n\ndrush @site.env ssh\n\n\n\n\nWhats in your policy library\n\n\nThe plugins that come with Drutiny contribute domain specific policies that make\nup a local library of policies at your disposal to run against your site. To\nfind out which policies are available, you can use the \npolicy:list\n command.\n\n\n./bin/drutiny policy:list\n\n\n\n\nWhat does a policy do?\n\n\nTo find out more about a policy, you can use the \npolicy:info\n command and pass\nin the \nname\n of the policy:\n\n\n./bin/drutiny policy:info Drupal:AnonSession\n\n\n\n\nAuditing a Policy\n\n\nNow that we're setup, lets try run a Drutiny policy against a site with the\n\npolicy:audit\n command. We'll do this by passing two arguments: \nDrupal:AnonSession\n\nwhich is the name of the policy and \n@site.env\n which should represent\nthe real Drush alias you'll use.\n\n\n./bin/drutiny policy:audit Drupal:AnonSession @site.env\n\n\n\n\nTo see the command line actions Drutiny is taking underneath the hood, run the\ncommand again with the \n-vvv\n option to see the verbose info logged.\n\n\nRunning multiple policies at once\n\n\nWith a \nprofile\n we can group multiple policies together to audit against a\nsingle target.\n\n\nBuilding a profile\n\n\nDrutiny comes with a profile generator to help you kick start building a profile.\nLets start with building a demo profile:\n\n\n./bin/drutiny profile:generate -t 'Demo Profile' -f demo.profile.yml -p Drupal:AnonSession -p Drupal:SyslogEnabled\n\n\n\n\nThe command above will create a new demo profile with two policies and write it\nto a file called \ndemo.profile.yml\n.\n\n\nRunning a profile audit\n\n\nTo run a profile you use \nprofile:run\n and pass in the name of the profile which is\nthe first part of the profile filename. E.g. \ndemo\n will load in the profile from\n\ndemo.profile.yml\n.\n\n\n./bin/drutiny profile:run demo @site.env\n\n\n\n\nCreating a Report\n\n\nDrutiny can export profile runs to HTML, Markdown, Json or by default, it just\npublishes the findings out to the console (see the above command). You can use\nthe \n--format\n option (or \n-f\n) to specify the which format to export to and\nthe \n--report-filename\n option (or \n-o\n) to specify the file to write too.\n\n\n./bin/drutiny profile:run demo @site.env -f html -o demo-report.html\n\n\n\n\nOpen the HTML report in your browser to view the report. From there you could\nalso print it to PDF.", 
            "title": "Getting Started"
        }, 
        {
            "location": "/getting-started/#getting-started", 
            "text": "This getting started guide is a tutorial to get you setup with Drutiny and to\nshow you around the tool.", 
            "title": "Getting Started"
        }, 
        {
            "location": "/getting-started/#standalone-installation", 
            "text": "While Drutiny can be included as a tool inside of any composer project, running\nit as a standalone tool is the easiest way to get started. The Drutiny  project-dev \ncomposer project is a great way to get a comprehensive setup going locally and fast.  composer create-project --no-interaction -s dev drutiny/project-dev drutiny  Note :  Drush  is also required but not an explicit\ndependency so make sure its available before continuing.", 
            "title": "Standalone Installation"
        }, 
        {
            "location": "/getting-started/#the-executable", 
            "text": "Drutiny is controlled from the command-line through a Symfony Console executable\ncalled  drutiny  located in composer's  bin-dir  directory. For  drutiny/project-dev ,\nthat is located in the  bin  directory in the root of the directory.  ./bin/drutiny  When you run it, it should show you all the commands available from it.  Note :\ncomposer's default  bin-dir  is  ./vendor/bin .", 
            "title": "The Executable"
        }, 
        {
            "location": "/getting-started/#drupal-site-access-via-drush-alias", 
            "text": "By default, Drutiny depends on Drush alias files to inform Drutiny where the site\nis to audit. We call the site a  target . Make sure your target is accessible via\na drush command. You should be able to execute this command if remote:  drush @site.env ssh", 
            "title": "Drupal site access via Drush alias"
        }, 
        {
            "location": "/getting-started/#whats-in-your-policy-library", 
            "text": "The plugins that come with Drutiny contribute domain specific policies that make\nup a local library of policies at your disposal to run against your site. To\nfind out which policies are available, you can use the  policy:list  command.  ./bin/drutiny policy:list", 
            "title": "Whats in your policy library"
        }, 
        {
            "location": "/getting-started/#what-does-a-policy-do", 
            "text": "To find out more about a policy, you can use the  policy:info  command and pass\nin the  name  of the policy:  ./bin/drutiny policy:info Drupal:AnonSession", 
            "title": "What does a policy do?"
        }, 
        {
            "location": "/getting-started/#auditing-a-policy", 
            "text": "Now that we're setup, lets try run a Drutiny policy against a site with the policy:audit  command. We'll do this by passing two arguments:  Drupal:AnonSession \nwhich is the name of the policy and  @site.env  which should represent\nthe real Drush alias you'll use.  ./bin/drutiny policy:audit Drupal:AnonSession @site.env  To see the command line actions Drutiny is taking underneath the hood, run the\ncommand again with the  -vvv  option to see the verbose info logged.", 
            "title": "Auditing a Policy"
        }, 
        {
            "location": "/getting-started/#running-multiple-policies-at-once", 
            "text": "With a  profile  we can group multiple policies together to audit against a\nsingle target.", 
            "title": "Running multiple policies at once"
        }, 
        {
            "location": "/getting-started/#building-a-profile", 
            "text": "Drutiny comes with a profile generator to help you kick start building a profile.\nLets start with building a demo profile:  ./bin/drutiny profile:generate -t 'Demo Profile' -f demo.profile.yml -p Drupal:AnonSession -p Drupal:SyslogEnabled  The command above will create a new demo profile with two policies and write it\nto a file called  demo.profile.yml .", 
            "title": "Building a profile"
        }, 
        {
            "location": "/getting-started/#running-a-profile-audit", 
            "text": "To run a profile you use  profile:run  and pass in the name of the profile which is\nthe first part of the profile filename. E.g.  demo  will load in the profile from demo.profile.yml .  ./bin/drutiny profile:run demo @site.env", 
            "title": "Running a profile audit"
        }, 
        {
            "location": "/getting-started/#creating-a-report", 
            "text": "Drutiny can export profile runs to HTML, Markdown, Json or by default, it just\npublishes the findings out to the console (see the above command). You can use\nthe  --format  option (or  -f ) to specify the which format to export to and\nthe  --report-filename  option (or  -o ) to specify the file to write too.  ./bin/drutiny profile:run demo @site.env -f html -o demo-report.html  Open the HTML report in your browser to view the report. From there you could\nalso print it to PDF.", 
            "title": "Creating a Report"
        }, 
        {
            "location": "/reports/", 
            "text": "Working with Reports\n\n\nReports are built from running Drutiny profiles, a collection of policies. To\nbuild a report, use the \nprofile:run\n command. The command requires two\narguments: the name of the profile to run and the reference to the target to\naudit.\n\n\nBy default, Drutiny expects the target to be a drush alias will all the necessary\ncredentials to access the Drupal site.\n\n\nNote\n: Some audits, such as audits from \ndrutiny/http\n and \ndrutiny/cloudflare\n\nexpect a valid URI to be provided.\n\n\nExample usage\n\n\n$ drutiny profile:run test @none\n\n\n\n\nThe above command runs Drutiny's test profile on nothing (@none is an alias\nprovided by drush by default.)\n\n\nFormats\n\n\nDrutiny comes with 3 types of report formats: CLI, \nJSON, \nHTML.\n\nIf you do not specify any report format, the CLI format will be used by default.\n\n\nExample to run a JSON report by using the \"-f\" param.\n\n\n./vendor/bin/drutiny profile:run d8 @drupalvm.dev -f json\n\n\n\n\nor you can use the HTML report with telling Drutiny, where to store the html.\n\n\n./vendor/bin/drutiny profile:run d8 @drupalvm.dev -f html -o ./report1.html\n\n\n\n\nHTML Reports can be customized from the profile run. See the \nprofile documentation\n\nfor more detail.", 
            "title": "Reports"
        }, 
        {
            "location": "/reports/#working-with-reports", 
            "text": "Reports are built from running Drutiny profiles, a collection of policies. To\nbuild a report, use the  profile:run  command. The command requires two\narguments: the name of the profile to run and the reference to the target to\naudit.  By default, Drutiny expects the target to be a drush alias will all the necessary\ncredentials to access the Drupal site.  Note : Some audits, such as audits from  drutiny/http  and  drutiny/cloudflare \nexpect a valid URI to be provided.", 
            "title": "Working with Reports"
        }, 
        {
            "location": "/reports/#example-usage", 
            "text": "$ drutiny profile:run test @none  The above command runs Drutiny's test profile on nothing (@none is an alias\nprovided by drush by default.)", 
            "title": "Example usage"
        }, 
        {
            "location": "/reports/#formats", 
            "text": "Drutiny comes with 3 types of report formats: CLI,  JSON,  HTML. \nIf you do not specify any report format, the CLI format will be used by default.  Example to run a JSON report by using the \"-f\" param.  ./vendor/bin/drutiny profile:run d8 @drupalvm.dev -f json  or you can use the HTML report with telling Drutiny, where to store the html.  ./vendor/bin/drutiny profile:run d8 @drupalvm.dev -f html -o ./report1.html  HTML Reports can be customized from the profile run. See the  profile documentation \nfor more detail.", 
            "title": "Formats"
        }, 
        {
            "location": "/plugins/", 
            "text": "Working with Plugins\n\n\nFind plugins\n\n\nYou can search within composer for Drutiny plugins:\n\n\ncomposer search drutiny\n\n\n\n\nAvailable Druitiny plugins\n\n\n\n\n\n\n\n\nPlugin Name\n\n\nDescription\n\n\n\n\n\n\n\n\n\n\ndrutiny/plugin-drupal-7\n\n\nDrupal 7 plugin for Drutiny\n\n\n\n\n\n\ndrutiny/plugin-drupal-8\n\n\nDrupal 8 plugin for Drutiny\n\n\n\n\n\n\ndrutiny/plugin-distro-common\n\n\nCommon Drutiny policies for Drupal distributions\n\n\n\n\n\n\ndrutiny/cloudflare\n\n\nIntegration with Cloudflare\n\n\n\n\n\n\ndrutiny/acquia\n\n\nAcquia support for the Drutiny audit checker\n\n\n\n\n\n\ndrutiny/http\n\n\nDrutiny auditing and policies on HTTP requests\n\n\n\n\n\n\ndrutiny/sumologic\n\n\nIntegration with SumoLogic\n\n\n\n\n\n\n\n\nInstall plugins\n\n\nInstall plugins via Packagist (default)\n\n\ncomposer require drutiny/acquia 2.x-dev\n\n\n\n\nInstall plugins from a VCS repository\n\n\nIf you want extend Drutiny with some private features, you may want host this without composer and include a VCS repository directly.\n\nRead composer docs\n\n\nTo do so, update the Drutiny composer.json and add your repository.\n\n\n{\n    \nrequire-dev\n: {\n        \ndrutiny/plugin-name\n: \ndev-Drutiny-Plugin\n\n\n    },\n    \nrepositories\n: [\n        {\n            \ntype\n: \nvcs\n,\n            \nurl\n:  \ngit@bitbucket.org:vendor/my-private-repo.git\n,\n            \nreference\n: \nDrutiny-Plugin\n\n        }\n    ]\n}\n\n\n\n\n\nCreating a plugin\n\n\nGetting started\n\n\nWe strongly recommend to not change/ modify drutiny or its plugins directly, instead create a custom plugin and override or extend the existing functionallity.\n\n\nCreate the plugin\n\n\nAs the minimum requirement for an plugin, we need a folder with the name of the plugin and some composer library definitions in a \ncomposer.json\n file.\n\n\n{\n    \nname\n: \ndrutiny/plugin-name\n,\n    \ntype\n: \nlibrary\n,\n    \ndescription\n: \nPlugin for Drutiny\n,\n    \nkeywords\n: [\ndrupal\n, \naudit\n, \ndrush\n, \nssh\n, \nreport\n],\n    \nauthors\n: [\n        {\nname\n: \nBruce Wayne\n, \nemail\n: \nbruce.wayne@example.com\n}\n    ],\n    \nrequire\n: {\n        \ndrutiny/drutiny\n: \n2.x-dev\n,\n        \nsymfony/yaml\n: \n^3.2\n\n    },\n}\n\n\n\n\nCreate custom commands and configuration\n\n\nDrutiny is extensible through a config file where you can add commands,\ntemplates and targets to extend Drutiny's existing ones.\n\n\nAll extensions are registered through a file called \ndrutiny.config.yml\n which\nshould be placed in the root of an extension/plugin library\n\n\nExample for a new command:\n\n\nCommand:\n  - Drutiny\\Acquia\\Command\\SiteFactoryProfileRunCommand\n\n\n\n\nExample for adding a template directory:\n\n\nTemplate:\n  - my-templates\n\n\n\n\nSee \ndocumentation on profiles\n for more information about templates.", 
            "title": "Plugins"
        }, 
        {
            "location": "/plugins/#working-with-plugins", 
            "text": "", 
            "title": "Working with Plugins"
        }, 
        {
            "location": "/plugins/#find-plugins", 
            "text": "You can search within composer for Drutiny plugins:  composer search drutiny", 
            "title": "Find plugins"
        }, 
        {
            "location": "/plugins/#available-druitiny-plugins", 
            "text": "Plugin Name  Description      drutiny/plugin-drupal-7  Drupal 7 plugin for Drutiny    drutiny/plugin-drupal-8  Drupal 8 plugin for Drutiny    drutiny/plugin-distro-common  Common Drutiny policies for Drupal distributions    drutiny/cloudflare  Integration with Cloudflare    drutiny/acquia  Acquia support for the Drutiny audit checker    drutiny/http  Drutiny auditing and policies on HTTP requests    drutiny/sumologic  Integration with SumoLogic", 
            "title": "Available Druitiny plugins"
        }, 
        {
            "location": "/plugins/#install-plugins", 
            "text": "", 
            "title": "Install plugins"
        }, 
        {
            "location": "/plugins/#install-plugins-via-packagist-default", 
            "text": "composer require drutiny/acquia 2.x-dev", 
            "title": "Install plugins via Packagist (default)"
        }, 
        {
            "location": "/plugins/#install-plugins-from-a-vcs-repository", 
            "text": "If you want extend Drutiny with some private features, you may want host this without composer and include a VCS repository directly. Read composer docs  To do so, update the Drutiny composer.json and add your repository.  {\n     require-dev : {\n         drutiny/plugin-name :  dev-Drutiny-Plugin \n\n    },\n     repositories : [\n        {\n             type :  vcs ,\n             url :   git@bitbucket.org:vendor/my-private-repo.git ,\n             reference :  Drutiny-Plugin \n        }\n    ]\n}", 
            "title": "Install plugins from a VCS repository"
        }, 
        {
            "location": "/plugins/#creating-a-plugin", 
            "text": "", 
            "title": "Creating a plugin"
        }, 
        {
            "location": "/plugins/#getting-started", 
            "text": "We strongly recommend to not change/ modify drutiny or its plugins directly, instead create a custom plugin and override or extend the existing functionallity.", 
            "title": "Getting started"
        }, 
        {
            "location": "/plugins/#create-the-plugin", 
            "text": "As the minimum requirement for an plugin, we need a folder with the name of the plugin and some composer library definitions in a  composer.json  file.  {\n     name :  drutiny/plugin-name ,\n     type :  library ,\n     description :  Plugin for Drutiny ,\n     keywords : [ drupal ,  audit ,  drush ,  ssh ,  report ],\n     authors : [\n        { name :  Bruce Wayne ,  email :  bruce.wayne@example.com }\n    ],\n     require : {\n         drutiny/drutiny :  2.x-dev ,\n         symfony/yaml :  ^3.2 \n    },\n}", 
            "title": "Create the plugin"
        }, 
        {
            "location": "/plugins/#create-custom-commands-and-configuration", 
            "text": "Drutiny is extensible through a config file where you can add commands,\ntemplates and targets to extend Drutiny's existing ones.  All extensions are registered through a file called  drutiny.config.yml  which\nshould be placed in the root of an extension/plugin library  Example for a new command:  Command:\n  - Drutiny\\Acquia\\Command\\SiteFactoryProfileRunCommand  Example for adding a template directory:  Template:\n  - my-templates  See  documentation on profiles  for more information about templates.", 
            "title": "Create custom commands and configuration"
        }, 
        {
            "location": "/CONTRIBUTING/", 
            "text": "Support\n\n\nPlease post an issue on the \nGitHub issue queue\n including the following information:\n\n\n\n\nYour version of Drutiny, \ncomposer info drutiny/drutiny\n\n\nYour operating system\n\n\nThe \nfull\n log output of your Drutiny command, wrapped in a \ncodeblock\n (with sensitive information redacted).\n\n\n\n\nIn seeking help, please keep the following points in mind:\n\n\n\n\nDrutiny is distributed under the GPLv2 license; WITHOUT ANY WARRANTY.\n\n\nThe project maintainers are under no obligation to respond to support requests, feature requests, or pull requests.\n\n\nAll contributions to Drutiny will be reviewed for compliance with Drupal Coding Standards and best practices as defined by the project maintainer.\n\n\n\n\nContributing to Drutiny\n\n\nIn general the Drutiny team will be looking to find ways to help people contribute. Pull requests are definitely appreciated.\n\n\nSmall changes that will be accepted\n\n\n\n\nNew audits and policies that others can utilize. Ideally they will have arguments where needed to make this as easy as possible to adapt for other sites.\n\n\nSpelling typos, grammar fixes etc\n\n\nBetter comments and code style\n\n\nTests\n\n\n\n\nPlease consider these libraries as good examples:\n\n\n\n\nDrupal 7 Plugin\n\n\nDrupal 8 Plugin\n\n\nDrupal Distribution\n\n\n\n\nLarger changes that will be accepted\n\n\n\n\nNew integrations with other tools, where they provide significant value\n\n\nAny better OO techniques and code organisation\n\n\nAny open issues currently in the issue queue\n\n\nAnything that involves making the codebase more testible\n\n\nRemoving technical debt\n\n\n\n\nChanges that will be (most likely) rejected\n\n\n\n\nAnything that requires special sauce in order to run\n\n\nVendor specific checks that cannot be re-used\n\n\n\n\nThese types of changes are better off in third-party libraries.\n\n\nCoding standards\n\n\nThis project adheres to the same coding standards as the Drupal project.\n\n\nHow to check code style\n\n\n./vendor/bin/phpcs --config-set installed_paths ../../drupal/coder/coder_sniffer\n./vendor/bin/phpcs --standard=Drupal --extensions=php,css,txt,md src/ -sp\n\n\n\n\nHow to fix using phpcbf\n\n\n./vendor/bin/phpcbf --standard=Drupal --extensions=php,css,txt,md src/\n\n\n\n\nTests\n\n\nPHPunit is being used in Drutiny, and ideally every check should have a simple test class to accompany it.\n\n\nHow to run PHPunit\n\n\n./vendor/bin/phpunit\n\n\n\n\nYou can run a subset of the tests by running just a group:\n\n\n$ ./vendor/bin/phpunit --list-groups\nPHPUnit 5.7.15 by Sebastian Bergmann and contributors.\n\nAvailable test group(s):\n - base\n - check\n - report\n\n\n\n\ne.g.\n\n\n./vendor/bin/phpunit --group base\n./vendor/bin/phpunit --group check\n./vendor/bin/phpunit --group report", 
            "title": "Contributing"
        }, 
        {
            "location": "/CONTRIBUTING/#support", 
            "text": "Please post an issue on the  GitHub issue queue  including the following information:   Your version of Drutiny,  composer info drutiny/drutiny  Your operating system  The  full  log output of your Drutiny command, wrapped in a  codeblock  (with sensitive information redacted).   In seeking help, please keep the following points in mind:   Drutiny is distributed under the GPLv2 license; WITHOUT ANY WARRANTY.  The project maintainers are under no obligation to respond to support requests, feature requests, or pull requests.  All contributions to Drutiny will be reviewed for compliance with Drupal Coding Standards and best practices as defined by the project maintainer.", 
            "title": "Support"
        }, 
        {
            "location": "/CONTRIBUTING/#contributing-to-drutiny", 
            "text": "In general the Drutiny team will be looking to find ways to help people contribute. Pull requests are definitely appreciated.", 
            "title": "Contributing to Drutiny"
        }, 
        {
            "location": "/CONTRIBUTING/#small-changes-that-will-be-accepted", 
            "text": "New audits and policies that others can utilize. Ideally they will have arguments where needed to make this as easy as possible to adapt for other sites.  Spelling typos, grammar fixes etc  Better comments and code style  Tests   Please consider these libraries as good examples:   Drupal 7 Plugin  Drupal 8 Plugin  Drupal Distribution", 
            "title": "Small changes that will be accepted"
        }, 
        {
            "location": "/CONTRIBUTING/#larger-changes-that-will-be-accepted", 
            "text": "New integrations with other tools, where they provide significant value  Any better OO techniques and code organisation  Any open issues currently in the issue queue  Anything that involves making the codebase more testible  Removing technical debt", 
            "title": "Larger changes that will be accepted"
        }, 
        {
            "location": "/CONTRIBUTING/#changes-that-will-be-most-likely-rejected", 
            "text": "Anything that requires special sauce in order to run  Vendor specific checks that cannot be re-used   These types of changes are better off in third-party libraries.", 
            "title": "Changes that will be (most likely) rejected"
        }, 
        {
            "location": "/CONTRIBUTING/#coding-standards", 
            "text": "This project adheres to the same coding standards as the Drupal project.", 
            "title": "Coding standards"
        }, 
        {
            "location": "/CONTRIBUTING/#how-to-check-code-style", 
            "text": "./vendor/bin/phpcs --config-set installed_paths ../../drupal/coder/coder_sniffer\n./vendor/bin/phpcs --standard=Drupal --extensions=php,css,txt,md src/ -sp", 
            "title": "How to check code style"
        }, 
        {
            "location": "/CONTRIBUTING/#how-to-fix-using-phpcbf", 
            "text": "./vendor/bin/phpcbf --standard=Drupal --extensions=php,css,txt,md src/", 
            "title": "How to fix using phpcbf"
        }, 
        {
            "location": "/CONTRIBUTING/#tests", 
            "text": "PHPunit is being used in Drutiny, and ideally every check should have a simple test class to accompany it.", 
            "title": "Tests"
        }, 
        {
            "location": "/CONTRIBUTING/#how-to-run-phpunit", 
            "text": "./vendor/bin/phpunit  You can run a subset of the tests by running just a group:  $ ./vendor/bin/phpunit --list-groups\nPHPUnit 5.7.15 by Sebastian Bergmann and contributors.\n\nAvailable test group(s):\n - base\n - check\n - report  e.g.  ./vendor/bin/phpunit --group base\n./vendor/bin/phpunit --group check\n./vendor/bin/phpunit --group report", 
            "title": "How to run PHPunit"
        }, 
        {
            "location": "/audits/", 
            "text": "Writing Audits for Drutiny\n\n\nA Drutiny \naudit\n is a PHP class that executes a \npolicy\n defined in YAML.\nAudit classes do the heavy lifting for a policy and are ideally abstract enough\nto support multiple policies. Such an example is the \nModule Enabled\n\nclass which checks if a module is enabled. However, the module it checks is set\nby the policy. In this way, may policies can be created using the same audit\nclass.\n\n\nGetting Started\n\n\nAn audit class should live under an \nAudit\n folder in a PSR-4 directory structure\nand extend from \nDrutiny\\Audit\n.\n\n\n?php\nnamespace Path\\to\\Audit;\nuse Drutiny\\Audit;\n\n/**\n * Generic module is disabled check.\n */\nclass FooAssesor extends Audit {\n\n\n\n\n\nAn \nAudit\n class requires a single method also called \naudit\n. Its passed in a \nDrutiny\\Sandbox\\Sandbox\n object which holds all tools available to running an audit.\n\n\n?php\n\nuse Drutiny\\Sandbox\\Sandbox;\n\n// ...\n\npublic function audit(Sandbox $sandbox)\n{\n\n}\n\n\n\n\n\nThe Sandbox\n\n\nThe Sandbox object passed to the check method contains access to drivers you may use in your audit such as \ndrush\n.\n\n\n?php\n/**\n * @inheritDoc\n */\npublic function audit(Sandbox $sandbox) {\n  // Use drush to confirm Drupal settings deny llamas.\n  $config = $sandbox-\ndrush(['format' =\n 'json'])\n                    -\nconfigGet('llamas.settings', 'allowed');\n  $denied = $config['llamas.settings:allowed'] == FALSE;\n\n  // Confirm llamas have not accessed the site.\n  $lama_access = $sandbox-\nexec('grep llamas /var/log/apache/access.log | grep -v 403');\n\n  // Return TRUE/FALSE is the same as Audit::SUCCESS or Audit::FAILURE\n  return $denied \n empty($lama_access);\n}\n\n\n\n\nReturn values\n\n\nThe audit expects a returned value to indicate the outcome of the audit. The follow table describes the return options and their meaning.\n\n\n\n\n\n\n\n\nReturn Value\n\n\nPurpose\n\n\n\n\n\n\n\n\n\n\nDrutiny\\Audit::SUCCESS\n\n\nThe policy successfully passed the audit.\n\n\n\n\n\n\nDrutiny\\Audit::PASS\n\n\nSame as \nAudit::SUCCESS\n\n\n\n\n\n\nDrutiny\\Audit::FAILURE\n\n\nThe policy failed to pass the audit.\n\n\n\n\n\n\nDrutiny\\Audit::FAIL\n\n\nSame as \nAudit::FAILURE\n\n\n\n\n\n\nDrutiny\\Audit::NOTICE\n\n\nAn audit returned non-assertive information.\n\n\n\n\n\n\nDrutiny\\Audit::WARNING\n\n\nAn audit returned \nsuccessful\n but with a warning.\n\n\n\n\n\n\nDrutiny\\Audit::WARNING_FAIL\n\n\nAn audit returned a \nfailure\n but with a warning.\n\n\n\n\n\n\nDrutiny\\Audit::ERROR\n\n\nAn audit did not complete and returned an error.\n\n\n\n\n\n\nDrutiny\\Audit::NOT_APPLICABLE\n\n\nAn audit was not applicable to the target.\n\n\n\n\n\n\n\n\nIn addition to using Return Values, audits can also return \nTRUE\n, \nFALSE\n and\n\nNULL\n values which correlate to \nDrutiny\\Audit::SUCCESS\n, \nDrutiny\\Audit::FAILURE\n\nand \nDrutiny\\Audit::NOT_APPLICABLE\n respectively.\n\n\nAudit Prerequisites\n\n\nIn order to keep audit methods as lean as possible and to focus on evaluating the\nsuccess/failure of the task at hand, Drutiny Audit classess support the ability\nto validate prerequisites before attempting an audit. These are called \nrequire\n\nmethods.\n\n\nAny protected method on an Audit class that starts with the term \"require\" will\nbe considered a prerequisite to pass prior to an audit being run.\n\n\n?php\n\nnamespace Path\\to\\Audit;\nuse Drutiny\\Audit;\nuse Drutiny\\Sandbox\\Sandbox;\nuse Drutiny\\Target\\DrushTarget;\n\nclass DrushVersionCheck extends Audit {\n\n  /**\n   * This will be called before audit().\n   *\n   * Must return TRUE to continue audit.\n   */\n  protected function requireDrushTarget(Sandbox $sandbox)\n  {\n    return $sandbox-\ngetTarget() instanceof DrushTarget;\n  }\n\n  public function audit(Sandbox $sandbox) {\n\n\n\n\n\nRemediation\n\n\nRemediation is an optional capability your \nAudit\n can support.\nTo do so, it must implement \nDrutiny\\RemediableInterface\n.\n\n\nWhen policies and profiles are run, they can optionally opt into to auto-remediation which will call the \nremediation\n method if the audit method returns FALSE.\n\n\n?php\n\nnamespace Path\\to\\Audit;\nuse Drutiny\\Audit;\nuse Drutiny\\Sandbox\\Sandbox;\nuse Drutiny\\RemediableInterface;\n\n/**\n * Generic module is disabled check.\n */\nclass FooAssesor extends Audit implements RemediableInterface {\n\n// ...\n\n/**\n * @inheritDoc\n */\npublic function remediate(Sandbox $sandbox) {\n  // This calls: drush config-set -y llamas.settings allowed 0\n  $sandbox-\ndrush()-\nconfigSet('-y', 'llamas.settings', 'allowed', 0);\n\n  // Re-check now the config should have changed.\n  return $this-\naudit($sandbox);\n}\n\n\n\n\nParameters\n\n\nParameters allow you to configure the audit based on the runtime environment.\nFor example, the page cache audit contains parameters to allow you to audit what the page cache \nmax_age\n setting should be.\n\n\nParameters are defined as annotations in the audit class. This allows policy writers\nto understand how to use the parameters when integrating with a specific audit.\n\n\n?php\n\nnamespace Path\\to\\Audit;\nuse Drutiny\\Audit;\nuse Drutiny\\Sandbox\\Sandbox;\nuse Drutiny\\RemediableInterface;\nuse Drutiny\\Annotation\\Param;\n\n/**\n * Generic module is disabled check.\n * @Param(\n *  name = \nfoo\n,\n *  type = \nstring\n,\n *  description = \nA measure of foo to apply to denied llamas\n,\n *  default = \nbaz\n,\n * )\n */\nclass FooAssesor extends Audit implements RemediableInterface {\n\n\n\n\nParameters can be overwritten in policies:\n\n\n# Parameters mentioned in bar.policy.yml\nclass: \\Drutiny\\path\\to\\FooAssesor\nparameters:\n  foo:\n    type: string\n    description: \nA measure of foo to apply to denied llamas\n\n    default: bar\n\n\n\n\nParameters are then used inside the audit and remediation methods to allow elements\nof the audit to be more configurable and extensible to other implementations:\n\n\n\n\n?php\n/**\n * @inheritDoc\n */\npublic function audit(Sandbox $sandbox) {\n  $foo = $sandbox-\ngetParameter('foo');\n\n  $config = $sandbox-\ndrush(['format' =\n 'json'])\n                    -\nconfigGet('llamas.settings', 'foo');\n  $this-\nsetParameter('actual_foo', $config['llamas.settings:foo']);\n\n  // Return TRUE/FALSE is the same as Audit::SUCCESS or Audit::FAILURE\n  return $foo == $config['llamas.settings:foo'];\n}\n\n\n\n\nYou can use \n$sandbox-\nsetParameter()\n to set parameters that maybe used to render the results of an audit or remediation.\n\n\nTokens\n\n\nTokens are parameters that are available to render in the output messaging of the policy. E.g. success, failure, warning and description messages. All parameters are implicitly tokens, but in addition, an audit may set parameters not used for the purposes of the audit but purely for policy messaging.\n\n\n?php\n\nnamespace Path\\to\\Audit;\nuse Drutiny\\Audit;\nuse Drutiny\\Sandbox\\Sandbox;\nuse Drutiny\\RemediableInterface;\nuse Drutiny\\Annotation\\Param;\nuse Drutiny\\Annotation\\Token;\n\n/**\n * Generic module is disabled check.\n * @Param(\n *  name = \nfoo\n,\n *  type = \nstring\n,\n *  description = \nA measure of foo to apply to denied llamas\n,\n *  default = \nbaz\n,\n * )\n * @Token(\n *  name = \nactual_foo\n,\n *  type = \nstring\n,\n *  description = \nConfig setting for llamas.settings:foo\n\n * )\n */\nclass FooAssesor extends Audit implements RemediableInterface {\n/**\n * @inheritDoc\n */\npublic function audit(Sandbox $sandbox) {\n  $foo = $sandbox-\ngetParameter('foo');\n\n  $config = $sandbox-\ndrush(['format' =\n 'json'])\n                    -\nconfigGet('llamas.settings', 'foo');\n  $this-\nsetParameter('actual_foo', $config['llamas.settings:foo']);\n\n  // Return TRUE/FALSE is the same as Audit::SUCCESS or Audit::FAILURE\n  return $foo == $config['llamas.settings:foo'];\n}", 
            "title": "Audit"
        }, 
        {
            "location": "/audits/#writing-audits-for-drutiny", 
            "text": "A Drutiny  audit  is a PHP class that executes a  policy  defined in YAML.\nAudit classes do the heavy lifting for a policy and are ideally abstract enough\nto support multiple policies. Such an example is the  Module Enabled \nclass which checks if a module is enabled. However, the module it checks is set\nby the policy. In this way, may policies can be created using the same audit\nclass.", 
            "title": "Writing Audits for Drutiny"
        }, 
        {
            "location": "/audits/#getting-started", 
            "text": "An audit class should live under an  Audit  folder in a PSR-4 directory structure\nand extend from  Drutiny\\Audit .  ?php\nnamespace Path\\to\\Audit;\nuse Drutiny\\Audit;\n\n/**\n * Generic module is disabled check.\n */\nclass FooAssesor extends Audit {  An  Audit  class requires a single method also called  audit . Its passed in a  Drutiny\\Sandbox\\Sandbox  object which holds all tools available to running an audit.  ?php\n\nuse Drutiny\\Sandbox\\Sandbox;\n\n// ...\n\npublic function audit(Sandbox $sandbox)\n{\n\n}", 
            "title": "Getting Started"
        }, 
        {
            "location": "/audits/#the-sandbox", 
            "text": "The Sandbox object passed to the check method contains access to drivers you may use in your audit such as  drush .  ?php\n/**\n * @inheritDoc\n */\npublic function audit(Sandbox $sandbox) {\n  // Use drush to confirm Drupal settings deny llamas.\n  $config = $sandbox- drush(['format' =  'json'])\n                    - configGet('llamas.settings', 'allowed');\n  $denied = $config['llamas.settings:allowed'] == FALSE;\n\n  // Confirm llamas have not accessed the site.\n  $lama_access = $sandbox- exec('grep llamas /var/log/apache/access.log | grep -v 403');\n\n  // Return TRUE/FALSE is the same as Audit::SUCCESS or Audit::FAILURE\n  return $denied   empty($lama_access);\n}", 
            "title": "The Sandbox"
        }, 
        {
            "location": "/audits/#return-values", 
            "text": "The audit expects a returned value to indicate the outcome of the audit. The follow table describes the return options and their meaning.     Return Value  Purpose      Drutiny\\Audit::SUCCESS  The policy successfully passed the audit.    Drutiny\\Audit::PASS  Same as  Audit::SUCCESS    Drutiny\\Audit::FAILURE  The policy failed to pass the audit.    Drutiny\\Audit::FAIL  Same as  Audit::FAILURE    Drutiny\\Audit::NOTICE  An audit returned non-assertive information.    Drutiny\\Audit::WARNING  An audit returned  successful  but with a warning.    Drutiny\\Audit::WARNING_FAIL  An audit returned a  failure  but with a warning.    Drutiny\\Audit::ERROR  An audit did not complete and returned an error.    Drutiny\\Audit::NOT_APPLICABLE  An audit was not applicable to the target.     In addition to using Return Values, audits can also return  TRUE ,  FALSE  and NULL  values which correlate to  Drutiny\\Audit::SUCCESS ,  Drutiny\\Audit::FAILURE \nand  Drutiny\\Audit::NOT_APPLICABLE  respectively.", 
            "title": "Return values"
        }, 
        {
            "location": "/audits/#audit-prerequisites", 
            "text": "In order to keep audit methods as lean as possible and to focus on evaluating the\nsuccess/failure of the task at hand, Drutiny Audit classess support the ability\nto validate prerequisites before attempting an audit. These are called  require \nmethods.  Any protected method on an Audit class that starts with the term \"require\" will\nbe considered a prerequisite to pass prior to an audit being run.  ?php\n\nnamespace Path\\to\\Audit;\nuse Drutiny\\Audit;\nuse Drutiny\\Sandbox\\Sandbox;\nuse Drutiny\\Target\\DrushTarget;\n\nclass DrushVersionCheck extends Audit {\n\n  /**\n   * This will be called before audit().\n   *\n   * Must return TRUE to continue audit.\n   */\n  protected function requireDrushTarget(Sandbox $sandbox)\n  {\n    return $sandbox- getTarget() instanceof DrushTarget;\n  }\n\n  public function audit(Sandbox $sandbox) {", 
            "title": "Audit Prerequisites"
        }, 
        {
            "location": "/audits/#remediation", 
            "text": "Remediation is an optional capability your  Audit  can support.\nTo do so, it must implement  Drutiny\\RemediableInterface .  When policies and profiles are run, they can optionally opt into to auto-remediation which will call the  remediation  method if the audit method returns FALSE.  ?php\n\nnamespace Path\\to\\Audit;\nuse Drutiny\\Audit;\nuse Drutiny\\Sandbox\\Sandbox;\nuse Drutiny\\RemediableInterface;\n\n/**\n * Generic module is disabled check.\n */\nclass FooAssesor extends Audit implements RemediableInterface {\n\n// ...\n\n/**\n * @inheritDoc\n */\npublic function remediate(Sandbox $sandbox) {\n  // This calls: drush config-set -y llamas.settings allowed 0\n  $sandbox- drush()- configSet('-y', 'llamas.settings', 'allowed', 0);\n\n  // Re-check now the config should have changed.\n  return $this- audit($sandbox);\n}", 
            "title": "Remediation"
        }, 
        {
            "location": "/audits/#parameters", 
            "text": "Parameters allow you to configure the audit based on the runtime environment.\nFor example, the page cache audit contains parameters to allow you to audit what the page cache  max_age  setting should be.  Parameters are defined as annotations in the audit class. This allows policy writers\nto understand how to use the parameters when integrating with a specific audit.  ?php\n\nnamespace Path\\to\\Audit;\nuse Drutiny\\Audit;\nuse Drutiny\\Sandbox\\Sandbox;\nuse Drutiny\\RemediableInterface;\nuse Drutiny\\Annotation\\Param;\n\n/**\n * Generic module is disabled check.\n * @Param(\n *  name =  foo ,\n *  type =  string ,\n *  description =  A measure of foo to apply to denied llamas ,\n *  default =  baz ,\n * )\n */\nclass FooAssesor extends Audit implements RemediableInterface {  Parameters can be overwritten in policies:  # Parameters mentioned in bar.policy.yml\nclass: \\Drutiny\\path\\to\\FooAssesor\nparameters:\n  foo:\n    type: string\n    description:  A measure of foo to apply to denied llamas \n    default: bar  Parameters are then used inside the audit and remediation methods to allow elements\nof the audit to be more configurable and extensible to other implementations:   ?php\n/**\n * @inheritDoc\n */\npublic function audit(Sandbox $sandbox) {\n  $foo = $sandbox- getParameter('foo');\n\n  $config = $sandbox- drush(['format' =  'json'])\n                    - configGet('llamas.settings', 'foo');\n  $this- setParameter('actual_foo', $config['llamas.settings:foo']);\n\n  // Return TRUE/FALSE is the same as Audit::SUCCESS or Audit::FAILURE\n  return $foo == $config['llamas.settings:foo'];\n}  You can use  $sandbox- setParameter()  to set parameters that maybe used to render the results of an audit or remediation.", 
            "title": "Parameters"
        }, 
        {
            "location": "/audits/#tokens", 
            "text": "Tokens are parameters that are available to render in the output messaging of the policy. E.g. success, failure, warning and description messages. All parameters are implicitly tokens, but in addition, an audit may set parameters not used for the purposes of the audit but purely for policy messaging.  ?php\n\nnamespace Path\\to\\Audit;\nuse Drutiny\\Audit;\nuse Drutiny\\Sandbox\\Sandbox;\nuse Drutiny\\RemediableInterface;\nuse Drutiny\\Annotation\\Param;\nuse Drutiny\\Annotation\\Token;\n\n/**\n * Generic module is disabled check.\n * @Param(\n *  name =  foo ,\n *  type =  string ,\n *  description =  A measure of foo to apply to denied llamas ,\n *  default =  baz ,\n * )\n * @Token(\n *  name =  actual_foo ,\n *  type =  string ,\n *  description =  Config setting for llamas.settings:foo \n * )\n */\nclass FooAssesor extends Audit implements RemediableInterface {\n/**\n * @inheritDoc\n */\npublic function audit(Sandbox $sandbox) {\n  $foo = $sandbox- getParameter('foo');\n\n  $config = $sandbox- drush(['format' =  'json'])\n                    - configGet('llamas.settings', 'foo');\n  $this- setParameter('actual_foo', $config['llamas.settings:foo']);\n\n  // Return TRUE/FALSE is the same as Audit::SUCCESS or Audit::FAILURE\n  return $foo == $config['llamas.settings:foo'];\n}", 
            "title": "Tokens"
        }, 
        {
            "location": "/sandbox/", 
            "text": "Sandbox\n\n\nThe Sandbox is a runtime object that execute policies against an audit. It\ncontains access to environmental tools needed to audit and remediate sites\nagainst the policies executed.\n\n\nexec\n\n\nexec\n is the function to give you access to the target's OS command line.\nUse this function to run any underlying shell commands.\n\n\n?php\n\n$output = $sandbox-\nexec('ls -l');\n\n\n\n\nlocalExec\n\n\nTest targets can be remote (e.g. Drush can specify access to remove Drupal\nsites). In these instances \nexec\n will execute on the remote server. If the\ncommand you're executing should always run on the same environment that Drutiny\nis running from then you should instead use \nlocalExec\n.\n\n\n?php\n$date = $sandbox-\nlocalExec('date +%Y-%m-%d %H:%i');\n\n\n\n\ndrush\n\n\nDrush commands can be run against Drupal targets using the Sandbox::drush() method.\nWhere drush commands are normally separated by hyphens, Drutiny supports camel\ncase naming.\n\n\n?php\n\n$list = $sandbox-\ndrush(['format' =\n 'json'])-\npmList();\n\n\n\n\nWhere supported, if json format is requested as illustrated above, drutiny will parse the response and return the output in PHP.\n\n\ngetParameter\n\n\nParameters that are set in the command line, profile or by the policy can be\naccessed using Sandbox::getParameter. Audits may specify default values for\nparameters if they choose.\n\n\n?php\n\n$name = $sandbox-\ngetParameter('module_name', 'shield');\n\n\n\n\nsetParameter\n\n\nParameters to be used in the rendered messages of the policy can be set using\nSandbox::setParameter.\n\n\nParameters are rendered through \nmustache\n templating\n\n\n?php\n\n$sandbox-\nsetParameter('module_status', 'enabled');", 
            "title": "Sandbox"
        }, 
        {
            "location": "/sandbox/#sandbox", 
            "text": "The Sandbox is a runtime object that execute policies against an audit. It\ncontains access to environmental tools needed to audit and remediate sites\nagainst the policies executed.", 
            "title": "Sandbox"
        }, 
        {
            "location": "/sandbox/#exec", 
            "text": "exec  is the function to give you access to the target's OS command line.\nUse this function to run any underlying shell commands.  ?php\n\n$output = $sandbox- exec('ls -l');", 
            "title": "exec"
        }, 
        {
            "location": "/sandbox/#localexec", 
            "text": "Test targets can be remote (e.g. Drush can specify access to remove Drupal\nsites). In these instances  exec  will execute on the remote server. If the\ncommand you're executing should always run on the same environment that Drutiny\nis running from then you should instead use  localExec .  ?php\n$date = $sandbox- localExec('date +%Y-%m-%d %H:%i');", 
            "title": "localExec"
        }, 
        {
            "location": "/sandbox/#drush", 
            "text": "Drush commands can be run against Drupal targets using the Sandbox::drush() method.\nWhere drush commands are normally separated by hyphens, Drutiny supports camel\ncase naming.  ?php\n\n$list = $sandbox- drush(['format' =  'json'])- pmList();  Where supported, if json format is requested as illustrated above, drutiny will parse the response and return the output in PHP.", 
            "title": "drush"
        }, 
        {
            "location": "/sandbox/#getparameter", 
            "text": "Parameters that are set in the command line, profile or by the policy can be\naccessed using Sandbox::getParameter. Audits may specify default values for\nparameters if they choose.  ?php\n\n$name = $sandbox- getParameter('module_name', 'shield');", 
            "title": "getParameter"
        }, 
        {
            "location": "/sandbox/#setparameter", 
            "text": "Parameters to be used in the rendered messages of the policy can be set using\nSandbox::setParameter.  Parameters are rendered through  mustache  templating  ?php\n\n$sandbox- setParameter('module_status', 'enabled');", 
            "title": "setParameter"
        }, 
        {
            "location": "/policy/", 
            "text": "Policy\n\n\nPolicies are structured YAML files that provide the human readable context for\nan audit. Drutiny scans for these files and looks for files ending in \n.policy.yml\n.\nThe convention is to store these files in a directory called \nPolicy\n.\n\n\nView list of policies\n managed under the Drutiny project.\n\n\nPolicy structure\n\n\ntitle (required)\n\n\nThe human readable name and title of a given policy. The title should accurately\nindicate what the audit is for in as few words as possible. An expanded context\ncan be given in the \ndescription\n field.\n\n\ntitle: Shield module is enabled\n\n\n\n\nname (required)\n\n\nThe machine readable name of the policy. This is used to call the policy in\n\npolicy:audit\n and to list in profiles. The naming convention is to use camel\ncase and to delineate namespaces with colons.\n\n\nname: Drupal:ShieldEnabled\n\n\n\n\nclass (required)\n\n\nThe audit class used to assess the policy. The entire namespace should be given\nincluding a leading forward slash. If this class does not exist, Drutiny will\nfail when attempting to use this policy.\n\n\nclass: \\Drutiny\\Audit\\Drupal\\ModuleEnabled\n\n\n\n\ntype (default: audit)\n\n\nPolicies can be of two types: audit (the default) or data.\n\n\nAudit types evaluate the target for a pass/fail result. Data types simply\ncollect and display the data.\n\n\nThis property helps define how to best display the policy in an HTML report.\n\n\ntype: data\n\n\n\n\ndescription (required)\n\n\nA human readable description of the policy. The description should be informative\nenough for a human to read the description and be able to interpret the audit\nfindings.\n\n\nThis field is interpreted as \nMarkdown\n\n\ndescription: |\n  Using the pipe (|) symbol in yaml,\n  I'm able to provide my description\n  across multiple lines.\n\n\n\n\nsuccess (required)\n\n\nThe success message to provide if the audit returns successfully.\nThis field supports \nmustache templates\n\nto display parameters given at runtime or tokens generated by the audit.\n\n\nThis field is interpreted as \nMarkdown\n\n\nsuccess: The module {{module_name}} is enabled.\n\n\n\n\nfailure (required)\n\n\nIf the audit fails or is unable to complete due to an error, this message will\nbe displayed. This field supports \nmustache templates\n\nto display parameters given at runtime or generated by the audit.\n\n\nThis field is interpreted as \nMarkdown\n\n\nfailure: {{module_name}} is not enabled.\n\n\n\n\nremediation (required)\n\n\nThis text is displayed to advise the reader how to go about remediating the policy.\nThis field supports \nmustache templates\n\nto display parameters given at runtime or tokens generated by the audit.\n\n\nThis field is interpreted as \nMarkdown\n\n\nremediation: |\n  Please enable the {{module_name}} module using drush\n  `drush en {{module_name}} -y`\n\n\n\n\nparameters\n\n\nParameters allow a policy to define values for variables used by the Audit. They\nare also used in \npolicy:info\n to inform on the parameters available to customize.\nA parameter consists of three key value pairs:\n\n\n\n\ndefault\n (required): The actual value to pass through to the audit.\n\n\ntype\n: The data type of the parameter. Used to advise profile builders on how to use the parameter.\n\n\ndescription\n: A description of what the parameter is used for. Used to advise profile builders.\n\n\n\n\nparameters:\n  module_name:\n    default: shield\n    type: string\n    description: The name of the module to check is enabled.\n\n\n\n\ntags\n\n\nThe tags key is simply a mechanism to allow policies to be grouped together.\nFor example \"Drupal 7\" or \"Performance\".\n\n\ntags:\n  - Drupal 7\n  - Performance\n\n\n\n\ndepends\n\n\nPolicies can depend on other policies meaning that all policies specified in this\nfield \nmust\n pass successfully for this policy to pass.\n\n\ndepends:\n  - fs:largeFiles\n  - Drupal:SyslogEnabled\n\n\n\n\nseverity\n\n\nNot all policies are of equal importance. Severity allows you to specify how\ncritical a failure or warning is. Possible values in order of importance:\n\n\n\n\nnone (only option for \ndata\n type policies)\n\n\nlow\n\n\nmedium (default)\n\n\nhigh\n\n\ncritical\n\n\n\n\nseverity: 'high'\n\n\n\n\nchart\n\n\nChart declarations allow you to provide metadata about how to build a chart for\ndisplay in the html format. This then produces a chart token that can be used in the success, failure, warning or remediation fields to render a chart in place.\n\n\nchart:\n  requests:\n    type: doughnut\n    labels: tr td:first-child\n    hide-table: false\n    title: Request Distribution by Domain\n    series:\n      - tr td:nth-child(4)\n\n\n\n\nSee \ncharts documentation\n for more information.\n\n\nUsing Tokens in message renders.\n\n\nTokens are variables you can use in the render of policy messaging.\nThis includes success, failure, warning and description fields defined in a policy.\n\n\nAvailable Tokens\n\n\nUse the \npolicy:info\n command to identify which tokens are available in a policy\nfor use in the render.\n\n\n```bash\n$ drutiny policy:info fs:largeFiles\n\n\n\n\nCheck         Large public files\n\n\n\n\nDescription   Large static assets should ideally be housed in other services, e.g. Amazon S3\n                (for files) or Youtube (for videos).\n\n\n\n\nRemediable    No\n\n\n\n\nParameters    max_size:integer\n                  Report files larger than this value measured in megabytes.\n\n\n\n\nTokens        max_size:integer\n                  Report files larger than this value measured in megabytes.\n                issues:array\n                  A list of files that reach the max file size.\n                plural:string\n                  This variable will contain an 's' if there is more than one issue found.\n\n\n\n\nLocation      /mnt/drutiny/Policy/fsLargeFiles.policy.yml\n\n\n\n\n```\n\n\nYou can see in the above example output, that \nfs:largeFiles\n contains three\n tokens: \n_max_size\n, \nissues\n and \nplural\n. These tokens are available to use as\n template variables when writting messaging for a policy:\n\n\nyaml\n failure: |\n   Large public file{{plural}} found over {{max_size}}\n   {{#issues}}\n     - `{{ . }}`\n   {{/issues}}\n\n\nThese variables are rendered using \nmustache templates\n.\n The messages are also parsed by a markdown parser when rendering out to HTML.", 
            "title": "Policy"
        }, 
        {
            "location": "/policy/#policy", 
            "text": "Policies are structured YAML files that provide the human readable context for\nan audit. Drutiny scans for these files and looks for files ending in  .policy.yml .\nThe convention is to store these files in a directory called  Policy .  View list of policies  managed under the Drutiny project.", 
            "title": "Policy"
        }, 
        {
            "location": "/policy/#policy-structure", 
            "text": "", 
            "title": "Policy structure"
        }, 
        {
            "location": "/policy/#title-required", 
            "text": "The human readable name and title of a given policy. The title should accurately\nindicate what the audit is for in as few words as possible. An expanded context\ncan be given in the  description  field.  title: Shield module is enabled", 
            "title": "title (required)"
        }, 
        {
            "location": "/policy/#name-required", 
            "text": "The machine readable name of the policy. This is used to call the policy in policy:audit  and to list in profiles. The naming convention is to use camel\ncase and to delineate namespaces with colons.  name: Drupal:ShieldEnabled", 
            "title": "name (required)"
        }, 
        {
            "location": "/policy/#class-required", 
            "text": "The audit class used to assess the policy. The entire namespace should be given\nincluding a leading forward slash. If this class does not exist, Drutiny will\nfail when attempting to use this policy.  class: \\Drutiny\\Audit\\Drupal\\ModuleEnabled", 
            "title": "class (required)"
        }, 
        {
            "location": "/policy/#type-default-audit", 
            "text": "Policies can be of two types: audit (the default) or data.  Audit types evaluate the target for a pass/fail result. Data types simply\ncollect and display the data.  This property helps define how to best display the policy in an HTML report.  type: data", 
            "title": "type (default: audit)"
        }, 
        {
            "location": "/policy/#description-required", 
            "text": "A human readable description of the policy. The description should be informative\nenough for a human to read the description and be able to interpret the audit\nfindings.  This field is interpreted as  Markdown  description: |\n  Using the pipe (|) symbol in yaml,\n  I'm able to provide my description\n  across multiple lines.", 
            "title": "description (required)"
        }, 
        {
            "location": "/policy/#success-required", 
            "text": "The success message to provide if the audit returns successfully.\nThis field supports  mustache templates \nto display parameters given at runtime or tokens generated by the audit.  This field is interpreted as  Markdown  success: The module {{module_name}} is enabled.", 
            "title": "success (required)"
        }, 
        {
            "location": "/policy/#failure-required", 
            "text": "If the audit fails or is unable to complete due to an error, this message will\nbe displayed. This field supports  mustache templates \nto display parameters given at runtime or generated by the audit.  This field is interpreted as  Markdown  failure: {{module_name}} is not enabled.", 
            "title": "failure (required)"
        }, 
        {
            "location": "/policy/#remediation-required", 
            "text": "This text is displayed to advise the reader how to go about remediating the policy.\nThis field supports  mustache templates \nto display parameters given at runtime or tokens generated by the audit.  This field is interpreted as  Markdown  remediation: |\n  Please enable the {{module_name}} module using drush\n  `drush en {{module_name}} -y`", 
            "title": "remediation (required)"
        }, 
        {
            "location": "/policy/#parameters", 
            "text": "Parameters allow a policy to define values for variables used by the Audit. They\nare also used in  policy:info  to inform on the parameters available to customize.\nA parameter consists of three key value pairs:   default  (required): The actual value to pass through to the audit.  type : The data type of the parameter. Used to advise profile builders on how to use the parameter.  description : A description of what the parameter is used for. Used to advise profile builders.   parameters:\n  module_name:\n    default: shield\n    type: string\n    description: The name of the module to check is enabled.", 
            "title": "parameters"
        }, 
        {
            "location": "/policy/#tags", 
            "text": "The tags key is simply a mechanism to allow policies to be grouped together.\nFor example \"Drupal 7\" or \"Performance\".  tags:\n  - Drupal 7\n  - Performance", 
            "title": "tags"
        }, 
        {
            "location": "/policy/#depends", 
            "text": "Policies can depend on other policies meaning that all policies specified in this\nfield  must  pass successfully for this policy to pass.  depends:\n  - fs:largeFiles\n  - Drupal:SyslogEnabled", 
            "title": "depends"
        }, 
        {
            "location": "/policy/#severity", 
            "text": "Not all policies are of equal importance. Severity allows you to specify how\ncritical a failure or warning is. Possible values in order of importance:   none (only option for  data  type policies)  low  medium (default)  high  critical   severity: 'high'", 
            "title": "severity"
        }, 
        {
            "location": "/policy/#chart", 
            "text": "Chart declarations allow you to provide metadata about how to build a chart for\ndisplay in the html format. This then produces a chart token that can be used in the success, failure, warning or remediation fields to render a chart in place.  chart:\n  requests:\n    type: doughnut\n    labels: tr td:first-child\n    hide-table: false\n    title: Request Distribution by Domain\n    series:\n      - tr td:nth-child(4)  See  charts documentation  for more information.", 
            "title": "chart"
        }, 
        {
            "location": "/policy/#using-tokens-in-message-renders", 
            "text": "Tokens are variables you can use in the render of policy messaging.\nThis includes success, failure, warning and description fields defined in a policy.", 
            "title": "Using Tokens in message renders."
        }, 
        {
            "location": "/policy/#available-tokens", 
            "text": "Use the  policy:info  command to identify which tokens are available in a policy\nfor use in the render.  ```bash\n$ drutiny policy:info fs:largeFiles   Check         Large public files   Description   Large static assets should ideally be housed in other services, e.g. Amazon S3\n                (for files) or Youtube (for videos).   Remediable    No   Parameters    max_size:integer\n                  Report files larger than this value measured in megabytes.   Tokens        max_size:integer\n                  Report files larger than this value measured in megabytes.\n                issues:array\n                  A list of files that reach the max file size.\n                plural:string\n                  This variable will contain an 's' if there is more than one issue found.   Location      /mnt/drutiny/Policy/fsLargeFiles.policy.yml   ```  You can see in the above example output, that  fs:largeFiles  contains three\n tokens:  _max_size ,  issues  and  plural . These tokens are available to use as\n template variables when writting messaging for a policy:  yaml\n failure: |\n   Large public file{{plural}} found over {{max_size}}\n   {{#issues}}\n     - `{{ . }}`\n   {{/issues}}  These variables are rendered using  mustache templates .\n The messages are also parsed by a markdown parser when rendering out to HTML.", 
            "title": "Available Tokens"
        }, 
        {
            "location": "/profiles/", 
            "text": "Profiles\n\n\nProfiles are a collection of policies that aim to audit a target against a\nspecific context or purpose. Some examples of profile use cases are:\n\n\n\n\nProduction-ready Drupal 8 site\n\n\nOrganizational policy compliance\n\n\nSecurity or performance audit\n\n\n\n\nProfiles allow you to run a defined set of polices into a report.\n\n\n./vendor/bin/drutiny profile:run \nprofile_name\n \ntarget\n\n\n\n\n\nReports can also be rendered into HTML or JSON and saved to file.\n\n\n./vendor/bin/drutiny profile:run \nprofile_name\n \ntarget\n --format=html -o \nfilename\n\n\n\n\n\nCreating a Profile\n\n\nProfiles are YAML files with a file extension of \n.profile.yml\n. These can be placed anywhere but recommended to store in a directory called \nProfile\n.\n\n\nFields\n\n\ntitle (required)\n\n\nThe title field gives semantic meaning to the collection of policies.\n\n\ntitle: My custom audit\n\n\n\n\npolicies (required)\n\n\nA list of policies that make up the profile.\n\n\npolicies:\n  Drupal-7:NoDuplicateModules: {}\n  Drupal-7:OverlayModuleDisabled: {}\n  Drupal-7:BlackListPermissions: {}\n  Drupal-7:PhpModuleDisabled: {}\n\n\n\n\nPolicy definitions can contain profile specific overrides for parameters passed\nto the policy as well as the severity of the policy in context to the profile.\n\n\npolicies:\n  Database:Size:\n    parameters:\n      max_size: 900\n    severity: critical\n\n\n\n\nNote:\n This is a change from the 2.0.x profile format. Older profiles that\nprovided default parameters will error.\n\n\ninclude\n\n\nThe include directive allows profiles to be build on top of collections or other\nprofiles. Each include name should be the machine name of another available profile.\n\n\ninclude:\n  - cloud\n  - d8\n\n\n\n\nexcluded_policies\n\n\nThis directive allows a profile to exclude policies that were implicitly included\nin an included profile defined in the \ninclude\n directive.\n\n\nexcluded_policies:\n  - Drupal-7:BlackListPermissions\n  - Drupal-7:CSSAggregation\n\n\n\n\nformat\n\n\nThe \nformat\n declaration allows a profile to specify options specific to the\nexport format of the report (console, HTML or JSON). Based on the format,\nthe options vary.\n\n\nRight now there are no specific options for \nconsole\n or \njson\n formats. Only HTML.\n\n\nformat:\n  html:\n    template: my-page\n    content:\n      - heading: My custom section\n        body: |\n          This is a multiline field that can contain mustache and markdown syntax.\n          There are also a variety of variables available to dynamically render\n          results.....\n\n\n\n\nformat.html.template\n\n\nThe template to use to theme an HTML report. Defaults to \npage\n which is the option\nprovided by default. To add your own template you need to register a template\ndirectory and add a template \ntwig\n file.\n\n\n\n\ndrutiny.config.yml:\n\n\n\n\nTemplate:\n  - my_templates_dir\n\n\n\n\n\n\n profile \n.profile.yml:\n\n\n\n\nformat:\n  html:\n    template: my-page\n\n\n\n\nThe configuration example above will register the \nmy_templates_dir\n directory\n(relative to where drutiny.config.yml is placed). When rendering an HTML report,\nDrutiny will look inside \nmy_templates_dir\n among other registered template directories\nfor a template called \nmy-page.html.twig\n. Note that multiple template directories\ncan be registered.\n\n\nformat.html.content\n\n\nSpecify the content displayed in an\nHTML report and the order that it displays in. By default, Drutiny will load in\nthe contents from \ncontent.default.yml\n.\n\n\nThe content property is an array of sections. Each section specifies a \nheading\n\nand \nbody\n. Each section will roll up into a Table of Contents in the report.\n\n\nformat:\n  html:\n    content:\n      - heading: My custom section\n        body: |\n          This is a multiline field that can contain mustache and markdown syntax.\n          There are also a variety of variables available to dynamically render\n          results.\n\n          ### Summary\n          {{{ summary_table }}}\n\n          {{ #failures }}\n            ### Issues\n            {{# output_failure }}\n              {{{.}}}\n            {{/ output_failure }}\n          {{ /failures }}\n\n          {{ #warnings }}\n            ### Warnings\n            {{# output_warning }}\n              {{{.}}}\n            {{/ output_warning }}\n          {{ /warnings }}\n\n\n\n\nContent Variables\n\n\nThese are the variables available to the \nformat.html.content\n template.\n\n\n\n\n\n\n\n\nVariable\n\n\nType\n\n\ndescription\n\n\n\n\n\n\n\n\n\n\nsummary_table\n\n\nstring\n\n\nA summary table of failures, errors and warnings found from the report.\n\n\n\n\n\n\nappendix_table\n\n\nstring\n\n\nA table all results from the audit and data gathering.\n\n\n\n\n\n\noutput_failure\n\n\narray\n\n\nAn array of rendered failed results\n\n\n\n\n\n\noutput_warning\n\n\narray\n\n\nAn array of rendered warnings results\n\n\n\n\n\n\noutput_error\n\n\narray\n\n\nAn array of rendered erroneous results\n\n\n\n\n\n\noutput_success\n\n\narray\n\n\nAn array of rendered successful results\n\n\n\n\n\n\noutput_data\n\n\narray\n\n\nAn array of rendered data results\n\n\n\n\n\n\nremediations\n\n\narray\n\n\nAn array of recommendations aggregated from failed policies.\n\n\n\n\n\n\nfailures\n\n\ninteger\n\n\nThe number of failed results\n\n\n\n\n\n\nerrors\n\n\ninteger\n\n\nThe number of erred results\n\n\n\n\n\n\npasses\n\n\ninteger\n\n\nThe number of passed results\n\n\n\n\n\n\nwarnings\n\n\ninteger\n\n\nThe number of failed results\n\n\n\n\n\n\nnot_applicable\n\n\ninteger\n\n\nThe number of results not applicable to tested target.\n\n\n\n\n\n\nnotices\n\n\ninteger\n\n\nThe number of results that provide information/data only.\n\n\n\n\n\n\ntitle\n\n\nstring\n\n\nProfile title\n\n\n\n\n\n\ndescription\n\n\nstring\n\n\nProfile description\n\n\n\n\n\n\nresults\n\n\narray\n\n\nAn array of result arrays. Its not recommended to use this variable as it requires a lot more complexity for a profile.", 
            "title": "Profile"
        }, 
        {
            "location": "/profiles/#profiles", 
            "text": "Profiles are a collection of policies that aim to audit a target against a\nspecific context or purpose. Some examples of profile use cases are:   Production-ready Drupal 8 site  Organizational policy compliance  Security or performance audit   Profiles allow you to run a defined set of polices into a report.  ./vendor/bin/drutiny profile:run  profile_name   target   Reports can also be rendered into HTML or JSON and saved to file.  ./vendor/bin/drutiny profile:run  profile_name   target  --format=html -o  filename", 
            "title": "Profiles"
        }, 
        {
            "location": "/profiles/#creating-a-profile", 
            "text": "Profiles are YAML files with a file extension of  .profile.yml . These can be placed anywhere but recommended to store in a directory called  Profile .", 
            "title": "Creating a Profile"
        }, 
        {
            "location": "/profiles/#fields", 
            "text": "", 
            "title": "Fields"
        }, 
        {
            "location": "/profiles/#title-required", 
            "text": "The title field gives semantic meaning to the collection of policies.  title: My custom audit", 
            "title": "title (required)"
        }, 
        {
            "location": "/profiles/#policies-required", 
            "text": "A list of policies that make up the profile.  policies:\n  Drupal-7:NoDuplicateModules: {}\n  Drupal-7:OverlayModuleDisabled: {}\n  Drupal-7:BlackListPermissions: {}\n  Drupal-7:PhpModuleDisabled: {}  Policy definitions can contain profile specific overrides for parameters passed\nto the policy as well as the severity of the policy in context to the profile.  policies:\n  Database:Size:\n    parameters:\n      max_size: 900\n    severity: critical  Note:  This is a change from the 2.0.x profile format. Older profiles that\nprovided default parameters will error.", 
            "title": "policies (required)"
        }, 
        {
            "location": "/profiles/#include", 
            "text": "The include directive allows profiles to be build on top of collections or other\nprofiles. Each include name should be the machine name of another available profile.  include:\n  - cloud\n  - d8", 
            "title": "include"
        }, 
        {
            "location": "/profiles/#excluded_policies", 
            "text": "This directive allows a profile to exclude policies that were implicitly included\nin an included profile defined in the  include  directive.  excluded_policies:\n  - Drupal-7:BlackListPermissions\n  - Drupal-7:CSSAggregation", 
            "title": "excluded_policies"
        }, 
        {
            "location": "/profiles/#format", 
            "text": "The  format  declaration allows a profile to specify options specific to the\nexport format of the report (console, HTML or JSON). Based on the format,\nthe options vary.  Right now there are no specific options for  console  or  json  formats. Only HTML.  format:\n  html:\n    template: my-page\n    content:\n      - heading: My custom section\n        body: |\n          This is a multiline field that can contain mustache and markdown syntax.\n          There are also a variety of variables available to dynamically render\n          results.....", 
            "title": "format"
        }, 
        {
            "location": "/profiles/#formathtmltemplate", 
            "text": "The template to use to theme an HTML report. Defaults to  page  which is the option\nprovided by default. To add your own template you need to register a template\ndirectory and add a template  twig  file.   drutiny.config.yml:   Template:\n  - my_templates_dir    profile  .profile.yml:   format:\n  html:\n    template: my-page  The configuration example above will register the  my_templates_dir  directory\n(relative to where drutiny.config.yml is placed). When rendering an HTML report,\nDrutiny will look inside  my_templates_dir  among other registered template directories\nfor a template called  my-page.html.twig . Note that multiple template directories\ncan be registered.", 
            "title": "format.html.template"
        }, 
        {
            "location": "/profiles/#formathtmlcontent", 
            "text": "Specify the content displayed in an\nHTML report and the order that it displays in. By default, Drutiny will load in\nthe contents from  content.default.yml .  The content property is an array of sections. Each section specifies a  heading \nand  body . Each section will roll up into a Table of Contents in the report.  format:\n  html:\n    content:\n      - heading: My custom section\n        body: |\n          This is a multiline field that can contain mustache and markdown syntax.\n          There are also a variety of variables available to dynamically render\n          results.\n\n          ### Summary\n          {{{ summary_table }}}\n\n          {{ #failures }}\n            ### Issues\n            {{# output_failure }}\n              {{{.}}}\n            {{/ output_failure }}\n          {{ /failures }}\n\n          {{ #warnings }}\n            ### Warnings\n            {{# output_warning }}\n              {{{.}}}\n            {{/ output_warning }}\n          {{ /warnings }}", 
            "title": "format.html.content"
        }, 
        {
            "location": "/profiles/#content-variables", 
            "text": "These are the variables available to the  format.html.content  template.     Variable  Type  description      summary_table  string  A summary table of failures, errors and warnings found from the report.    appendix_table  string  A table all results from the audit and data gathering.    output_failure  array  An array of rendered failed results    output_warning  array  An array of rendered warnings results    output_error  array  An array of rendered erroneous results    output_success  array  An array of rendered successful results    output_data  array  An array of rendered data results    remediations  array  An array of recommendations aggregated from failed policies.    failures  integer  The number of failed results    errors  integer  The number of erred results    passes  integer  The number of passed results    warnings  integer  The number of failed results    not_applicable  integer  The number of results not applicable to tested target.    notices  integer  The number of results that provide information/data only.    title  string  Profile title    description  string  Profile description    results  array  An array of result arrays. Its not recommended to use this variable as it requires a lot more complexity for a profile.", 
            "title": "Content Variables"
        }, 
        {
            "location": "/config/", 
            "text": "Config\n\n\ndrutiny.config.yml\n is a static registry yaml file that can be provided by\ndrutiny plugin libraries to extend Drutiny's capability.\n\n\nTarget\n\n\nThe \nTarget\n directive allows you to register additional target types. Targets\nare references to audit-able subjects. The Target PHP class is responsible for\nparsing in the target reference passed in the command line and allowing the audits\nto correctly access the target to be able to audit it.\n\n\nTarget:\n  - Drutiny\\Target\\DrushTarget\n  - Drutiny\\Target\\TargetNone\n\n\n\n\nCommand\n\n\nThe \nCommand\n directive allows extensions to add additional commands into Drutiny's\nconsole Application. This can be done to utilise the Drutiny framework underneath\nthe \ndrutiny\n executable.\n\n\nCommand:\n  - Drutiny\\Command\\AuditGenerateCommand\n  - Drutiny\\Command\\AuditInfoCommand\n\n\n\n\nTemplate\n\n\nThe \nTemplate\n directive allows extensions to register directories where Drutiny\nwill look for twig template files when rendering HTML and Markdown files.\n\n\nTemplate:\n  - src/Report/templates/html\n  - src/Report/templates/markdown\n\n\n\n\nDomainList\n\n\nThe \nDomainList\n directive registers domain providers that can provide a list of\ndomains to run a profile against in multisite mode.\n\n\nDomainList:\n  YamlFile: Drutiny\\DomainList\\DomainListYamlFile\n\n\n\n\nLearn more about \nDomain Providers\n\n\nFormat\n\n\nThe \nFormat\n directive allows extensions to add additional export formats on top\nof the ones already provided by Drutiny.\n\n\nFormat:\n  html: Drutiny\\Report\\Format\\HTML\n  json: Drutiny\\Report\\Format\\JSON\n  markdown: Drutiny\\Report\\Format\\Markdown\n  terminal: Drutiny\\Report\\Format\\Terminal\n  console: Drutiny\\Report\\Format\\Console\n\n\n\n\nCredentialSchema\n\n\nThe \nCredentialSchema\n directive allows extensions to provide a schema for\ncredentials needed for something such as an Audit. This allows the Drutiny\nCredential Manager to acquire the credentials from the user on the behalf of\nthe extension using them.\n\n\nCredentialSchema:\n  sumologic:\n    access_id:\n      type: string\n      description: Your access ID to connect to the Sumologic API with:\n    access_key:\n      type: string\n      description: Your access key to connect to the Sumologic API with:\n\n\n\n\nLearn more about the \nCredential Manager", 
            "title": "Config"
        }, 
        {
            "location": "/config/#config", 
            "text": "drutiny.config.yml  is a static registry yaml file that can be provided by\ndrutiny plugin libraries to extend Drutiny's capability.", 
            "title": "Config"
        }, 
        {
            "location": "/config/#target", 
            "text": "The  Target  directive allows you to register additional target types. Targets\nare references to audit-able subjects. The Target PHP class is responsible for\nparsing in the target reference passed in the command line and allowing the audits\nto correctly access the target to be able to audit it.  Target:\n  - Drutiny\\Target\\DrushTarget\n  - Drutiny\\Target\\TargetNone", 
            "title": "Target"
        }, 
        {
            "location": "/config/#command", 
            "text": "The  Command  directive allows extensions to add additional commands into Drutiny's\nconsole Application. This can be done to utilise the Drutiny framework underneath\nthe  drutiny  executable.  Command:\n  - Drutiny\\Command\\AuditGenerateCommand\n  - Drutiny\\Command\\AuditInfoCommand", 
            "title": "Command"
        }, 
        {
            "location": "/config/#template", 
            "text": "The  Template  directive allows extensions to register directories where Drutiny\nwill look for twig template files when rendering HTML and Markdown files.  Template:\n  - src/Report/templates/html\n  - src/Report/templates/markdown", 
            "title": "Template"
        }, 
        {
            "location": "/config/#domainlist", 
            "text": "The  DomainList  directive registers domain providers that can provide a list of\ndomains to run a profile against in multisite mode.  DomainList:\n  YamlFile: Drutiny\\DomainList\\DomainListYamlFile  Learn more about  Domain Providers", 
            "title": "DomainList"
        }, 
        {
            "location": "/config/#format", 
            "text": "The  Format  directive allows extensions to add additional export formats on top\nof the ones already provided by Drutiny.  Format:\n  html: Drutiny\\Report\\Format\\HTML\n  json: Drutiny\\Report\\Format\\JSON\n  markdown: Drutiny\\Report\\Format\\Markdown\n  terminal: Drutiny\\Report\\Format\\Terminal\n  console: Drutiny\\Report\\Format\\Console", 
            "title": "Format"
        }, 
        {
            "location": "/config/#credentialschema", 
            "text": "The  CredentialSchema  directive allows extensions to provide a schema for\ncredentials needed for something such as an Audit. This allows the Drutiny\nCredential Manager to acquire the credentials from the user on the behalf of\nthe extension using them.  CredentialSchema:\n  sumologic:\n    access_id:\n      type: string\n      description: Your access ID to connect to the Sumologic API with:\n    access_key:\n      type: string\n      description: Your access key to connect to the Sumologic API with:  Learn more about the  Credential Manager", 
            "title": "CredentialSchema"
        }, 
        {
            "location": "/creds/", 
            "text": "Credential Management\n\n\nSome Drutiny plugins require credentials not provided by a target. Examples of\nthese types of plugins are Sumologic and Cloudflare who have API endpoints\nto talk which require API credentials. For these types of plugins, Drutiny\nhas a central credential management tool for storing and using credentials.\n\n\nUsage\n\n\nDrutiny has a command called \nplugin:setup\n which can be used to setup credentials\nfor a service.\n\n\n./vendor/bin/drutiny plugin:setup sumologic\n\naccess_id (string)\nYour access ID to connect to the Sumologic API with: : **********\naccess_key (string)\nYour access key to connect to the Sumologic API with: : *******************\n\n [OK] Credentials for sumologic have been saved.\n\n\n\n\n\nUsing the Credential Manager API\n\n\nUsing the credential manager requires specifying the schema for your\ncredentials then using the manager to load your credentials when you need them.\nPresumably inside an audit.\n\n\nAdding credentials to drutiny.config.yml\n\n\ndrutiny.config.yml\n is a file a plugin library can specify to declare config.\nThe \nCredentialSchema\n key is used to declare namespaces and arbitrary credentials\nfor the namespace/\n\n\nCredentialSchema:\n  sumologic:\n    access_id:\n      type: string\n      description: Your access ID to connect to the Sumologic API with:\n    access_key:\n      type: string\n      description: Your access key to connect to the Sumologic API with:\n\n\n\n\nThe above example provides a namespace for \nsumologic\n and details \naccess_id\n\nand \naccess_key\n as credentials to provide. These are the credentials that\n\nplugin:setup\n will ask for.\n\n\nAuditing Prerequisites\n\n\nUsually, credentials are required in order for an audit to function correctly.\nRather than failing an audit because the credentials aren't present to complete\nthe assessment, instead, you can specify an \nAudit Prerequisite\n\ninside your Audit class:\n\n\n\nuse Drutiny\\Credential\\Manager;\n\n// ...\n\n  protected function requireApiCredentials()\n  {\n    return Manager::load('sumologic') ? TRUE : FALSE;\n  }\n\n\n\n\nUsing the Credentials\n\n\nIf you've created the \nCredentialSchema\n in \ndrutiny.config.yml\n and setup an Audit\nPrerequisite, then you are now ready to use the credentials inside an audit:\n\n\n\nuse Drutiny\\Credential\\Manager;\n\n$creds = Manager::load('sumologic');\n$client = new Client($creds['access_id'], $creds['access_key']);", 
            "title": "Credential Manager"
        }, 
        {
            "location": "/creds/#credential-management", 
            "text": "Some Drutiny plugins require credentials not provided by a target. Examples of\nthese types of plugins are Sumologic and Cloudflare who have API endpoints\nto talk which require API credentials. For these types of plugins, Drutiny\nhas a central credential management tool for storing and using credentials.", 
            "title": "Credential Management"
        }, 
        {
            "location": "/creds/#usage", 
            "text": "Drutiny has a command called  plugin:setup  which can be used to setup credentials\nfor a service.  ./vendor/bin/drutiny plugin:setup sumologic\n\naccess_id (string)\nYour access ID to connect to the Sumologic API with: : **********\naccess_key (string)\nYour access key to connect to the Sumologic API with: : *******************\n\n [OK] Credentials for sumologic have been saved.", 
            "title": "Usage"
        }, 
        {
            "location": "/creds/#using-the-credential-manager-api", 
            "text": "Using the credential manager requires specifying the schema for your\ncredentials then using the manager to load your credentials when you need them.\nPresumably inside an audit.", 
            "title": "Using the Credential Manager API"
        }, 
        {
            "location": "/creds/#adding-credentials-to-drutinyconfigyml", 
            "text": "drutiny.config.yml  is a file a plugin library can specify to declare config.\nThe  CredentialSchema  key is used to declare namespaces and arbitrary credentials\nfor the namespace/  CredentialSchema:\n  sumologic:\n    access_id:\n      type: string\n      description: Your access ID to connect to the Sumologic API with:\n    access_key:\n      type: string\n      description: Your access key to connect to the Sumologic API with:  The above example provides a namespace for  sumologic  and details  access_id \nand  access_key  as credentials to provide. These are the credentials that plugin:setup  will ask for.", 
            "title": "Adding credentials to drutiny.config.yml"
        }, 
        {
            "location": "/creds/#auditing-prerequisites", 
            "text": "Usually, credentials are required in order for an audit to function correctly.\nRather than failing an audit because the credentials aren't present to complete\nthe assessment, instead, you can specify an  Audit Prerequisite \ninside your Audit class:  \nuse Drutiny\\Credential\\Manager;\n\n// ...\n\n  protected function requireApiCredentials()\n  {\n    return Manager::load('sumologic') ? TRUE : FALSE;\n  }", 
            "title": "Auditing Prerequisites"
        }, 
        {
            "location": "/creds/#using-the-credentials", 
            "text": "If you've created the  CredentialSchema  in  drutiny.config.yml  and setup an Audit\nPrerequisite, then you are now ready to use the credentials inside an audit:  \nuse Drutiny\\Credential\\Manager;\n\n$creds = Manager::load('sumologic');\n$client = new Client($creds['access_id'], $creds['access_key']);", 
            "title": "Using the Credentials"
        }, 
        {
            "location": "/domains/", 
            "text": "Domain Providers\n\n\nDomain Providers allow Drutiny plugins to provide their own methods for pulling\ndomains to use over a multisite target. Domain Providers essentially supply the\ndomains to use in the \n--uri\n parameter in \nprofile:run\n.\n\n\nTo write your own domain provider you need to do two things:\n\n\n\n\nWrite a class that implements the \nDrutiny\\DomainList\\DomainListInterface\n interface.\n\n\nRegister the class in drutiny.config.yml\n\n\n\n\nImplementing the DomainListInterface\n\n\nThe DomainListInterface requires two methods: \n__construct\n and \ngetDomains\n.\n\n\n__construct\n is passed in the metadata required for the class to acquire the\ndomains it provides and \ngetDomains\n returns an array of domains to use.\n\n\nAs an example, here is the default Yaml filepath domain loader which reads in\na list of domains from a Yaml file.\n\n\nnamespace Drutiny\\DomainList;\n\nuse Symfony\\Component\\Yaml\\Yaml;\nuse Drutiny\\Target\\Target;\n\nclass DomainListYamlFile implements DomainListInterface {\n\n  protected $filepath;\n\n  public function __construct(array $metadata)\n  {\n    $this-\nfilepath = $metadata['filepath'];\n  }\n\n  /**\n   * @return array list of domains.\n   */\n  public function getDomains(Target $target)\n  {\n    return Yaml::parseFile($this-\nfilepath);\n  }\n}\n\n\n\n\nSpecifying required metadata\n\n\nYou domain provider may require metadata such as credentials to authenticate\nagainst a provider source. This metadata can be described as parameters using\nDrutiny's annotation system. These annotations are then used in the \nprofile:run\n\nhelp screen to instruct users how to provide the required metadata to the Domain\nProvider.\n\n\nuse Drutiny\\Annotation\\Param;\n\n/**\n * @Param(\n *   name = \nemail\n,\n *   description = \nEmail of Acquia account accessing the Cloud API\n,\n * )\n * @Param(\n *   name = \nkey\n,\n *   description = \nAPI Key which can be obtained from Acquia Cloud account\n,\n * )\n */\nclass AcquiaCloudDomainList implements DomainListInterface {\n\n  //...\n\n  public function __construct(array $metadata)\n  {\n    if (isset($metadata['email'])) {\n      $this-\nemail = $metadata['email'];\n    }\n    if (isset($metadata['key'])) {\n      $this-\nkey = $metadata['key'];\n    }\n\n\n\n\nRegistering the Domain Provider\n\n\nRegistering the class in \ndrutiny.config.yml\n allows the \nprofile:run\n\ncommand to register options to pass in and is required for the domain provider to be usable.\n\n\nDomainList:\n  ac: Drutiny\\Acquia\\AcquiaCloudDomainList", 
            "title": "Domain Provider"
        }, 
        {
            "location": "/domains/#domain-providers", 
            "text": "Domain Providers allow Drutiny plugins to provide their own methods for pulling\ndomains to use over a multisite target. Domain Providers essentially supply the\ndomains to use in the  --uri  parameter in  profile:run .  To write your own domain provider you need to do two things:   Write a class that implements the  Drutiny\\DomainList\\DomainListInterface  interface.  Register the class in drutiny.config.yml", 
            "title": "Domain Providers"
        }, 
        {
            "location": "/domains/#implementing-the-domainlistinterface", 
            "text": "The DomainListInterface requires two methods:  __construct  and  getDomains .  __construct  is passed in the metadata required for the class to acquire the\ndomains it provides and  getDomains  returns an array of domains to use.  As an example, here is the default Yaml filepath domain loader which reads in\na list of domains from a Yaml file.  namespace Drutiny\\DomainList;\n\nuse Symfony\\Component\\Yaml\\Yaml;\nuse Drutiny\\Target\\Target;\n\nclass DomainListYamlFile implements DomainListInterface {\n\n  protected $filepath;\n\n  public function __construct(array $metadata)\n  {\n    $this- filepath = $metadata['filepath'];\n  }\n\n  /**\n   * @return array list of domains.\n   */\n  public function getDomains(Target $target)\n  {\n    return Yaml::parseFile($this- filepath);\n  }\n}", 
            "title": "Implementing the DomainListInterface"
        }, 
        {
            "location": "/domains/#specifying-required-metadata", 
            "text": "You domain provider may require metadata such as credentials to authenticate\nagainst a provider source. This metadata can be described as parameters using\nDrutiny's annotation system. These annotations are then used in the  profile:run \nhelp screen to instruct users how to provide the required metadata to the Domain\nProvider.  use Drutiny\\Annotation\\Param;\n\n/**\n * @Param(\n *   name =  email ,\n *   description =  Email of Acquia account accessing the Cloud API ,\n * )\n * @Param(\n *   name =  key ,\n *   description =  API Key which can be obtained from Acquia Cloud account ,\n * )\n */\nclass AcquiaCloudDomainList implements DomainListInterface {\n\n  //...\n\n  public function __construct(array $metadata)\n  {\n    if (isset($metadata['email'])) {\n      $this- email = $metadata['email'];\n    }\n    if (isset($metadata['key'])) {\n      $this- key = $metadata['key'];\n    }", 
            "title": "Specifying required metadata"
        }, 
        {
            "location": "/domains/#registering-the-domain-provider", 
            "text": "Registering the class in  drutiny.config.yml  allows the  profile:run \ncommand to register options to pass in and is required for the domain provider to be usable.  DomainList:\n  ac: Drutiny\\Acquia\\AcquiaCloudDomainList", 
            "title": "Registering the Domain Provider"
        }, 
        {
            "location": "/charts/", 
            "text": "Charts (HTML only)\n\n\nCharts in Drutiny are an HTML format feature that allows rendered tabular data\nin a policy to be visualized in a chart inside of the HTML generated report.\n\n\nUnder the hood, Drutiny uses \nchart.js\n to render charts.\n\n\nA chart is defined inside of a \nPolicy\n as metadata and rendered\ninside of either the success, failure, warning or remediation messages also\nprovided by the policy.\n\n\nchart:\n  requests:\n    type: doughnut\n    labels: tr td:first-child\n    hide-table: false\n    title: Request Distribution by Domain\n    height: 300\n    width: 400\n    legend: left\n    colors:\n      - rgba(46, 204, 113,1.0)\n      - rgba(192, 57, 43,1.0)\n      - rgba(230, 126, 34,1.0)\n      - rgba(241, 196, 15,1.0)\n      - rgba(52, 73, 94,1.0)\n    series:\n      - tr td:nth-child(4)\nsuccess: |\n  Here is a doughnut chart:\n  {{{_chart.requests}}}\n\n\n\n\nConfiguration\n\n\nAny given policy may have a \nchart\n property defined in its \n.policy.yml\n file.\nThe \nchart\n property contains a arbitrarily keyed set of chart definitions.\n\n\nchart:\n  my_chart_1:\n    # ....\n  my_chart_2:\n    # ....\n\n\n\n\nCharts use tabular data from the first sibling table in the DOM.\n\n\nChart Properties\n\n\nlabels\n and \nseries\n use css selectors powered by jQuery to obtain the data to\ndisplay in the chart.\n\n\n\n\n\n\n\n\nProperty\n\n\nDescription\n\n\n\n\n\n\n\n\n\n\ntype\n\n\nThe type of chart to render. Recommend \nbar\n, \npie\n or \ndoughnut\n.\n\n\n\n\n\n\nlabels\n\n\nA css selector that returns an array of HTML elements whose text will become labels in a pie chart or x-axis in a bar graph.\n\n\n\n\n\n\nhide-table\n\n\nA boolean to determine if the table used to read the tabular data should be hidden. Defaults to false.\n\n\n\n\n\n\ntitle\n\n\nThe title of the graph\n\n\n\n\n\n\nseries\n\n\nAn array of css selectors that return the HTML elements whose text will become chart data.\n\n\n\n\n\n\nheight\n\n\nThe height of the graph area set as a CSS style on the \ncanvas\n element.\n\n\n\n\n\n\nwidth\n\n\nThe width of the graph area set as a CSS style on the \ncanvas\n element.\n\n\n\n\n\n\nx-axis\n\n\nThe label for the x-axis.\n\n\n\n\n\n\ny-axis\n\n\nThe label for the y-axis.\n\n\n\n\n\n\nlegend\n\n\nThe position of the legend. Options are: top, bottom, left, right or none (to remove legend).\n\n\n\n\n\n\ncolors\n\n\nAn array of colors expressed using RGB syntax. E.g. \nrgba(52, 73, 94,1.0)\n.\n\n\n\n\n\n\n\n\nRendering a Chart\n\n\nRendered charts are available as a special \n_chart\n token to be used in success,\nfailure, warning or remediation messages provided by the policy.\n\n\nsuccess: |\n  Here is the chart:\n  {{{_chart.my_chart_1}}}\n\n\n\n\nIs important to use triple curly braces here to ensure the variables are not\nescaped by the mustache templating language.", 
            "title": "Charts"
        }, 
        {
            "location": "/charts/#charts-html-only", 
            "text": "Charts in Drutiny are an HTML format feature that allows rendered tabular data\nin a policy to be visualized in a chart inside of the HTML generated report.  Under the hood, Drutiny uses  chart.js  to render charts.  A chart is defined inside of a  Policy  as metadata and rendered\ninside of either the success, failure, warning or remediation messages also\nprovided by the policy.  chart:\n  requests:\n    type: doughnut\n    labels: tr td:first-child\n    hide-table: false\n    title: Request Distribution by Domain\n    height: 300\n    width: 400\n    legend: left\n    colors:\n      - rgba(46, 204, 113,1.0)\n      - rgba(192, 57, 43,1.0)\n      - rgba(230, 126, 34,1.0)\n      - rgba(241, 196, 15,1.0)\n      - rgba(52, 73, 94,1.0)\n    series:\n      - tr td:nth-child(4)\nsuccess: |\n  Here is a doughnut chart:\n  {{{_chart.requests}}}", 
            "title": "Charts (HTML only)"
        }, 
        {
            "location": "/charts/#configuration", 
            "text": "Any given policy may have a  chart  property defined in its  .policy.yml  file.\nThe  chart  property contains a arbitrarily keyed set of chart definitions.  chart:\n  my_chart_1:\n    # ....\n  my_chart_2:\n    # ....  Charts use tabular data from the first sibling table in the DOM.", 
            "title": "Configuration"
        }, 
        {
            "location": "/charts/#chart-properties", 
            "text": "labels  and  series  use css selectors powered by jQuery to obtain the data to\ndisplay in the chart.     Property  Description      type  The type of chart to render. Recommend  bar ,  pie  or  doughnut .    labels  A css selector that returns an array of HTML elements whose text will become labels in a pie chart or x-axis in a bar graph.    hide-table  A boolean to determine if the table used to read the tabular data should be hidden. Defaults to false.    title  The title of the graph    series  An array of css selectors that return the HTML elements whose text will become chart data.    height  The height of the graph area set as a CSS style on the  canvas  element.    width  The width of the graph area set as a CSS style on the  canvas  element.    x-axis  The label for the x-axis.    y-axis  The label for the y-axis.    legend  The position of the legend. Options are: top, bottom, left, right or none (to remove legend).    colors  An array of colors expressed using RGB syntax. E.g.  rgba(52, 73, 94,1.0) .", 
            "title": "Chart Properties"
        }, 
        {
            "location": "/charts/#rendering-a-chart", 
            "text": "Rendered charts are available as a special  _chart  token to be used in success,\nfailure, warning or remediation messages provided by the policy.  success: |\n  Here is the chart:\n  {{{_chart.my_chart_1}}}  Is important to use triple curly braces here to ensure the variables are not\nescaped by the mustache templating language.", 
            "title": "Rendering a Chart"
        }, 
        {
            "location": "/policy-library/", 
            "text": "Policy Library\n\n\n\n\n\n\n\n\nTitle\n\n\nName\n\n\nPackage", 
            "title": "Overview"
        }, 
        {
            "location": "/policy-library/#policy-library", 
            "text": "Title  Name  Package", 
            "title": "Policy Library"
        }, 
        {
            "location": "/policies/drutiny-plugin-drupal-7/", 
            "text": "BlackList Permissions\n\n\nName\n: \nDrupal-7:BlackListPermissions\n\n\nPackage\n: \ndrutiny/plugin-drupal-7\n\n\nClass\n: \n\\Drutiny\\Plugin\\Drupal7\\Audit\\BlacklistPermissions\n\n\nChecks to ensure roles do not contain blacklisted permissions.\n\n\nParameters\n\n\n\n\n\n\n\n\nName\n\n\nType\n\n\nDescription\n\n\nDefault\n\n\n\n\n\n\n\n\n\n\npermissions\n\n\narray\n\n\nAn array of permissions to ensure are not available to non-administrator\n\n\n\n\n\n\n\n\nroles\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n- 'administer site configuration'\n\n\n\n\n\n\n\n\n\n\n\n\nCSS Aggregation\n\n\nName\n: \nDrupal-7:CSSAggregation\n\n\nPackage\n: \ndrutiny/plugin-drupal-7\n\n\nClass\n: \n\\Drutiny\\Plugin\\Drupal7\\Audit\\VariableCompare\n\n\nWith CSS optimization disabled, your website visitors are experiencing slower\npage performance and the server load is increased.\n\n\nParameters\n\n\n\n\n\n\n\n\nName\n\n\nType\n\n\nDescription\n\n\nDefault\n\n\n\n\n\n\n\n\n\n\nkey\n\n\nstring\n\n\nThe name of the variable to check.\n\n\npreprocess_css\n\n\n\n\n\n\nvalue\n\n\nbool\n\n\nThe value of the variable\n\n\n1\n\n\n\n\n\n\n\n\nApplication Page Cache\n\n\nName\n: \nDrupal-7:CacheLifetime\n\n\nPackage\n: \ndrutiny/plugin-drupal-7\n\n\nClass\n: \n\\Drutiny\\Plugin\\Drupal7\\Audit\\VariableCompare\n\n\nThe minimum cache lifetime prevents Drupal from clearing page and block caches\nafter changes are made to nodes or blocks, for a set period of time. This can\ncause unexpected behavior when editing content or when an external cache such\nas a CDN or Varnish is employed.\n\n\nParameters\n\n\n\n\n\n\n\n\nName\n\n\nType\n\n\nDescription\n\n\nDefault\n\n\n\n\n\n\n\n\n\n\nkey\n\n\nstring\n\n\nThe name of the variable to check.\n\n\ncache_lifetime\n\n\n\n\n\n\nvalue\n\n\nbool\n\n\nThe value of the variable\n\n\n0\n\n\n\n\n\n\n\n\nCron running regularly\n\n\nName\n: \nDrupal-7:CronLast\n\n\nPackage\n: \ndrutiny/plugin-drupal-7\n\n\nClass\n: \n\\Drutiny\\Plugin\\Drupal7\\Audit\\CronLast\n\n\nMaking sure the cron jobs are running properly is key to a healthy Drupal site.\n\n\nDatabase logging disabled\n\n\nName\n: \nDrupal-7:DblogModuleDisabled\n\n\nPackage\n: \ndrutiny/plugin-drupal-7\n\n\nClass\n: \n\\Drutiny\\Plugin\\Drupal7\\Audit\\ModuleDisabled\n\n\nThe database logging module logs Drupal's watchdog logs into the Drupal database.\nThis works fine in development but can cause performance issues for production\nwebsites. Its recommended to disabled this module in production.\n\n\nParameters\n\n\n\n\n\n\n\n\nName\n\n\nType\n\n\nDescription\n\n\nDefault\n\n\n\n\n\n\n\n\n\n\nmodule\n\n\nstring\n\n\nThe name of the module to ensure is disabled.\n\n\ndblog\n\n\n\n\n\n\n\n\nError Level\n\n\nName\n: \nDrupal-7:ErrorLevel\n\n\nPackage\n: \ndrutiny/plugin-drupal-7\n\n\nClass\n: \n\\Drutiny\\Plugin\\Drupal7\\Audit\\VariableCompare\n\n\nWhen PHP encounters an error, it can generate an error log and display a\nreport on the screen. While these error messages can be helpful in\ndebugging your site, they can be a security risk on a live site as they may\nreveal information about your server that can be used to compromise it.\nsite becoming unavailable or unresponsive.\n\n\nParameters\n\n\n\n\n\n\n\n\nName\n\n\nType\n\n\nDescription\n\n\nDefault\n\n\n\n\n\n\n\n\n\n\nkey\n\n\nstring\n\n\nThe name of the variable to check.\n\n\nerror_level\n\n\n\n\n\n\nvalue\n\n\nbool\n\n\nThe value of the variable\n\n\n0\n\n\n\n\n\n\n\n\nImage Derivatives\n\n\nName\n: \nDrupal-7:ImageDerivatives\n\n\nPackage\n: \ndrutiny/plugin-drupal-7\n\n\nClass\n: \n\\Drutiny\\Plugin\\Drupal7\\Audit\\VariableCompare\n\n\nDrupal core's Image module allows for the on-demand generation of image\nderivatives. This capability can be abused by requesting a large number\nof new derivatives which can fill up the server disk space, and which\ncan cause a very high CPU load. Either of these effects may lead to the\nsite becoming unavailable or unresponsive.\n\n\nParameters\n\n\n\n\n\n\n\n\nName\n\n\nType\n\n\nDescription\n\n\nDefault\n\n\n\n\n\n\n\n\n\n\nkey\n\n\nstring\n\n\nThe name of the variable to check.\n\n\nimage_allow_insecure_derivatives\n\n\n\n\n\n\nvalue\n\n\nbool\n\n\nThe value of the variable\n\n\n0\n\n\n\n\n\n\ndefault\n\n\nbool\n\n\nThe default value of the variable\n\n\n0\n\n\n\n\n\n\n\n\nInstallation Complete\n\n\nName\n: \nDrupal-7:InstallTaskCompleted\n\n\nPackage\n: \ndrutiny/plugin-drupal-7\n\n\nClass\n: \n\\Drutiny\\Plugin\\Drupal7\\Audit\\VariableCompare\n\n\nIf you fail to set this variable correctly, it can leave your \ninstall.php\n\nscript open to the general public.\n\n\nParameters\n\n\n\n\n\n\n\n\nName\n\n\nType\n\n\nDescription\n\n\nDefault\n\n\n\n\n\n\n\n\n\n\nkey\n\n\nstring\n\n\nThe name of the variable to check.\n\n\ninstall_task\n\n\n\n\n\n\nvalue\n\n\nmixed\n\n\nThe value of the variable\n\n\ndone\n\n\n\n\n\n\n\n\nJs Aggregation\n\n\nName\n: \nDrupal-7:JsAggregation\n\n\nPackage\n: \ndrutiny/plugin-drupal-7\n\n\nClass\n: \n\\Drutiny\\Plugin\\Drupal7\\Audit\\VariableCompare\n\n\nWith JS optimization disabled, your website visitors are experiencing slower\npage performance and the server load is increased.\n\n\nParameters\n\n\n\n\n\n\n\n\nName\n\n\nType\n\n\nDescription\n\n\nDefault\n\n\n\n\n\n\n\n\n\n\nkey\n\n\nstring\n\n\nThe name of the variable to check.\n\n\npreprocess_js\n\n\n\n\n\n\nvalue\n\n\nbool\n\n\nThe value of the variable\n\n\n1\n\n\n\n\n\n\n\n\nMissing modules\n\n\nName\n: \nDrupal-7:MissingModules\n\n\nPackage\n: \ndrutiny/plugin-drupal-7\n\n\nClass\n: \n\\Drutiny\\Plugin\\Drupal7\\Audit\\MissingModules\n\n\nThe warning was introduced in Drupal 7.50 and is displayed when Drupal is\nattempting to find a module or theme in the file system, but either cannot\nfind it or does not find it in the expected place.\n\n\nModules enabled\n\n\nName\n: \nDrupal-7:ModulesEnabled\n\n\nPackage\n: \ndrutiny/plugin-drupal-7\n\n\nClass\n: \n\\Drutiny\\Plugin\\Drupal7\\Audit\\ModulesEnabled\n\n\nCheck that a set of modules are enabled.\n\n\nParameters\n\n\n\n\n\n\n\n\nName\n\n\nType\n\n\nDescription\n\n\nDefault\n\n\n\n\n\n\n\n\n\n\nmodules\n\n\narray\n\n\nThe name of the modules to ensure is enabled.\n\n\n- syslog\n\n\n\n\n\n\n\n\nNo Administrators\n\n\nName\n: \nDrupal-7:NoAdmins\n\n\nPackage\n: \ndrutiny/plugin-drupal-7\n\n\nClass\n: \n\\Drutiny\\Plugin\\Drupal7\\Audit\\NoAdministrators\n\n\nEnsure there are no administrators beyond uid:1. This reduces the surface area\nof escalated accounts being compromised.\n\n\nDuplicate modules\n\n\nName\n: \nDrupal-7:NoDuplicateModules\n\n\nPackage\n: \ndrutiny/plugin-drupal-7\n\n\nClass\n: \n\\Drutiny\\Plugin\\Drupal7\\Audit\\DuplicateModules\n\n\nDuplicate modules can cause a variety of strange behaviors should Drupal ever\nunexpectedly load the wrong version.\n\n\nOverlay module disabled\n\n\nName\n: \nDrupal-7:OverlayModuleDisabled\n\n\nPackage\n: \ndrutiny/plugin-drupal-7\n\n\nClass\n: \n\\Drutiny\\Plugin\\Drupal7\\Audit\\ModuleDisabled\n\n\nThe Drupal core overlay module can cause usability issues and prove to be\nproblematic from a support perspective. It is recommended not to use this\nmodule.\n\n\nParameters\n\n\n\n\n\n\n\n\nName\n\n\nType\n\n\nDescription\n\n\nDefault\n\n\n\n\n\n\n\n\n\n\nmodule\n\n\nstring\n\n\nThe name of the module to ensure is disabled.\n\n\noverlay\n\n\n\n\n\n\n\n\nPSA-2016-003: Scan webform files for anon PDF uploads\n\n\nName\n: \nDrupal-7:PSA-2016-003\n\n\nPackage\n: \ndrutiny/plugin-drupal-7\n\n\nClass\n: \n\\Drutiny\\Plugin\\Drupal7\\Audit\\Security\\WebformPSA_2016_003\n\n\nThis issue only affects sites that allow file uploads by non-trusted or\nanonymous visitors, and stores those uploads in a public file system. For more\ninformation, visit https://www.drupal.org/forum/newsletters/security-public-service-announcements/2016-10-10/drupal-file-upload-by-anonymous\n\n\nPage Cache Control Max Age\n\n\nName\n: \nDrupal-7:PageCacheMaximumAge\n\n\nPackage\n: \ndrutiny/plugin-drupal-7\n\n\nClass\n: \n\\Drutiny\\Plugin\\Drupal7\\Audit\\VariableCompare\n\n\nEnsure you page cache expiry is set to an optimal level for best performance.\n\n\nParameters\n\n\n\n\n\n\n\n\nName\n\n\nType\n\n\nDescription\n\n\nDefault\n\n\n\n\n\n\n\n\n\n\nkey\n\n\nstring\n\n\nThe name of the variable to check.\n\n\npage_cache_maximum_age\n\n\n\n\n\n\nvalue\n\n\nbool\n\n\nThe value of the variable\n\n\n300\n\n\n\n\n\n\ncomp_type\n\n\nstring\n\n\nThe comparison operator to use\n\n\ngte\n\n\n\n\n\n\n\n\nPHP\n\n\nName\n: \nDrupal-7:PhpModuleDisabled\n\n\nPackage\n: \ndrutiny/plugin-drupal-7\n\n\nClass\n: \n\\Drutiny\\Plugin\\Drupal7\\Audit\\ModuleDisabled\n\n\nEnabling this module can cause security and performance issues as it allows\nusers to execute PHP code on your site. There are better alternatives out\nthere that do not expose such vulnerabilities on your site.\n\n\nParameters\n\n\n\n\n\n\n\n\nName\n\n\nType\n\n\nDescription\n\n\nDefault\n\n\n\n\n\n\n\n\n\n\nmodule\n\n\nstring\n\n\nThe name of the module to ensure is disabled.\n\n\nphp\n\n\n\n\n\n\n\n\nPoor Mans Cron Disabled\n\n\nName\n: \nDrupal-7:PoorMansCronDisabled\n\n\nPackage\n: \ndrutiny/plugin-drupal-7\n\n\nClass\n: \n\\Drutiny\\Plugin\\Drupal7\\Audit\\VariableCompare\n\n\nChecks that poor mans cron is disabled and will never run with a web thread.\n\n\nParameters\n\n\n\n\n\n\n\n\nName\n\n\nType\n\n\nDescription\n\n\nDefault\n\n\n\n\n\n\n\n\n\n\nkey\n\n\nstring\n\n\nThe name of the variable to check.\n\n\ncron_safe_threshold\n\n\n\n\n\n\nvalue\n\n\nbool\n\n\nThe value of the variable\n\n\n0\n\n\n\n\n\n\n\n\nCSS Aggregation\n\n\nName\n: \nDrupal-7:SA-CORE-2013-003\n\n\nPackage\n: \ndrutiny/plugin-drupal-7\n\n\nClass\n: \n\\Drutiny\\Audit\\Drupal\\ModuleVersion\n\n\nSA-CORE-2013-003 announed several vulnerabilities and is considered highly critical. The vulnerabilities are:\n\n\n\n\nMultiple vulnerabilities due to optimistic cross-site request forgery protection (Form API validation): CVE-2013-6385\n\n\nMultiple vulnerabilities due to weakness in pseudorandom number generation using mt_rand() (Form API, OpenID and random password generation - Drupal 6 and 7): CVE-2013-6386\n\n\nCode execution prevention (Files directory .htaccess for Apache - Drupal 6 and 7): No CVE; considered remediated through \"security hardening\"\n\n\nAccess bypass (Security token validation - Drupal 6 and 7): No CVE; considered remediated through \"security hardening.\"\n\n\nCross-site scripting (Image module - Drupal 7): CVE-2013-6387\n\n\nCross-site scripting (Color module - Drupal 7): CVE-2013-6388\n\n\nOpen redirect (Overlay module - Drupal 7): CVE-2013-6389\n\n\n\n\nFor more information, see \nSA-CORE-2013-003\n.\n\n\nParameters\n\n\n\n\n\n\n\n\nName\n\n\nType\n\n\nDescription\n\n\nDefault\n\n\n\n\n\n\n\n\n\n\nmodule\n\n\nstring\n\n\nThe module to version information for\n\n\nsystem\n\n\n\n\n\n\nversion\n\n\nstring\n\n\nThe static version to check against.\n\n\n7.24\n\n\n\n\n\n\n\n\nSearch404 module disabled\n\n\nName\n: \nDrupal-7:Search404ModuleDisabled\n\n\nPackage\n: \ndrutiny/plugin-drupal-7\n\n\nClass\n: \n\\Drutiny\\Plugin\\Drupal7\\Audit\\ModuleDisabled\n\n\nThe search 404 module conducts searches on 404 pages. This can have impacts to\nperformance and confuse search bots.\n\n\nParameters\n\n\n\n\n\n\n\n\nName\n\n\nType\n\n\nDescription\n\n\nDefault\n\n\n\n\n\n\n\n\n\n\nmodule\n\n\nstring\n\n\nThe name of the module to ensure is disabled.\n\n\nsearch404\n\n\n\n\n\n\n\n\nSearch API Database\n\n\nName\n: \nDrupal-7:SearchApiDb\n\n\nPackage\n: \ndrutiny/plugin-drupal-7\n\n\nClass\n: \n\\Drutiny\\Plugin\\Drupal7\\Audit\\SearchApiDb\n\n\nSearch backed with the database (and not Solr) can cause performance impacts to your site. Often the SQL queries caused but using the database are slow.\n\n\nParameters\n\n\n\n\n\n\n\n\nName\n\n\nType\n\n\nDescription\n\n\nDefault\n\n\n\n\n\n\n\n\n\n\nmax_size\n\n\nint\n\n\nThe maximum size of nodes in the index before it is considered an error.\n\n\n\n\n\n\n\n\n\n\n50\n\n\n\n\n\n\n\n\n\n\n\n\nSecure Pages: HTTP Redirect\n\n\nName\n: \nDrupal-7:SecureHTTPRedirect\n\n\nPackage\n: \ndrutiny/plugin-drupal-7\n\n\nClass\n: \n\\Drutiny\\Plugin\\Drupal7\\Audit\\VariableCompare\n\n\nEnsure secure pages module is configured to force redirect to HTTPS.\n\n\nParameters\n\n\n\n\n\n\n\n\nName\n\n\nType\n\n\nDescription\n\n\nDefault\n\n\n\n\n\n\n\n\n\n\nkey\n\n\nstring\n\n\nThe name of the variable to check.\n\n\nsecurepages_pages\n\n\n\n\n\n\nvalue\n\n\nstring\n\n\nThe value of the variable\n\n\n'*'\n\n\n\n\n\n\n\n\nSecure Pages Config: Enabled\n\n\nName\n: \nDrupal-7:SecurePagesConfig:Enabled\n\n\nPackage\n: \ndrutiny/plugin-drupal-7\n\n\nClass\n: \n\\Drutiny\\Plugin\\Drupal7\\Audit\\VariableCompare\n\n\nTo start using secure pages this setting must be enabled. This setting will\nonly be able to changed when the web server has been configured for SSL.\n\n\nParameters\n\n\n\n\n\n\n\n\nName\n\n\nType\n\n\nDescription\n\n\nDefault\n\n\n\n\n\n\n\n\n\n\nkey\n\n\nstring\n\n\nThe name of the variable to check.\n\n\nsecurepages_enable\n\n\n\n\n\n\nvalue\n\n\nbool\n\n\nThe value of the variable\n\n\n1\n\n\n\n\n\n\n\n\nSecure Pages Config: No Downgrade\n\n\nName\n: \nDrupal-7:SecurePagesConfig:NoDowngrade\n\n\nPackage\n: \ndrutiny/plugin-drupal-7\n\n\nClass\n: \n\\Drutiny\\Plugin\\Drupal7\\Audit\\VariableCompare\n\n\nSecure pages shouldn't be configured to allow downgrade to HTTP.\n\n\nParameters\n\n\n\n\n\n\n\n\nName\n\n\nType\n\n\nDescription\n\n\nDefault\n\n\n\n\n\n\n\n\n\n\nkey\n\n\nstring\n\n\nThe name of the variable to check.\n\n\nsecurepages_switch\n\n\n\n\n\n\nvalue\n\n\nbool\n\n\nThe value of the variable\n\n\n0\n\n\n\n\n\n\n\n\nSecure Pages Enabled\n\n\nName\n: \nDrupal-7:SecurePagesEnabled\n\n\nPackage\n: \ndrutiny/plugin-drupal-7\n\n\nClass\n: \n\\Drutiny\\Audit\\Drupal\\ModuleEnabled\n\n\nSecure Pages module ensures requests are handled securely.\n\n\nParameters\n\n\n\n\n\n\n\n\nName\n\n\nType\n\n\nDescription\n\n\nDefault\n\n\n\n\n\n\n\n\n\n\nmodule\n\n\nstring\n\n\nThe name of the module to ensure is enabled.\n\n\nsecurepages\n\n\n\n\n\n\n\n\nSecure Pages Listed\n\n\nName\n: \nDrupal-7:SecurePagesListed\n\n\nPackage\n: \ndrutiny/plugin-drupal-7\n\n\nClass\n: \n\\Drutiny\\Plugin\\Drupal7\\Audit\\VariableCompare\n\n\nEnusre Secure Pages is configured to secure a whitelist of pages.\n\n\nParameters\n\n\n\n\n\n\n\n\nName\n\n\nType\n\n\nDescription\n\n\nDefault\n\n\n\n\n\n\n\n\n\n\nkey\n\n\nstring\n\n\nThe name of the variable to check.\n\n\nsecurepages_secure\n\n\n\n\n\n\nvalue\n\n\nbool\n\n\nThe value of the variable\n\n\n1\n\n\n\n\n\n\n\n\nShield Disabled\n\n\nName\n: \nDrupal-7:ShieldModuleDisabled\n\n\nPackage\n: \ndrutiny/plugin-drupal-7\n\n\nClass\n: \n\\Drutiny\\Plugin\\Drupal7\\Audit\\ModuleDisabled\n\n\nThe shield module protects Drupal sites from prying eyes, often it is used\nto protect sites that are not yet live, but should never be enabled for\nlive sites.\n\n\nParameters\n\n\n\n\n\n\n\n\nName\n\n\nType\n\n\nDescription\n\n\nDefault\n\n\n\n\n\n\n\n\n\n\nmodule\n\n\nstring\n\n\nThe name of the module to ensure is disabled.\n\n\nshield\n\n\n\n\n\n\n\n\nSimpletest\n\n\nName\n: \nDrupal-7:SimpletestModuleDisabled\n\n\nPackage\n: \ndrutiny/plugin-drupal-7\n\n\nClass\n: \n\\Drutiny\\Plugin\\Drupal7\\Audit\\ModuleDisabled\n\n\nThe Simpletest module is for testing purposes only and shouldn't be enabled\nin production.\n\n\nParameters\n\n\n\n\n\n\n\n\nName\n\n\nType\n\n\nDescription\n\n\nDefault\n\n\n\n\n\n\n\n\n\n\nmodule\n\n\nstring\n\n\nThe name of the module to ensure is disabled.\n\n\nsimpletest\n\n\n\n\n\n\n\n\nStatistics\n\n\nName\n: \nDrupal-7:StatisticsModuleDisabled\n\n\nPackage\n: \ndrutiny/plugin-drupal-7\n\n\nClass\n: \n\\Drutiny\\Plugin\\Drupal7\\Audit\\ModuleDisabled\n\n\nThis module comes with Drupal core and attempts to track page view information.\nHowever as often Drupal uses upstream page cache proxies this module is often\ninccurate and not worth the performance impact it causes.\n\n\nParameters\n\n\n\n\n\n\n\n\nName\n\n\nType\n\n\nDescription\n\n\nDefault\n\n\n\n\n\n\n\n\n\n\nmodule\n\n\nstring\n\n\nThe name of the module to ensure is disabled.\n\n\nstatistics\n\n\n\n\n\n\n\n\nUntrusted Roles with administrative permissions\n\n\nName\n: \nDrupal-7:UntrustedRoles\n\n\nPackage\n: \ndrutiny/plugin-drupal-7\n\n\nClass\n: \n\\Drutiny\\Plugin\\Drupal7\\Audit\\UntrustedRoles\n\n\nMake sure administrative permissions has not been assigned to untrusted roles.\n\n\nParameters\n\n\n\n\n\n\n\n\nName\n\n\nType\n\n\nDescription\n\n\nDefault\n\n\n\n\n\n\n\n\n\n\nuntrusted_roles\n\n\narray\n\n\nThe names of untrusted Roles.\n\n\n- 'anonymous user'\n- 'authenticated user'\n\n\n\n\n\n\n\n\nUpdate\n\n\nName\n: \nDrupal-7:UpdateModuleDisabled\n\n\nPackage\n: \ndrutiny/plugin-drupal-7\n\n\nClass\n: \n\\Drutiny\\Plugin\\Drupal7\\Audit\\ModuleDisabled\n\n\nThe update module fetches the latest module information from Drupal.org and\nreports on the module statuses used on the site.\n\n\nParameters\n\n\n\n\n\n\n\n\nName\n\n\nType\n\n\nDescription\n\n\nDefault\n\n\n\n\n\n\n\n\n\n\nmodule\n\n\nstring\n\n\nThe name of the module to ensure is disabled.\n\n\nupdate\n\n\n\n\n\n\n\n\nUser #1 Locked Down\n\n\nName\n: \nDrupal-7:User1LockDown\n\n\nPackage\n: \ndrutiny/plugin-drupal-7\n\n\nClass\n: \n\\Drutiny\\Plugin\\Drupal7\\Audit\\User1\n\n\nIt is important to lock down user #1 in Drupal, this user is special an\nignores access control.\n\n\nParameters\n\n\n\n\n\n\n\n\nName\n\n\nType\n\n\nDescription\n\n\nDefault\n\n\n\n\n\n\n\n\n\n\nblacklist\n\n\nstring\n\n\nThe usernames of the the uid:1 user that are considered forbidden.\n\n\n\n\n\n\n\n\nExpression maybe a regular expression to match patterns.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n(admin\n\n\nroot\n\n\ndrupal\n\n\n\n\n\n\nemail\n\n\nstring\n\n\nThe email that the uid:1 user should have. If an empty string is provided\n\n\n\n\n\n\n\n\nthen this check is omitted.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nno_reply@example.com\n\n\n\n\n\n\n\n\n\n\nstatus\n\n\nboolean\n\n\nEnsures the uid:1 user status reflects the same as this argument. Defaults\n\n\n\n\n\n\n\n\nto active (1).\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n1\n\n\n\n\n\n\n\n\n\n\n\n\nUser Registration Disabled\n\n\nName\n: \nDrupal-7:UserRegistrationDisabled\n\n\nPackage\n: \ndrutiny/plugin-drupal-7\n\n\nClass\n: \n\\Drutiny\\Plugin\\Drupal7\\Audit\\VariableCompare\n\n\nAnonymous sites should have user registration set to off to prevent spam\nregistrations.\n\n\nParameters\n\n\n\n\n\n\n\n\nName\n\n\nType\n\n\nDescription\n\n\nDefault\n\n\n\n\n\n\n\n\n\n\nkey\n\n\nstring\n\n\nThe name of the variable to check.\n\n\nuser_register\n\n\n\n\n\n\nvalue\n\n\nbool\n\n\nThe value of the variable\n\n\n0\n\n\n\n\n\n\n\n\nViews Cache\n\n\nName\n: \nDrupal-7:ViewsCache\n\n\nPackage\n: \ndrutiny/plugin-drupal-7\n\n\nClass\n: \n\\Drutiny\\Plugin\\Drupal7\\Audit\\ViewsCache\n\n\nEnsure views cache is enabled and configured\n\n\nViews Pagination\n\n\nName\n: \nDrupal-7:ViewsPagination\n\n\nPackage\n: \ndrutiny/plugin-drupal-7\n\n\nClass\n: \n\\Drutiny\\Plugin\\Drupal7\\Audit\\ViewsPagination\n\n\nEnsure views pagination is not over a threshold\n\n\nParameters\n\n\n\n\n\n\n\n\nName\n\n\nType\n\n\nDescription\n\n\nDefault\n\n\n\n\n\n\n\n\n\n\nlimit\n\n\ninteger\n\n\nThe maximum number of rows a view can list\n\n\n60\n\n\n\n\n\n\n\n\nViews SQL Signature\n\n\nName\n: \nDrupal-7:ViewsSqlSignature\n\n\nPackage\n: \ndrutiny/plugin-drupal-7\n\n\nClass\n: \n\\Drutiny\\Plugin\\Drupal7\\Audit\\VariableCompare\n\n\nEnsure that Views SQL queries contain a signature that will identify the view\nthe SQL query came from. Useful for database performance debugging.\n\n\nParameters\n\n\n\n\n\n\n\n\nName\n\n\nType\n\n\nDescription\n\n\nDefault\n\n\n\n\n\n\n\n\n\n\nkey\n\n\nstring\n\n\nThe name of the variable to check.\n\n\nviews_sql_signature\n\n\n\n\n\n\nvalue\n\n\nbool\n\n\nThe value of the variable\n\n\n1\n\n\n\n\n\n\n\n\nXML sitemap base URL\n\n\nName\n: \nDrupal-7:XMLSitemapBaseURL\n\n\nPackage\n: \ndrutiny/plugin-drupal-7\n\n\nClass\n: \n\\Drutiny\\Plugin\\Drupal7\\Audit\\VariableCompare\n\n\nThe XML sitemap module adds a sitemap on the URL \n/sitemap.xml\n.\nIf not properly configured, the sitemap will point to an incorrect or\npossibly broken site.\n\n\nParameters\n\n\n\n\n\n\n\n\nName\n\n\nType\n\n\nDescription\n\n\nDefault\n\n\n\n\n\n\n\n\n\n\nkey\n\n\nstring\n\n\nThe name of the variable to compare.\n\n\nxmlsitemap_base_url\n\n\n\n\n\n\nvalue\n\n\nmixed\n\n\nThe value to compare against\n\n\n'^https?://.+$'\n\n\n\n\n\n\ncomp_type\n\n\nstring\n\n\nThe comparison operator to use\n\n\nregex\n\n\n\n\n\n\nrequired_modules\n\n\narray\n\n\nAn optional array of modules required in order to check variables\n\n\nxmlsitemap\n\n\n\n\n\n\n\n\nZen rebuild registry disabled\n\n\nName\n: \nDrupal-7:ZenRegistryRebuild\n\n\nPackage\n: \ndrutiny/plugin-drupal-7\n\n\nClass\n: \n\\Drutiny\\Plugin\\Drupal7\\Audit\\ZenRebuildRegistry\n\n\nThe rebuild registry feature is enabled for your theme. This setting is only\nused during theme development, and can negatively impact site performance.\n\n\nEntityReference Autocomplete Performance\n\n\nName\n: \nDrupal-7:entityreference\n\n\nPackage\n: \ndrutiny/plugin-drupal-7\n\n\nClass\n: \nDrutiny\\Plugin\\Drupal7\\Audit\\EntityReferenceAutocomplete\n\n\nEnsure that entity reference fields are configured correctly.", 
            "title": "drutiny/plugin-drupal-7"
        }, 
        {
            "location": "/policies/drutiny-plugin-drupal-7/#blacklist-permissions", 
            "text": "Name :  Drupal-7:BlackListPermissions  Package :  drutiny/plugin-drupal-7  Class :  \\Drutiny\\Plugin\\Drupal7\\Audit\\BlacklistPermissions  Checks to ensure roles do not contain blacklisted permissions.", 
            "title": "BlackList Permissions"
        }, 
        {
            "location": "/policies/drutiny-plugin-drupal-7/#parameters", 
            "text": "Name  Type  Description  Default      permissions  array  An array of permissions to ensure are not available to non-administrator     roles        - 'administer site configuration'", 
            "title": "Parameters"
        }, 
        {
            "location": "/policies/drutiny-plugin-drupal-7/#css-aggregation", 
            "text": "Name :  Drupal-7:CSSAggregation  Package :  drutiny/plugin-drupal-7  Class :  \\Drutiny\\Plugin\\Drupal7\\Audit\\VariableCompare  With CSS optimization disabled, your website visitors are experiencing slower\npage performance and the server load is increased.", 
            "title": "CSS Aggregation"
        }, 
        {
            "location": "/policies/drutiny-plugin-drupal-7/#parameters_1", 
            "text": "Name  Type  Description  Default      key  string  The name of the variable to check.  preprocess_css    value  bool  The value of the variable  1", 
            "title": "Parameters"
        }, 
        {
            "location": "/policies/drutiny-plugin-drupal-7/#application-page-cache", 
            "text": "Name :  Drupal-7:CacheLifetime  Package :  drutiny/plugin-drupal-7  Class :  \\Drutiny\\Plugin\\Drupal7\\Audit\\VariableCompare  The minimum cache lifetime prevents Drupal from clearing page and block caches\nafter changes are made to nodes or blocks, for a set period of time. This can\ncause unexpected behavior when editing content or when an external cache such\nas a CDN or Varnish is employed.", 
            "title": "Application Page Cache"
        }, 
        {
            "location": "/policies/drutiny-plugin-drupal-7/#parameters_2", 
            "text": "Name  Type  Description  Default      key  string  The name of the variable to check.  cache_lifetime    value  bool  The value of the variable  0", 
            "title": "Parameters"
        }, 
        {
            "location": "/policies/drutiny-plugin-drupal-7/#cron-running-regularly", 
            "text": "Name :  Drupal-7:CronLast  Package :  drutiny/plugin-drupal-7  Class :  \\Drutiny\\Plugin\\Drupal7\\Audit\\CronLast  Making sure the cron jobs are running properly is key to a healthy Drupal site.", 
            "title": "Cron running regularly"
        }, 
        {
            "location": "/policies/drutiny-plugin-drupal-7/#database-logging-disabled", 
            "text": "Name :  Drupal-7:DblogModuleDisabled  Package :  drutiny/plugin-drupal-7  Class :  \\Drutiny\\Plugin\\Drupal7\\Audit\\ModuleDisabled  The database logging module logs Drupal's watchdog logs into the Drupal database.\nThis works fine in development but can cause performance issues for production\nwebsites. Its recommended to disabled this module in production.", 
            "title": "Database logging disabled"
        }, 
        {
            "location": "/policies/drutiny-plugin-drupal-7/#parameters_3", 
            "text": "Name  Type  Description  Default      module  string  The name of the module to ensure is disabled.  dblog", 
            "title": "Parameters"
        }, 
        {
            "location": "/policies/drutiny-plugin-drupal-7/#error-level", 
            "text": "Name :  Drupal-7:ErrorLevel  Package :  drutiny/plugin-drupal-7  Class :  \\Drutiny\\Plugin\\Drupal7\\Audit\\VariableCompare  When PHP encounters an error, it can generate an error log and display a\nreport on the screen. While these error messages can be helpful in\ndebugging your site, they can be a security risk on a live site as they may\nreveal information about your server that can be used to compromise it.\nsite becoming unavailable or unresponsive.", 
            "title": "Error Level"
        }, 
        {
            "location": "/policies/drutiny-plugin-drupal-7/#parameters_4", 
            "text": "Name  Type  Description  Default      key  string  The name of the variable to check.  error_level    value  bool  The value of the variable  0", 
            "title": "Parameters"
        }, 
        {
            "location": "/policies/drutiny-plugin-drupal-7/#image-derivatives", 
            "text": "Name :  Drupal-7:ImageDerivatives  Package :  drutiny/plugin-drupal-7  Class :  \\Drutiny\\Plugin\\Drupal7\\Audit\\VariableCompare  Drupal core's Image module allows for the on-demand generation of image\nderivatives. This capability can be abused by requesting a large number\nof new derivatives which can fill up the server disk space, and which\ncan cause a very high CPU load. Either of these effects may lead to the\nsite becoming unavailable or unresponsive.", 
            "title": "Image Derivatives"
        }, 
        {
            "location": "/policies/drutiny-plugin-drupal-7/#parameters_5", 
            "text": "Name  Type  Description  Default      key  string  The name of the variable to check.  image_allow_insecure_derivatives    value  bool  The value of the variable  0    default  bool  The default value of the variable  0", 
            "title": "Parameters"
        }, 
        {
            "location": "/policies/drutiny-plugin-drupal-7/#installation-complete", 
            "text": "Name :  Drupal-7:InstallTaskCompleted  Package :  drutiny/plugin-drupal-7  Class :  \\Drutiny\\Plugin\\Drupal7\\Audit\\VariableCompare  If you fail to set this variable correctly, it can leave your  install.php \nscript open to the general public.", 
            "title": "Installation Complete"
        }, 
        {
            "location": "/policies/drutiny-plugin-drupal-7/#parameters_6", 
            "text": "Name  Type  Description  Default      key  string  The name of the variable to check.  install_task    value  mixed  The value of the variable  done", 
            "title": "Parameters"
        }, 
        {
            "location": "/policies/drutiny-plugin-drupal-7/#js-aggregation", 
            "text": "Name :  Drupal-7:JsAggregation  Package :  drutiny/plugin-drupal-7  Class :  \\Drutiny\\Plugin\\Drupal7\\Audit\\VariableCompare  With JS optimization disabled, your website visitors are experiencing slower\npage performance and the server load is increased.", 
            "title": "Js Aggregation"
        }, 
        {
            "location": "/policies/drutiny-plugin-drupal-7/#parameters_7", 
            "text": "Name  Type  Description  Default      key  string  The name of the variable to check.  preprocess_js    value  bool  The value of the variable  1", 
            "title": "Parameters"
        }, 
        {
            "location": "/policies/drutiny-plugin-drupal-7/#missing-modules", 
            "text": "Name :  Drupal-7:MissingModules  Package :  drutiny/plugin-drupal-7  Class :  \\Drutiny\\Plugin\\Drupal7\\Audit\\MissingModules  The warning was introduced in Drupal 7.50 and is displayed when Drupal is\nattempting to find a module or theme in the file system, but either cannot\nfind it or does not find it in the expected place.", 
            "title": "Missing modules"
        }, 
        {
            "location": "/policies/drutiny-plugin-drupal-7/#modules-enabled", 
            "text": "Name :  Drupal-7:ModulesEnabled  Package :  drutiny/plugin-drupal-7  Class :  \\Drutiny\\Plugin\\Drupal7\\Audit\\ModulesEnabled  Check that a set of modules are enabled.", 
            "title": "Modules enabled"
        }, 
        {
            "location": "/policies/drutiny-plugin-drupal-7/#parameters_8", 
            "text": "Name  Type  Description  Default      modules  array  The name of the modules to ensure is enabled.  - syslog", 
            "title": "Parameters"
        }, 
        {
            "location": "/policies/drutiny-plugin-drupal-7/#no-administrators", 
            "text": "Name :  Drupal-7:NoAdmins  Package :  drutiny/plugin-drupal-7  Class :  \\Drutiny\\Plugin\\Drupal7\\Audit\\NoAdministrators  Ensure there are no administrators beyond uid:1. This reduces the surface area\nof escalated accounts being compromised.", 
            "title": "No Administrators"
        }, 
        {
            "location": "/policies/drutiny-plugin-drupal-7/#duplicate-modules", 
            "text": "Name :  Drupal-7:NoDuplicateModules  Package :  drutiny/plugin-drupal-7  Class :  \\Drutiny\\Plugin\\Drupal7\\Audit\\DuplicateModules  Duplicate modules can cause a variety of strange behaviors should Drupal ever\nunexpectedly load the wrong version.", 
            "title": "Duplicate modules"
        }, 
        {
            "location": "/policies/drutiny-plugin-drupal-7/#overlay-module-disabled", 
            "text": "Name :  Drupal-7:OverlayModuleDisabled  Package :  drutiny/plugin-drupal-7  Class :  \\Drutiny\\Plugin\\Drupal7\\Audit\\ModuleDisabled  The Drupal core overlay module can cause usability issues and prove to be\nproblematic from a support perspective. It is recommended not to use this\nmodule.", 
            "title": "Overlay module disabled"
        }, 
        {
            "location": "/policies/drutiny-plugin-drupal-7/#parameters_9", 
            "text": "Name  Type  Description  Default      module  string  The name of the module to ensure is disabled.  overlay", 
            "title": "Parameters"
        }, 
        {
            "location": "/policies/drutiny-plugin-drupal-7/#psa-2016-003-scan-webform-files-for-anon-pdf-uploads", 
            "text": "Name :  Drupal-7:PSA-2016-003  Package :  drutiny/plugin-drupal-7  Class :  \\Drutiny\\Plugin\\Drupal7\\Audit\\Security\\WebformPSA_2016_003  This issue only affects sites that allow file uploads by non-trusted or\nanonymous visitors, and stores those uploads in a public file system. For more\ninformation, visit https://www.drupal.org/forum/newsletters/security-public-service-announcements/2016-10-10/drupal-file-upload-by-anonymous", 
            "title": "PSA-2016-003: Scan webform files for anon PDF uploads"
        }, 
        {
            "location": "/policies/drutiny-plugin-drupal-7/#page-cache-control-max-age", 
            "text": "Name :  Drupal-7:PageCacheMaximumAge  Package :  drutiny/plugin-drupal-7  Class :  \\Drutiny\\Plugin\\Drupal7\\Audit\\VariableCompare  Ensure you page cache expiry is set to an optimal level for best performance.", 
            "title": "Page Cache Control Max Age"
        }, 
        {
            "location": "/policies/drutiny-plugin-drupal-7/#parameters_10", 
            "text": "Name  Type  Description  Default      key  string  The name of the variable to check.  page_cache_maximum_age    value  bool  The value of the variable  300    comp_type  string  The comparison operator to use  gte", 
            "title": "Parameters"
        }, 
        {
            "location": "/policies/drutiny-plugin-drupal-7/#php", 
            "text": "Name :  Drupal-7:PhpModuleDisabled  Package :  drutiny/plugin-drupal-7  Class :  \\Drutiny\\Plugin\\Drupal7\\Audit\\ModuleDisabled  Enabling this module can cause security and performance issues as it allows\nusers to execute PHP code on your site. There are better alternatives out\nthere that do not expose such vulnerabilities on your site.", 
            "title": "PHP"
        }, 
        {
            "location": "/policies/drutiny-plugin-drupal-7/#parameters_11", 
            "text": "Name  Type  Description  Default      module  string  The name of the module to ensure is disabled.  php", 
            "title": "Parameters"
        }, 
        {
            "location": "/policies/drutiny-plugin-drupal-7/#poor-mans-cron-disabled", 
            "text": "Name :  Drupal-7:PoorMansCronDisabled  Package :  drutiny/plugin-drupal-7  Class :  \\Drutiny\\Plugin\\Drupal7\\Audit\\VariableCompare  Checks that poor mans cron is disabled and will never run with a web thread.", 
            "title": "Poor Mans Cron Disabled"
        }, 
        {
            "location": "/policies/drutiny-plugin-drupal-7/#parameters_12", 
            "text": "Name  Type  Description  Default      key  string  The name of the variable to check.  cron_safe_threshold    value  bool  The value of the variable  0", 
            "title": "Parameters"
        }, 
        {
            "location": "/policies/drutiny-plugin-drupal-7/#css-aggregation_1", 
            "text": "Name :  Drupal-7:SA-CORE-2013-003  Package :  drutiny/plugin-drupal-7  Class :  \\Drutiny\\Audit\\Drupal\\ModuleVersion  SA-CORE-2013-003 announed several vulnerabilities and is considered highly critical. The vulnerabilities are:   Multiple vulnerabilities due to optimistic cross-site request forgery protection (Form API validation): CVE-2013-6385  Multiple vulnerabilities due to weakness in pseudorandom number generation using mt_rand() (Form API, OpenID and random password generation - Drupal 6 and 7): CVE-2013-6386  Code execution prevention (Files directory .htaccess for Apache - Drupal 6 and 7): No CVE; considered remediated through \"security hardening\"  Access bypass (Security token validation - Drupal 6 and 7): No CVE; considered remediated through \"security hardening.\"  Cross-site scripting (Image module - Drupal 7): CVE-2013-6387  Cross-site scripting (Color module - Drupal 7): CVE-2013-6388  Open redirect (Overlay module - Drupal 7): CVE-2013-6389   For more information, see  SA-CORE-2013-003 .", 
            "title": "CSS Aggregation"
        }, 
        {
            "location": "/policies/drutiny-plugin-drupal-7/#parameters_13", 
            "text": "Name  Type  Description  Default      module  string  The module to version information for  system    version  string  The static version to check against.  7.24", 
            "title": "Parameters"
        }, 
        {
            "location": "/policies/drutiny-plugin-drupal-7/#search404-module-disabled", 
            "text": "Name :  Drupal-7:Search404ModuleDisabled  Package :  drutiny/plugin-drupal-7  Class :  \\Drutiny\\Plugin\\Drupal7\\Audit\\ModuleDisabled  The search 404 module conducts searches on 404 pages. This can have impacts to\nperformance and confuse search bots.", 
            "title": "Search404 module disabled"
        }, 
        {
            "location": "/policies/drutiny-plugin-drupal-7/#parameters_14", 
            "text": "Name  Type  Description  Default      module  string  The name of the module to ensure is disabled.  search404", 
            "title": "Parameters"
        }, 
        {
            "location": "/policies/drutiny-plugin-drupal-7/#search-api-database", 
            "text": "Name :  Drupal-7:SearchApiDb  Package :  drutiny/plugin-drupal-7  Class :  \\Drutiny\\Plugin\\Drupal7\\Audit\\SearchApiDb  Search backed with the database (and not Solr) can cause performance impacts to your site. Often the SQL queries caused but using the database are slow.", 
            "title": "Search API Database"
        }, 
        {
            "location": "/policies/drutiny-plugin-drupal-7/#parameters_15", 
            "text": "Name  Type  Description  Default      max_size  int  The maximum size of nodes in the index before it is considered an error.      50", 
            "title": "Parameters"
        }, 
        {
            "location": "/policies/drutiny-plugin-drupal-7/#secure-pages-http-redirect", 
            "text": "Name :  Drupal-7:SecureHTTPRedirect  Package :  drutiny/plugin-drupal-7  Class :  \\Drutiny\\Plugin\\Drupal7\\Audit\\VariableCompare  Ensure secure pages module is configured to force redirect to HTTPS.", 
            "title": "Secure Pages: HTTP Redirect"
        }, 
        {
            "location": "/policies/drutiny-plugin-drupal-7/#parameters_16", 
            "text": "Name  Type  Description  Default      key  string  The name of the variable to check.  securepages_pages    value  string  The value of the variable  '*'", 
            "title": "Parameters"
        }, 
        {
            "location": "/policies/drutiny-plugin-drupal-7/#secure-pages-config-enabled", 
            "text": "Name :  Drupal-7:SecurePagesConfig:Enabled  Package :  drutiny/plugin-drupal-7  Class :  \\Drutiny\\Plugin\\Drupal7\\Audit\\VariableCompare  To start using secure pages this setting must be enabled. This setting will\nonly be able to changed when the web server has been configured for SSL.", 
            "title": "Secure Pages Config: Enabled"
        }, 
        {
            "location": "/policies/drutiny-plugin-drupal-7/#parameters_17", 
            "text": "Name  Type  Description  Default      key  string  The name of the variable to check.  securepages_enable    value  bool  The value of the variable  1", 
            "title": "Parameters"
        }, 
        {
            "location": "/policies/drutiny-plugin-drupal-7/#secure-pages-config-no-downgrade", 
            "text": "Name :  Drupal-7:SecurePagesConfig:NoDowngrade  Package :  drutiny/plugin-drupal-7  Class :  \\Drutiny\\Plugin\\Drupal7\\Audit\\VariableCompare  Secure pages shouldn't be configured to allow downgrade to HTTP.", 
            "title": "Secure Pages Config: No Downgrade"
        }, 
        {
            "location": "/policies/drutiny-plugin-drupal-7/#parameters_18", 
            "text": "Name  Type  Description  Default      key  string  The name of the variable to check.  securepages_switch    value  bool  The value of the variable  0", 
            "title": "Parameters"
        }, 
        {
            "location": "/policies/drutiny-plugin-drupal-7/#secure-pages-enabled", 
            "text": "Name :  Drupal-7:SecurePagesEnabled  Package :  drutiny/plugin-drupal-7  Class :  \\Drutiny\\Audit\\Drupal\\ModuleEnabled  Secure Pages module ensures requests are handled securely.", 
            "title": "Secure Pages Enabled"
        }, 
        {
            "location": "/policies/drutiny-plugin-drupal-7/#parameters_19", 
            "text": "Name  Type  Description  Default      module  string  The name of the module to ensure is enabled.  securepages", 
            "title": "Parameters"
        }, 
        {
            "location": "/policies/drutiny-plugin-drupal-7/#secure-pages-listed", 
            "text": "Name :  Drupal-7:SecurePagesListed  Package :  drutiny/plugin-drupal-7  Class :  \\Drutiny\\Plugin\\Drupal7\\Audit\\VariableCompare  Enusre Secure Pages is configured to secure a whitelist of pages.", 
            "title": "Secure Pages Listed"
        }, 
        {
            "location": "/policies/drutiny-plugin-drupal-7/#parameters_20", 
            "text": "Name  Type  Description  Default      key  string  The name of the variable to check.  securepages_secure    value  bool  The value of the variable  1", 
            "title": "Parameters"
        }, 
        {
            "location": "/policies/drutiny-plugin-drupal-7/#shield-disabled", 
            "text": "Name :  Drupal-7:ShieldModuleDisabled  Package :  drutiny/plugin-drupal-7  Class :  \\Drutiny\\Plugin\\Drupal7\\Audit\\ModuleDisabled  The shield module protects Drupal sites from prying eyes, often it is used\nto protect sites that are not yet live, but should never be enabled for\nlive sites.", 
            "title": "Shield Disabled"
        }, 
        {
            "location": "/policies/drutiny-plugin-drupal-7/#parameters_21", 
            "text": "Name  Type  Description  Default      module  string  The name of the module to ensure is disabled.  shield", 
            "title": "Parameters"
        }, 
        {
            "location": "/policies/drutiny-plugin-drupal-7/#simpletest", 
            "text": "Name :  Drupal-7:SimpletestModuleDisabled  Package :  drutiny/plugin-drupal-7  Class :  \\Drutiny\\Plugin\\Drupal7\\Audit\\ModuleDisabled  The Simpletest module is for testing purposes only and shouldn't be enabled\nin production.", 
            "title": "Simpletest"
        }, 
        {
            "location": "/policies/drutiny-plugin-drupal-7/#parameters_22", 
            "text": "Name  Type  Description  Default      module  string  The name of the module to ensure is disabled.  simpletest", 
            "title": "Parameters"
        }, 
        {
            "location": "/policies/drutiny-plugin-drupal-7/#statistics", 
            "text": "Name :  Drupal-7:StatisticsModuleDisabled  Package :  drutiny/plugin-drupal-7  Class :  \\Drutiny\\Plugin\\Drupal7\\Audit\\ModuleDisabled  This module comes with Drupal core and attempts to track page view information.\nHowever as often Drupal uses upstream page cache proxies this module is often\ninccurate and not worth the performance impact it causes.", 
            "title": "Statistics"
        }, 
        {
            "location": "/policies/drutiny-plugin-drupal-7/#parameters_23", 
            "text": "Name  Type  Description  Default      module  string  The name of the module to ensure is disabled.  statistics", 
            "title": "Parameters"
        }, 
        {
            "location": "/policies/drutiny-plugin-drupal-7/#untrusted-roles-with-administrative-permissions", 
            "text": "Name :  Drupal-7:UntrustedRoles  Package :  drutiny/plugin-drupal-7  Class :  \\Drutiny\\Plugin\\Drupal7\\Audit\\UntrustedRoles  Make sure administrative permissions has not been assigned to untrusted roles.", 
            "title": "Untrusted Roles with administrative permissions"
        }, 
        {
            "location": "/policies/drutiny-plugin-drupal-7/#parameters_24", 
            "text": "Name  Type  Description  Default      untrusted_roles  array  The names of untrusted Roles.  - 'anonymous user' - 'authenticated user'", 
            "title": "Parameters"
        }, 
        {
            "location": "/policies/drutiny-plugin-drupal-7/#update", 
            "text": "Name :  Drupal-7:UpdateModuleDisabled  Package :  drutiny/plugin-drupal-7  Class :  \\Drutiny\\Plugin\\Drupal7\\Audit\\ModuleDisabled  The update module fetches the latest module information from Drupal.org and\nreports on the module statuses used on the site.", 
            "title": "Update"
        }, 
        {
            "location": "/policies/drutiny-plugin-drupal-7/#parameters_25", 
            "text": "Name  Type  Description  Default      module  string  The name of the module to ensure is disabled.  update", 
            "title": "Parameters"
        }, 
        {
            "location": "/policies/drutiny-plugin-drupal-7/#user-1-locked-down", 
            "text": "Name :  Drupal-7:User1LockDown  Package :  drutiny/plugin-drupal-7  Class :  \\Drutiny\\Plugin\\Drupal7\\Audit\\User1  It is important to lock down user #1 in Drupal, this user is special an\nignores access control.", 
            "title": "User #1 Locked Down"
        }, 
        {
            "location": "/policies/drutiny-plugin-drupal-7/#parameters_26", 
            "text": "Name  Type  Description  Default      blacklist  string  The usernames of the the uid:1 user that are considered forbidden.     Expression maybe a regular expression to match patterns.        (admin  root  drupal    email  string  The email that the uid:1 user should have. If an empty string is provided     then this check is omitted.        no_reply@example.com      status  boolean  Ensures the uid:1 user status reflects the same as this argument. Defaults     to active (1).        1", 
            "title": "Parameters"
        }, 
        {
            "location": "/policies/drutiny-plugin-drupal-7/#user-registration-disabled", 
            "text": "Name :  Drupal-7:UserRegistrationDisabled  Package :  drutiny/plugin-drupal-7  Class :  \\Drutiny\\Plugin\\Drupal7\\Audit\\VariableCompare  Anonymous sites should have user registration set to off to prevent spam\nregistrations.", 
            "title": "User Registration Disabled"
        }, 
        {
            "location": "/policies/drutiny-plugin-drupal-7/#parameters_27", 
            "text": "Name  Type  Description  Default      key  string  The name of the variable to check.  user_register    value  bool  The value of the variable  0", 
            "title": "Parameters"
        }, 
        {
            "location": "/policies/drutiny-plugin-drupal-7/#views-cache", 
            "text": "Name :  Drupal-7:ViewsCache  Package :  drutiny/plugin-drupal-7  Class :  \\Drutiny\\Plugin\\Drupal7\\Audit\\ViewsCache  Ensure views cache is enabled and configured", 
            "title": "Views Cache"
        }, 
        {
            "location": "/policies/drutiny-plugin-drupal-7/#views-pagination", 
            "text": "Name :  Drupal-7:ViewsPagination  Package :  drutiny/plugin-drupal-7  Class :  \\Drutiny\\Plugin\\Drupal7\\Audit\\ViewsPagination  Ensure views pagination is not over a threshold", 
            "title": "Views Pagination"
        }, 
        {
            "location": "/policies/drutiny-plugin-drupal-7/#parameters_28", 
            "text": "Name  Type  Description  Default      limit  integer  The maximum number of rows a view can list  60", 
            "title": "Parameters"
        }, 
        {
            "location": "/policies/drutiny-plugin-drupal-7/#views-sql-signature", 
            "text": "Name :  Drupal-7:ViewsSqlSignature  Package :  drutiny/plugin-drupal-7  Class :  \\Drutiny\\Plugin\\Drupal7\\Audit\\VariableCompare  Ensure that Views SQL queries contain a signature that will identify the view\nthe SQL query came from. Useful for database performance debugging.", 
            "title": "Views SQL Signature"
        }, 
        {
            "location": "/policies/drutiny-plugin-drupal-7/#parameters_29", 
            "text": "Name  Type  Description  Default      key  string  The name of the variable to check.  views_sql_signature    value  bool  The value of the variable  1", 
            "title": "Parameters"
        }, 
        {
            "location": "/policies/drutiny-plugin-drupal-7/#xml-sitemap-base-url", 
            "text": "Name :  Drupal-7:XMLSitemapBaseURL  Package :  drutiny/plugin-drupal-7  Class :  \\Drutiny\\Plugin\\Drupal7\\Audit\\VariableCompare  The XML sitemap module adds a sitemap on the URL  /sitemap.xml .\nIf not properly configured, the sitemap will point to an incorrect or\npossibly broken site.", 
            "title": "XML sitemap base URL"
        }, 
        {
            "location": "/policies/drutiny-plugin-drupal-7/#parameters_30", 
            "text": "Name  Type  Description  Default      key  string  The name of the variable to compare.  xmlsitemap_base_url    value  mixed  The value to compare against  '^https?://.+$'    comp_type  string  The comparison operator to use  regex    required_modules  array  An optional array of modules required in order to check variables  xmlsitemap", 
            "title": "Parameters"
        }, 
        {
            "location": "/policies/drutiny-plugin-drupal-7/#zen-rebuild-registry-disabled", 
            "text": "Name :  Drupal-7:ZenRegistryRebuild  Package :  drutiny/plugin-drupal-7  Class :  \\Drutiny\\Plugin\\Drupal7\\Audit\\ZenRebuildRegistry  The rebuild registry feature is enabled for your theme. This setting is only\nused during theme development, and can negatively impact site performance.", 
            "title": "Zen rebuild registry disabled"
        }, 
        {
            "location": "/policies/drutiny-plugin-drupal-7/#entityreference-autocomplete-performance", 
            "text": "Name :  Drupal-7:entityreference  Package :  drutiny/plugin-drupal-7  Class :  Drutiny\\Plugin\\Drupal7\\Audit\\EntityReferenceAutocomplete  Ensure that entity reference fields are configured correctly.", 
            "title": "EntityReference Autocomplete Performance"
        }, 
        {
            "location": "/policies/drutiny-plugin-drupal-8/", 
            "text": "Configuration development module is not installed\n\n\nName\n: \nDrupal-8:ConfigDevelDisabled\n\n\nPackage\n: \ndrutiny/plugin-drupal-8\n\n\nClass\n: \n\\Drutiny\\Plugin\\Drupal8\\Audit\\ModuleDisabled\n\n\nThis module helps with developing configuration. Do not deploy in production\nenvironments. Exercise caution and always use version control.\n\n\nParameters\n\n\n\n\n\n\n\n\nName\n\n\nType\n\n\nDescription\n\n\nDefault\n\n\n\n\n\n\n\n\n\n\nmodule\n\n\nstring\n\n\nThe name of the module to ensure is not installed.\n\n\nconfig_devel\n\n\n\n\n\n\n\n\nCron last run\n\n\nName\n: \nDrupal-8:CronHasRun\n\n\nPackage\n: \ndrutiny/plugin-drupal-8\n\n\nClass\n: \n\\Drutiny\\Plugin\\Drupal8\\Audit\\CronHasRun\n\n\nCron should be run regularly to ensure that scheduled events are processed in\na timely manner.\n\n\nParameters\n\n\n\n\n\n\n\n\nName\n\n\nType\n\n\nDescription\n\n\nDefault\n\n\n\n\n\n\n\n\n\n\ncron_max_interval\n\n\ninteger\n\n\nThe maximum number in seconds alloweds since last cron run\n\n\n86400\n\n\n\n\n\n\n\n\nCron running regularly\n\n\nName\n: \nDrupal-8:CronLast\n\n\nPackage\n: \ndrutiny/plugin-drupal-8\n\n\nClass\n: \n\\Drutiny\\Plugin\\Drupal8\\Audit\\CronLast\n\n\nMaking sure the cron jobs are running properly is key to a healthy Drupal site.\n\n\nCSS aggregation is enabled\n\n\nName\n: \nDrupal-8:CssAggregation\n\n\nPackage\n: \ndrutiny/plugin-drupal-8\n\n\nClass\n: \n\\Drutiny\\Plugin\\Drupal8\\Audit\\ConfigCheck\n\n\nWith CSS optimization not installed your website visitors are experiencing slower page performance and the server load is increased.\n\n\nParameters\n\n\n\n\n\n\n\n\nName\n\n\nType\n\n\nDescription\n\n\nDefault\n\n\n\n\n\n\n\n\n\n\ncollection\n\n\nstring\n\n\nThe config collection the config item belows to\n\n\nsystem.performance\n\n\n\n\n\n\nkey\n\n\nstring\n\n\n\n\ncss.preprocess\n\n\n\n\n\n\nvalue\n\n\nboolean\n\n\n\n\ntrue\n\n\n\n\n\n\n\n\nDatabase logging is not installed\n\n\nName\n: \nDrupal-8:DblogDisabled\n\n\nPackage\n: \ndrutiny/plugin-drupal-8\n\n\nClass\n: \n\\Drutiny\\Plugin\\Drupal8\\Audit\\ModuleDisabled\n\n\nThe Drupal core databse logging module can cause database performance issues\nin production. It is recommended to disable and uninstall this module. Use the\nsyslog module in its place.\n\n\nParameters\n\n\n\n\n\n\n\n\nName\n\n\nType\n\n\nDescription\n\n\nDefault\n\n\n\n\n\n\n\n\n\n\nmodule\n\n\nstring\n\n\nThe name of the module to ensure is not installed.\n\n\ndblog\n\n\n\n\n\n\n\n\nMemcache set as default cache backend\n\n\nName\n: \nDrupal-8:DefaultCacheMemcache\n\n\nPackage\n: \ndrutiny/plugin-drupal-8\n\n\nClass\n: \n\\Drutiny\\Plugin\\Drupal8\\Audit\\SettingCompare\n\n\nEnsure the majority of your application caching is driven through Memcache\nby setting it as the default backend (usually opposed to using the database).\n\n\nMemcache is a better service for cache storage over the database as it\ndecouples cache performance from database load. This means slow queries will\nnot impact cache performance (beyond any shared resourcing between the services).\n\n\nParameters\n\n\n\n\n\n\n\n\nName\n\n\nType\n\n\nDescription\n\n\nDefault\n\n\n\n\n\n\n\n\n\n\nkey\n\n\nstring\n\n\nThe key in settings.php to check. Use dot syntax to traverse settings array.\n\n\n\n\n\n\n\n\n\n\ncache.default\n\n\n\n\n\n\n\n\n\n\nvalue\n\n\nstring\n\n\nThe value that should be set if the settings key exists.\n\n\n\n\n\n\n\n\n\n\ncache.backend.memcache\n\n\n\n\n\n\n\n\n\n\n\n\nDevel module is not installed\n\n\nName\n: \nDrupal-8:DevelDisabled\n\n\nPackage\n: \ndrutiny/plugin-drupal-8\n\n\nClass\n: \n\\Drutiny\\Plugin\\Drupal8\\Audit\\ModuleDisabled\n\n\nA suite of modules containing fun for module developers and themers. Not\nrecommended for production use.\n\n\nParameters\n\n\n\n\n\n\n\n\nName\n\n\nType\n\n\nDescription\n\n\nDefault\n\n\n\n\n\n\n\n\n\n\nmodule\n\n\nstring\n\n\nThe name of the module to ensure is not installed.\n\n\ndevel\n\n\n\n\n\n\n\n\nNo duplicate modules found\n\n\nName\n: \nDrupal-8:DuplicateModules\n\n\nPackage\n: \ndrutiny/plugin-drupal-8\n\n\nClass\n: \n\\Drutiny\\Plugin\\Drupal8\\Audit\\DuplicateModules\n\n\nDuplicate modules can cause a variety of strange behaviors should Drupal ever\nunexpectedly load the wrong version.\n\n\nHide errors from screen (log only)\n\n\nName\n: \nDrupal-8:ErrorLevel\n\n\nPackage\n: \ndrutiny/plugin-drupal-8\n\n\nClass\n: \n\\Drutiny\\Plugin\\Drupal8\\Audit\\ConfigCheck\n\n\nWhen PHP encounters an error, it can generate an error log and display a\nreport on the screen. While these error messages can be helpful in debugging\nyour site, they can be a security risk on a live site as they may reveal\ninformation about your server that can be used to compromise it.\n\n\nParameters\n\n\n\n\n\n\n\n\nName\n\n\nType\n\n\nDescription\n\n\nDefault\n\n\n\n\n\n\n\n\n\n\ncollection\n\n\nstring\n\n\nThe collection the config belongs to.\n\n\nsystem.logging\n\n\n\n\n\n\nkey\n\n\nstring\n\n\nThe key the config belongs to.\n\n\nerror_level\n\n\n\n\n\n\nvalue\n\n\nmixed\n\n\nThe value to compare against the retrived value.\n\n\nhide\n\n\n\n\n\n\n\n\nCore Fast 404 Enabled\n\n\nName\n: \nDrupal-8:Fast404Enabled\n\n\nPackage\n: \ndrutiny/plugin-drupal-8\n\n\nClass\n: \n\\Drutiny\\Plugin\\Drupal8\\Audit\\ConfigCheck\n\n\nCore's fast 404 configuration allows Drupal to spend little time on 404 error\npages that match the Fast 404 criteria.\n\n\nParameters\n\n\n\n\n\n\n\n\nName\n\n\nType\n\n\nDescription\n\n\nDefault\n\n\n\n\n\n\n\n\n\n\ncollection\n\n\nstring\n\n\nThe collection the config belongs to.\n\n\nsystem.performance\n\n\n\n\n\n\nkey\n\n\nstring\n\n\nThe key the config belongs to.\n\n\nfast_404.enabled\n\n\n\n\n\n\nvalue\n\n\nmixed\n\n\nThe value to compare against the retrived value.\n\n\ntrue\n\n\n\n\n\n\n\n\nJavascript aggregation\n\n\nName\n: \nDrupal-8:JsAggregation\n\n\nPackage\n: \ndrutiny/plugin-drupal-8\n\n\nClass\n: \n\\Drutiny\\Plugin\\Drupal8\\Audit\\ConfigCheck\n\n\nWith Javascript aggregation not installed your website visitors are experiencing slower page performance especially on slower networks.\n\n\nParameters\n\n\n\n\n\n\n\n\nName\n\n\nType\n\n\nDescription\n\n\nDefault\n\n\n\n\n\n\n\n\n\n\ncollection\n\n\nstring\n\n\nThe collection the config belongs to.\n\n\nsystem.performance\n\n\n\n\n\n\nkey\n\n\nstring\n\n\nThe key the config belongs to.\n\n\njs.preprocess\n\n\n\n\n\n\nvalue\n\n\nmixed\n\n\nThe value to compare against the retrived value.\n\n\ntrue\n\n\n\n\n\n\n\n\nKint module is not installed\n\n\nName\n: \nDrupal-8:KintDisabled\n\n\nPackage\n: \ndrutiny/plugin-drupal-8\n\n\nClass\n: \n\\Drutiny\\Plugin\\Drupal8\\Audit\\ModuleDisabled\n\n\nKint for PHP is a tool designed to present your debugging data in the\nabsolutely best way possible.\nIn other words, it's var_dump() and debug_backtrace() on steroids.\nEasy to use, but powerful and customizable. An essential addition to your\ndevelopment toolbox. Should not be used in production.\n\n\nParameters\n\n\n\n\n\n\n\n\nName\n\n\nType\n\n\nDescription\n\n\nDefault\n\n\n\n\n\n\n\n\n\n\nmodule\n\n\nstring\n\n\nThe name of the module to ensure is not installed.\n\n\nkint\n\n\n\n\n\n\n\n\nMemcache module enabled\n\n\nName\n: \nDrupal-8:MemcacheEnabled\n\n\nPackage\n: \ndrutiny/plugin-drupal-8\n\n\nClass\n: \n\\Drutiny\\Audit\\Drupal\\ModuleEnabled\n\n\nThis module provides integration between Drupal and Memcached with the following features:\n\n\n\n\nAn API for using Memcached and the PECL Memcache or Memcached libraries with Drupal.\n\n\nMemcache backends for the following systems (all drop-in):\n\n Caching\n\n Locking\n\n\nA module that provides a comprehensive administrative overview of Drupal's interaction with Memcached and stats.\n\n\n\n\nParameters\n\n\n\n\n\n\n\n\nName\n\n\nType\n\n\nDescription\n\n\nDefault\n\n\n\n\n\n\n\n\n\n\nmodule\n\n\nstring\n\n\nThe name of the module to ensure is enabled.\n\n\nmemcache\n\n\n\n\n\n\n\n\nMemcache extension set\n\n\nName\n: \nDrupal-8:MemcachedExtension\n\n\nPackage\n: \ndrutiny/plugin-drupal-8\n\n\nClass\n: \n\\Drutiny\\Plugin\\Drupal8\\Audit\\SettingCompare\n\n\nIn order for the memcache module to work, the php \nmemcache\nd\n extension\n\nmust be available on the runtime environment. In addition, Drupal must tell\nthe memcache module to use this extension (opposed to the memcache extension).\n\n\nParameters\n\n\n\n\n\n\n\n\nName\n\n\nType\n\n\nDescription\n\n\nDefault\n\n\n\n\n\n\n\n\n\n\nkey\n\n\nstring\n\n\nThe key in settings.php to check. Use dot syntax to traverse settings array.\n\n\n\n\n\n\n\n\n\n\nmemcache.extension\n\n\n\n\n\n\n\n\n\n\nvalue\n\n\nstring\n\n\nThe value that should be set if the settings key exists.\n\n\n\n\n\n\n\n\n\n\nMemcached\n\n\n\n\n\n\n\n\n\n\n\n\nAutomated Cron module is not installed\n\n\nName\n: \nDrupal-8:NoAutomatedCron\n\n\nPackage\n: \ndrutiny/plugin-drupal-8\n\n\nClass\n: \n\\Drutiny\\Plugin\\Drupal8\\Audit\\ModuleDisabled\n\n\nThe automated cron module will hijack page requests in order to run cron.\nThis has a performance impact for end users who are unlucky being burdened\nwith the task without consent and unknowingly.\n\n\nParameters\n\n\n\n\n\n\n\n\nName\n\n\nType\n\n\nDescription\n\n\nDefault\n\n\n\n\n\n\n\n\n\n\nmodule\n\n\nstring\n\n\nThe module to check is enabled.\n\n\nautomated_cron\n\n\n\n\n\n\n\n\nBackup and Migrate is not installed\n\n\nName\n: \nDrupal-8:NoBackupAndMigrate\n\n\nPackage\n: \ndrutiny/plugin-drupal-8\n\n\nClass\n: \n\\Drutiny\\Plugin\\Drupal8\\Audit\\ModuleDisabled\n\n\nWith Backup and Migrate you can dump some or all of your database tables to a\nfile download or save to a file on the server or offsite, and to restore from\nan uploaded or previously saved database dump. You can choose which tables and\nwhat data to backup and cache data is excluded by default. It is not advised\nto use this module in production if there are alternative options to obtain\nthe same ends.\n\n\nParameters\n\n\n\n\n\n\n\n\nName\n\n\nType\n\n\nDescription\n\n\nDefault\n\n\n\n\n\n\n\n\n\n\nmodule\n\n\nstring\n\n\nThe name of the module to ensure is not installed.\n\n\nbackup_migrate\n\n\n\n\n\n\n\n\nNo Experimental Modules in Use\n\n\nName\n: \nDrupal-8:NoExperimental\n\n\nPackage\n: \ndrutiny/plugin-drupal-8\n\n\nClass\n: \n\\Drutiny\\Plugin\\Drupal8\\Audit\\NoExperimentalCore\n\n\nDrupal 8 core introduces the concept of experimental modules. These are\nmodules that are provided with Drupal core for testing purposes, but that are\n not yet fully supported. Experimental modules are included in the Core\n (Experimental) package on the Extend page of a Drupal site (/admin/modules).\n\n\nMore information at https://www.drupal.org/core/experimental\n\n\nPage cache expiry is set\n\n\nName\n: \nDrupal-8:PageCacheExpiry\n\n\nPackage\n: \ndrutiny/plugin-drupal-8\n\n\nClass\n: \n\\Drutiny\\Plugin\\Drupal8\\Audit\\ConfigCheck\n\n\nPage cache expiry informs upstream proxies such as Varnish and CDNs how long\nthey may cache a page response before it should be considered stale and refetched\nfrom Drupal.\n\n\nParameters\n\n\n\n\n\n\n\n\nName\n\n\nType\n\n\nDescription\n\n\nDefault\n\n\n\n\n\n\n\n\n\n\ncollection\n\n\nstring\n\n\nThe collection the config belongs to.\n\n\nsystem.performance\n\n\n\n\n\n\nkey\n\n\nstring\n\n\nThe key the config belongs to.\n\n\ncache.page.max_age\n\n\n\n\n\n\nvalue\n\n\ninteger\n\n\nThe number of seconds page cache should be considered valid for.\n\n\n3600\n\n\n\n\n\n\ncomp_type\n\n\nstring\n\n\nThe type of comparison to conduct. Defaults to equals. See Drutiny\\Audit\\AbstractComparison\n\n\n'\n='\n\n\n\n\n\n\n\n\nPHP module is not installed\n\n\nName\n: \nDrupal-8:PhpDisabled\n\n\nPackage\n: \ndrutiny/plugin-drupal-8\n\n\nClass\n: \n\\Drutiny\\Plugin\\Drupal8\\Audit\\ModuleDisabled\n\n\nEnabling this module can cause security and performance issues as it allows\nusers to execute PHP code on your site. There are better alternatives out\nthere that do not expose such vulnerabilities on your site.\n\n\nParameters\n\n\n\n\n\n\n\n\nName\n\n\nType\n\n\nDescription\n\n\nDefault\n\n\n\n\n\n\n\n\n\n\nmodule\n\n\nstring\n\n\nThe name of the module to ensure is not installed.\n\n\nphp\n\n\n\n\n\n\n\n\nPurge module enabled\n\n\nName\n: \nDrupal-8:PurgeEnabled\n\n\nPackage\n: \ndrutiny/plugin-drupal-8\n\n\nClass\n: \n\\Drutiny\\Audit\\Drupal\\ModuleEnabled\n\n\nPurge modules integrates other services into Drupal's caching strategy\n\n\nParameters\n\n\n\n\n\n\n\n\nName\n\n\nType\n\n\nDescription\n\n\nDefault\n\n\n\n\n\n\n\n\n\n\nmodule\n\n\nstring\n\n\nThe name of the module to ensure is enabled.\n\n\npurge\n\n\n\n\n\n\n\n\nShield module is not installed\n\n\nName\n: \nDrupal-8:ShieldDisabled\n\n\nPackage\n: \ndrutiny/plugin-drupal-8\n\n\nClass\n: \n\\Drutiny\\Plugin\\Drupal8\\Audit\\ModuleDisabled\n\n\nThe shield module protects Drupal sites from prying eyes, often it is used to\nprotect sites that are not yet live, but should never be enabled for live sites.\n\n\nParameters\n\n\n\n\n\n\n\n\nName\n\n\nType\n\n\nDescription\n\n\nDefault\n\n\n\n\n\n\n\n\n\n\nmodule\n\n\nstring\n\n\nThe module to check is enabled.\n\n\nshield\n\n\n\n\n\n\n\n\nSimpletest module is not installed\n\n\nName\n: \nDrupal-8:SimpleTestDisabled\n\n\nPackage\n: \ndrutiny/plugin-drupal-8\n\n\nClass\n: \n\\Drutiny\\Plugin\\Drupal8\\Audit\\ModuleDisabled\n\n\nThe Simpletest module is for testing purposes only and shouldn't be enabled\nin production.\n\n\nParameters\n\n\n\n\n\n\n\n\nName\n\n\nType\n\n\nDescription\n\n\nDefault\n\n\n\n\n\n\n\n\n\n\nmodule\n\n\nstring\n\n\nThe name of the module to ensure is not installed.\n\n\nsimpletest\n\n\n\n\n\n\n\n\nStatistics module is not installed\n\n\nName\n: \nDrupal-8:StatisticsDisabled\n\n\nPackage\n: \ndrutiny/plugin-drupal-8\n\n\nClass\n: \n\\Drutiny\\Plugin\\Drupal8\\Audit\\ModuleDisabled\n\n\nThis module comes with Drupal core and attempts to track page view information.\nHowever as often Drupal uses upstream page cache proxies this module is often\ninccurate and not worth the performance impact it causes.\n\n\nParameters\n\n\n\n\n\n\n\n\nName\n\n\nType\n\n\nDescription\n\n\nDefault\n\n\n\n\n\n\n\n\n\n\nmodule\n\n\nstring\n\n\nThe name of the module to ensure is not installed.\n\n\nstatistics\n\n\n\n\n\n\n\n\nUntrusted Roles with administrative permissions\n\n\nName\n: \nDrupal-8:UntrustedRoles\n\n\nPackage\n: \ndrutiny/plugin-drupal-8\n\n\nClass\n: \n\\Drutiny\\Plugin\\Drupal8\\Audit\\UntrustedRoles\n\n\nMake sure administrative permissions has not been assigned to untrusted roles.\n\n\nParameters\n\n\n\n\n\n\n\n\nName\n\n\nType\n\n\nDescription\n\n\nDefault\n\n\n\n\n\n\n\n\n\n\nuntrusted_roles\n\n\narray\n\n\nThe untrusted Roles.\n\n\n- anonymous\n- authenticated\n\n\n\n\n\n\n\n\nUnused modules in the codebase\n\n\nName\n: \nDrupal-8:UnusedModules\n\n\nPackage\n: \ndrutiny/plugin-drupal-8\n\n\nClass\n: \n\\Drutiny\\Plugin\\Drupal8\\Audit\\UnusedModules\n\n\nUpdate module is not installed\n\n\nName\n: \nDrupal-8:UpdateDisabled\n\n\nPackage\n: \ndrutiny/plugin-drupal-8\n\n\nClass\n: \n\\Drutiny\\Plugin\\Drupal8\\Audit\\ModuleDisabled\n\n\nThe update module fetches the latest module information from Drupal.org and\nreports on the module statuses used on the site.\n\n\nParameters\n\n\n\n\n\n\n\n\nName\n\n\nType\n\n\nDescription\n\n\nDefault\n\n\n\n\n\n\n\n\n\n\nmodule\n\n\nstring\n\n\nThe name of the module to ensure is not installed.\n\n\nupdate\n\n\n\n\n\n\n\n\nAdministrator login is locked down (uid:1)\n\n\nName\n: \nDrupal-8:User1LockDown\n\n\nPackage\n: \ndrutiny/plugin-drupal-8\n\n\nClass\n: \n\\Drutiny\\Plugin\\Drupal8\\Audit\\User1\n\n\nIt is important to lock down user #1 in Drupal, this user is special an\nignores access control.\n\n\nParameters\n\n\n\n\n\n\n\n\nName\n\n\nType\n\n\nDescription\n\n\nDefault\n\n\n\n\n\n\n\n\n\n\nblacklist\n\n\nstring\n\n\nThe usernames of the the uid:1 user that are considered forbidden.\n\n\n\n\n\n\n\n\nExpression maybe a regular expression to match patterns.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n(admin\n\n\nroot\n\n\ndrupal\n\n\n\n\n\n\nemail\n\n\nstring\n\n\nThe email that the uid:1 user should have. If an empty string is provided\n\n\n\n\n\n\n\n\nthen this check is omitted.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nno_reply@example.com\n\n\n\n\n\n\n\n\n\n\nstatus\n\n\nboolean\n\n\nEnsures the uid:1 user status reflects the same as this argument. Defaults\n\n\n\n\n\n\n\n\nto active (1).\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n1\n\n\n\n\n\n\n\n\n\n\n\n\nUser registration available to administrators only\n\n\nName\n: \nDrupal-8:UserRegistrationAdminOnly\n\n\nPackage\n: \ndrutiny/plugin-drupal-8\n\n\nClass\n: \n\\Drutiny\\Plugin\\Drupal8\\Audit\\ConfigCheck\n\n\nAnonymous sites should have user registration set to off to prevent spam\nregistrations\n\n\nParameters\n\n\n\n\n\n\n\n\nName\n\n\nType\n\n\nDescription\n\n\nDefault\n\n\n\n\n\n\n\n\n\n\ncollection\n\n\nstring\n\n\nThe collection the config belongs to.\n\n\nuser.settings\n\n\n\n\n\n\nkey\n\n\nstring\n\n\nThe key the config belongs to.\n\n\nregister\n\n\n\n\n\n\nvalue\n\n\nmixed\n\n\nThe value to compare against the retrived value.\n\n\nadmin_only\n\n\n\n\n\n\n\n\nWebprofiler module is not installed\n\n\nName\n: \nDrupal-8:WebprofilerDisabled\n\n\nPackage\n: \ndrutiny/plugin-drupal-8\n\n\nClass\n: \n\\Drutiny\\Plugin\\Drupal8\\Audit\\ModuleDisabled\n\n\nThe web profiler is a developer module to help profile a PHP page load.\n\n\nParameters\n\n\n\n\n\n\n\n\nName\n\n\nType\n\n\nDescription\n\n\nDefault\n\n\n\n\n\n\n\n\n\n\nmodule\n\n\nstring\n\n\nThe name of the module to ensure is not installed.\n\n\nwebprofiler\n\n\n\n\n\n\n\n\nX-Drupal-Cache-Tags Header Disabled\n\n\nName\n: \nHTTP:X-Drupal-Cache-Tags\n\n\nPackage\n: \ndrutiny/plugin-drupal-8\n\n\nClass\n: \n\\Drutiny\\Http\\Audit\\HttpHeaderNotExists\n\n\nX-Drupal-Cache-Tags is a debugging HTTP header Drupal sends to inform developers\nwhat cache tags are being utilised in an HTTP response. The header can be high\nverbosity on responses that use a lot of entities from both content and\nconfiguration.\n\n\nThis header should only be used in local development or in environment specific\ndebugging.\n\n\nParameters\n\n\n\n\n\n\n\n\nName\n\n\nType\n\n\nDescription\n\n\nDefault\n\n\n\n\n\n\n\n\n\n\nheader\n\n\nstring\n\n\nThe HTTP header to check the value of.\n\n\nX-Drupal-Cache-Tags", 
            "title": "drutiny/plugin-drupal-8"
        }, 
        {
            "location": "/policies/drutiny-plugin-drupal-8/#configuration-development-module-is-not-installed", 
            "text": "Name :  Drupal-8:ConfigDevelDisabled  Package :  drutiny/plugin-drupal-8  Class :  \\Drutiny\\Plugin\\Drupal8\\Audit\\ModuleDisabled  This module helps with developing configuration. Do not deploy in production\nenvironments. Exercise caution and always use version control.", 
            "title": "Configuration development module is not installed"
        }, 
        {
            "location": "/policies/drutiny-plugin-drupal-8/#parameters", 
            "text": "Name  Type  Description  Default      module  string  The name of the module to ensure is not installed.  config_devel", 
            "title": "Parameters"
        }, 
        {
            "location": "/policies/drutiny-plugin-drupal-8/#cron-last-run", 
            "text": "Name :  Drupal-8:CronHasRun  Package :  drutiny/plugin-drupal-8  Class :  \\Drutiny\\Plugin\\Drupal8\\Audit\\CronHasRun  Cron should be run regularly to ensure that scheduled events are processed in\na timely manner.", 
            "title": "Cron last run"
        }, 
        {
            "location": "/policies/drutiny-plugin-drupal-8/#parameters_1", 
            "text": "Name  Type  Description  Default      cron_max_interval  integer  The maximum number in seconds alloweds since last cron run  86400", 
            "title": "Parameters"
        }, 
        {
            "location": "/policies/drutiny-plugin-drupal-8/#cron-running-regularly", 
            "text": "Name :  Drupal-8:CronLast  Package :  drutiny/plugin-drupal-8  Class :  \\Drutiny\\Plugin\\Drupal8\\Audit\\CronLast  Making sure the cron jobs are running properly is key to a healthy Drupal site.", 
            "title": "Cron running regularly"
        }, 
        {
            "location": "/policies/drutiny-plugin-drupal-8/#css-aggregation-is-enabled", 
            "text": "Name :  Drupal-8:CssAggregation  Package :  drutiny/plugin-drupal-8  Class :  \\Drutiny\\Plugin\\Drupal8\\Audit\\ConfigCheck  With CSS optimization not installed your website visitors are experiencing slower page performance and the server load is increased.", 
            "title": "CSS aggregation is enabled"
        }, 
        {
            "location": "/policies/drutiny-plugin-drupal-8/#parameters_2", 
            "text": "Name  Type  Description  Default      collection  string  The config collection the config item belows to  system.performance    key  string   css.preprocess    value  boolean   true", 
            "title": "Parameters"
        }, 
        {
            "location": "/policies/drutiny-plugin-drupal-8/#database-logging-is-not-installed", 
            "text": "Name :  Drupal-8:DblogDisabled  Package :  drutiny/plugin-drupal-8  Class :  \\Drutiny\\Plugin\\Drupal8\\Audit\\ModuleDisabled  The Drupal core databse logging module can cause database performance issues\nin production. It is recommended to disable and uninstall this module. Use the\nsyslog module in its place.", 
            "title": "Database logging is not installed"
        }, 
        {
            "location": "/policies/drutiny-plugin-drupal-8/#parameters_3", 
            "text": "Name  Type  Description  Default      module  string  The name of the module to ensure is not installed.  dblog", 
            "title": "Parameters"
        }, 
        {
            "location": "/policies/drutiny-plugin-drupal-8/#memcache-set-as-default-cache-backend", 
            "text": "Name :  Drupal-8:DefaultCacheMemcache  Package :  drutiny/plugin-drupal-8  Class :  \\Drutiny\\Plugin\\Drupal8\\Audit\\SettingCompare  Ensure the majority of your application caching is driven through Memcache\nby setting it as the default backend (usually opposed to using the database).  Memcache is a better service for cache storage over the database as it\ndecouples cache performance from database load. This means slow queries will\nnot impact cache performance (beyond any shared resourcing between the services).", 
            "title": "Memcache set as default cache backend"
        }, 
        {
            "location": "/policies/drutiny-plugin-drupal-8/#parameters_4", 
            "text": "Name  Type  Description  Default      key  string  The key in settings.php to check. Use dot syntax to traverse settings array.      cache.default      value  string  The value that should be set if the settings key exists.      cache.backend.memcache", 
            "title": "Parameters"
        }, 
        {
            "location": "/policies/drutiny-plugin-drupal-8/#devel-module-is-not-installed", 
            "text": "Name :  Drupal-8:DevelDisabled  Package :  drutiny/plugin-drupal-8  Class :  \\Drutiny\\Plugin\\Drupal8\\Audit\\ModuleDisabled  A suite of modules containing fun for module developers and themers. Not\nrecommended for production use.", 
            "title": "Devel module is not installed"
        }, 
        {
            "location": "/policies/drutiny-plugin-drupal-8/#parameters_5", 
            "text": "Name  Type  Description  Default      module  string  The name of the module to ensure is not installed.  devel", 
            "title": "Parameters"
        }, 
        {
            "location": "/policies/drutiny-plugin-drupal-8/#no-duplicate-modules-found", 
            "text": "Name :  Drupal-8:DuplicateModules  Package :  drutiny/plugin-drupal-8  Class :  \\Drutiny\\Plugin\\Drupal8\\Audit\\DuplicateModules  Duplicate modules can cause a variety of strange behaviors should Drupal ever\nunexpectedly load the wrong version.", 
            "title": "No duplicate modules found"
        }, 
        {
            "location": "/policies/drutiny-plugin-drupal-8/#hide-errors-from-screen-log-only", 
            "text": "Name :  Drupal-8:ErrorLevel  Package :  drutiny/plugin-drupal-8  Class :  \\Drutiny\\Plugin\\Drupal8\\Audit\\ConfigCheck  When PHP encounters an error, it can generate an error log and display a\nreport on the screen. While these error messages can be helpful in debugging\nyour site, they can be a security risk on a live site as they may reveal\ninformation about your server that can be used to compromise it.", 
            "title": "Hide errors from screen (log only)"
        }, 
        {
            "location": "/policies/drutiny-plugin-drupal-8/#parameters_6", 
            "text": "Name  Type  Description  Default      collection  string  The collection the config belongs to.  system.logging    key  string  The key the config belongs to.  error_level    value  mixed  The value to compare against the retrived value.  hide", 
            "title": "Parameters"
        }, 
        {
            "location": "/policies/drutiny-plugin-drupal-8/#core-fast-404-enabled", 
            "text": "Name :  Drupal-8:Fast404Enabled  Package :  drutiny/plugin-drupal-8  Class :  \\Drutiny\\Plugin\\Drupal8\\Audit\\ConfigCheck  Core's fast 404 configuration allows Drupal to spend little time on 404 error\npages that match the Fast 404 criteria.", 
            "title": "Core Fast 404 Enabled"
        }, 
        {
            "location": "/policies/drutiny-plugin-drupal-8/#parameters_7", 
            "text": "Name  Type  Description  Default      collection  string  The collection the config belongs to.  system.performance    key  string  The key the config belongs to.  fast_404.enabled    value  mixed  The value to compare against the retrived value.  true", 
            "title": "Parameters"
        }, 
        {
            "location": "/policies/drutiny-plugin-drupal-8/#javascript-aggregation", 
            "text": "Name :  Drupal-8:JsAggregation  Package :  drutiny/plugin-drupal-8  Class :  \\Drutiny\\Plugin\\Drupal8\\Audit\\ConfigCheck  With Javascript aggregation not installed your website visitors are experiencing slower page performance especially on slower networks.", 
            "title": "Javascript aggregation"
        }, 
        {
            "location": "/policies/drutiny-plugin-drupal-8/#parameters_8", 
            "text": "Name  Type  Description  Default      collection  string  The collection the config belongs to.  system.performance    key  string  The key the config belongs to.  js.preprocess    value  mixed  The value to compare against the retrived value.  true", 
            "title": "Parameters"
        }, 
        {
            "location": "/policies/drutiny-plugin-drupal-8/#kint-module-is-not-installed", 
            "text": "Name :  Drupal-8:KintDisabled  Package :  drutiny/plugin-drupal-8  Class :  \\Drutiny\\Plugin\\Drupal8\\Audit\\ModuleDisabled  Kint for PHP is a tool designed to present your debugging data in the\nabsolutely best way possible.\nIn other words, it's var_dump() and debug_backtrace() on steroids.\nEasy to use, but powerful and customizable. An essential addition to your\ndevelopment toolbox. Should not be used in production.", 
            "title": "Kint module is not installed"
        }, 
        {
            "location": "/policies/drutiny-plugin-drupal-8/#parameters_9", 
            "text": "Name  Type  Description  Default      module  string  The name of the module to ensure is not installed.  kint", 
            "title": "Parameters"
        }, 
        {
            "location": "/policies/drutiny-plugin-drupal-8/#memcache-module-enabled", 
            "text": "Name :  Drupal-8:MemcacheEnabled  Package :  drutiny/plugin-drupal-8  Class :  \\Drutiny\\Audit\\Drupal\\ModuleEnabled  This module provides integration between Drupal and Memcached with the following features:   An API for using Memcached and the PECL Memcache or Memcached libraries with Drupal.  Memcache backends for the following systems (all drop-in):  Caching  Locking  A module that provides a comprehensive administrative overview of Drupal's interaction with Memcached and stats.", 
            "title": "Memcache module enabled"
        }, 
        {
            "location": "/policies/drutiny-plugin-drupal-8/#parameters_10", 
            "text": "Name  Type  Description  Default      module  string  The name of the module to ensure is enabled.  memcache", 
            "title": "Parameters"
        }, 
        {
            "location": "/policies/drutiny-plugin-drupal-8/#memcache-extension-set", 
            "text": "Name :  Drupal-8:MemcachedExtension  Package :  drutiny/plugin-drupal-8  Class :  \\Drutiny\\Plugin\\Drupal8\\Audit\\SettingCompare  In order for the memcache module to work, the php  memcache d  extension \nmust be available on the runtime environment. In addition, Drupal must tell\nthe memcache module to use this extension (opposed to the memcache extension).", 
            "title": "Memcache extension set"
        }, 
        {
            "location": "/policies/drutiny-plugin-drupal-8/#parameters_11", 
            "text": "Name  Type  Description  Default      key  string  The key in settings.php to check. Use dot syntax to traverse settings array.      memcache.extension      value  string  The value that should be set if the settings key exists.      Memcached", 
            "title": "Parameters"
        }, 
        {
            "location": "/policies/drutiny-plugin-drupal-8/#automated-cron-module-is-not-installed", 
            "text": "Name :  Drupal-8:NoAutomatedCron  Package :  drutiny/plugin-drupal-8  Class :  \\Drutiny\\Plugin\\Drupal8\\Audit\\ModuleDisabled  The automated cron module will hijack page requests in order to run cron.\nThis has a performance impact for end users who are unlucky being burdened\nwith the task without consent and unknowingly.", 
            "title": "Automated Cron module is not installed"
        }, 
        {
            "location": "/policies/drutiny-plugin-drupal-8/#parameters_12", 
            "text": "Name  Type  Description  Default      module  string  The module to check is enabled.  automated_cron", 
            "title": "Parameters"
        }, 
        {
            "location": "/policies/drutiny-plugin-drupal-8/#backup-and-migrate-is-not-installed", 
            "text": "Name :  Drupal-8:NoBackupAndMigrate  Package :  drutiny/plugin-drupal-8  Class :  \\Drutiny\\Plugin\\Drupal8\\Audit\\ModuleDisabled  With Backup and Migrate you can dump some or all of your database tables to a\nfile download or save to a file on the server or offsite, and to restore from\nan uploaded or previously saved database dump. You can choose which tables and\nwhat data to backup and cache data is excluded by default. It is not advised\nto use this module in production if there are alternative options to obtain\nthe same ends.", 
            "title": "Backup and Migrate is not installed"
        }, 
        {
            "location": "/policies/drutiny-plugin-drupal-8/#parameters_13", 
            "text": "Name  Type  Description  Default      module  string  The name of the module to ensure is not installed.  backup_migrate", 
            "title": "Parameters"
        }, 
        {
            "location": "/policies/drutiny-plugin-drupal-8/#no-experimental-modules-in-use", 
            "text": "Name :  Drupal-8:NoExperimental  Package :  drutiny/plugin-drupal-8  Class :  \\Drutiny\\Plugin\\Drupal8\\Audit\\NoExperimentalCore  Drupal 8 core introduces the concept of experimental modules. These are\nmodules that are provided with Drupal core for testing purposes, but that are\n not yet fully supported. Experimental modules are included in the Core\n (Experimental) package on the Extend page of a Drupal site (/admin/modules).  More information at https://www.drupal.org/core/experimental", 
            "title": "No Experimental Modules in Use"
        }, 
        {
            "location": "/policies/drutiny-plugin-drupal-8/#page-cache-expiry-is-set", 
            "text": "Name :  Drupal-8:PageCacheExpiry  Package :  drutiny/plugin-drupal-8  Class :  \\Drutiny\\Plugin\\Drupal8\\Audit\\ConfigCheck  Page cache expiry informs upstream proxies such as Varnish and CDNs how long\nthey may cache a page response before it should be considered stale and refetched\nfrom Drupal.", 
            "title": "Page cache expiry is set"
        }, 
        {
            "location": "/policies/drutiny-plugin-drupal-8/#parameters_14", 
            "text": "Name  Type  Description  Default      collection  string  The collection the config belongs to.  system.performance    key  string  The key the config belongs to.  cache.page.max_age    value  integer  The number of seconds page cache should be considered valid for.  3600    comp_type  string  The type of comparison to conduct. Defaults to equals. See Drutiny\\Audit\\AbstractComparison  ' ='", 
            "title": "Parameters"
        }, 
        {
            "location": "/policies/drutiny-plugin-drupal-8/#php-module-is-not-installed", 
            "text": "Name :  Drupal-8:PhpDisabled  Package :  drutiny/plugin-drupal-8  Class :  \\Drutiny\\Plugin\\Drupal8\\Audit\\ModuleDisabled  Enabling this module can cause security and performance issues as it allows\nusers to execute PHP code on your site. There are better alternatives out\nthere that do not expose such vulnerabilities on your site.", 
            "title": "PHP module is not installed"
        }, 
        {
            "location": "/policies/drutiny-plugin-drupal-8/#parameters_15", 
            "text": "Name  Type  Description  Default      module  string  The name of the module to ensure is not installed.  php", 
            "title": "Parameters"
        }, 
        {
            "location": "/policies/drutiny-plugin-drupal-8/#purge-module-enabled", 
            "text": "Name :  Drupal-8:PurgeEnabled  Package :  drutiny/plugin-drupal-8  Class :  \\Drutiny\\Audit\\Drupal\\ModuleEnabled  Purge modules integrates other services into Drupal's caching strategy", 
            "title": "Purge module enabled"
        }, 
        {
            "location": "/policies/drutiny-plugin-drupal-8/#parameters_16", 
            "text": "Name  Type  Description  Default      module  string  The name of the module to ensure is enabled.  purge", 
            "title": "Parameters"
        }, 
        {
            "location": "/policies/drutiny-plugin-drupal-8/#shield-module-is-not-installed", 
            "text": "Name :  Drupal-8:ShieldDisabled  Package :  drutiny/plugin-drupal-8  Class :  \\Drutiny\\Plugin\\Drupal8\\Audit\\ModuleDisabled  The shield module protects Drupal sites from prying eyes, often it is used to\nprotect sites that are not yet live, but should never be enabled for live sites.", 
            "title": "Shield module is not installed"
        }, 
        {
            "location": "/policies/drutiny-plugin-drupal-8/#parameters_17", 
            "text": "Name  Type  Description  Default      module  string  The module to check is enabled.  shield", 
            "title": "Parameters"
        }, 
        {
            "location": "/policies/drutiny-plugin-drupal-8/#simpletest-module-is-not-installed", 
            "text": "Name :  Drupal-8:SimpleTestDisabled  Package :  drutiny/plugin-drupal-8  Class :  \\Drutiny\\Plugin\\Drupal8\\Audit\\ModuleDisabled  The Simpletest module is for testing purposes only and shouldn't be enabled\nin production.", 
            "title": "Simpletest module is not installed"
        }, 
        {
            "location": "/policies/drutiny-plugin-drupal-8/#parameters_18", 
            "text": "Name  Type  Description  Default      module  string  The name of the module to ensure is not installed.  simpletest", 
            "title": "Parameters"
        }, 
        {
            "location": "/policies/drutiny-plugin-drupal-8/#statistics-module-is-not-installed", 
            "text": "Name :  Drupal-8:StatisticsDisabled  Package :  drutiny/plugin-drupal-8  Class :  \\Drutiny\\Plugin\\Drupal8\\Audit\\ModuleDisabled  This module comes with Drupal core and attempts to track page view information.\nHowever as often Drupal uses upstream page cache proxies this module is often\ninccurate and not worth the performance impact it causes.", 
            "title": "Statistics module is not installed"
        }, 
        {
            "location": "/policies/drutiny-plugin-drupal-8/#parameters_19", 
            "text": "Name  Type  Description  Default      module  string  The name of the module to ensure is not installed.  statistics", 
            "title": "Parameters"
        }, 
        {
            "location": "/policies/drutiny-plugin-drupal-8/#untrusted-roles-with-administrative-permissions", 
            "text": "Name :  Drupal-8:UntrustedRoles  Package :  drutiny/plugin-drupal-8  Class :  \\Drutiny\\Plugin\\Drupal8\\Audit\\UntrustedRoles  Make sure administrative permissions has not been assigned to untrusted roles.", 
            "title": "Untrusted Roles with administrative permissions"
        }, 
        {
            "location": "/policies/drutiny-plugin-drupal-8/#parameters_20", 
            "text": "Name  Type  Description  Default      untrusted_roles  array  The untrusted Roles.  - anonymous - authenticated", 
            "title": "Parameters"
        }, 
        {
            "location": "/policies/drutiny-plugin-drupal-8/#unused-modules-in-the-codebase", 
            "text": "Name :  Drupal-8:UnusedModules  Package :  drutiny/plugin-drupal-8  Class :  \\Drutiny\\Plugin\\Drupal8\\Audit\\UnusedModules", 
            "title": "Unused modules in the codebase"
        }, 
        {
            "location": "/policies/drutiny-plugin-drupal-8/#update-module-is-not-installed", 
            "text": "Name :  Drupal-8:UpdateDisabled  Package :  drutiny/plugin-drupal-8  Class :  \\Drutiny\\Plugin\\Drupal8\\Audit\\ModuleDisabled  The update module fetches the latest module information from Drupal.org and\nreports on the module statuses used on the site.", 
            "title": "Update module is not installed"
        }, 
        {
            "location": "/policies/drutiny-plugin-drupal-8/#parameters_21", 
            "text": "Name  Type  Description  Default      module  string  The name of the module to ensure is not installed.  update", 
            "title": "Parameters"
        }, 
        {
            "location": "/policies/drutiny-plugin-drupal-8/#administrator-login-is-locked-down-uid1", 
            "text": "Name :  Drupal-8:User1LockDown  Package :  drutiny/plugin-drupal-8  Class :  \\Drutiny\\Plugin\\Drupal8\\Audit\\User1  It is important to lock down user #1 in Drupal, this user is special an\nignores access control.", 
            "title": "Administrator login is locked down (uid:1)"
        }, 
        {
            "location": "/policies/drutiny-plugin-drupal-8/#parameters_22", 
            "text": "Name  Type  Description  Default      blacklist  string  The usernames of the the uid:1 user that are considered forbidden.     Expression maybe a regular expression to match patterns.        (admin  root  drupal    email  string  The email that the uid:1 user should have. If an empty string is provided     then this check is omitted.        no_reply@example.com      status  boolean  Ensures the uid:1 user status reflects the same as this argument. Defaults     to active (1).        1", 
            "title": "Parameters"
        }, 
        {
            "location": "/policies/drutiny-plugin-drupal-8/#user-registration-available-to-administrators-only", 
            "text": "Name :  Drupal-8:UserRegistrationAdminOnly  Package :  drutiny/plugin-drupal-8  Class :  \\Drutiny\\Plugin\\Drupal8\\Audit\\ConfigCheck  Anonymous sites should have user registration set to off to prevent spam\nregistrations", 
            "title": "User registration available to administrators only"
        }, 
        {
            "location": "/policies/drutiny-plugin-drupal-8/#parameters_23", 
            "text": "Name  Type  Description  Default      collection  string  The collection the config belongs to.  user.settings    key  string  The key the config belongs to.  register    value  mixed  The value to compare against the retrived value.  admin_only", 
            "title": "Parameters"
        }, 
        {
            "location": "/policies/drutiny-plugin-drupal-8/#webprofiler-module-is-not-installed", 
            "text": "Name :  Drupal-8:WebprofilerDisabled  Package :  drutiny/plugin-drupal-8  Class :  \\Drutiny\\Plugin\\Drupal8\\Audit\\ModuleDisabled  The web profiler is a developer module to help profile a PHP page load.", 
            "title": "Webprofiler module is not installed"
        }, 
        {
            "location": "/policies/drutiny-plugin-drupal-8/#parameters_24", 
            "text": "Name  Type  Description  Default      module  string  The name of the module to ensure is not installed.  webprofiler", 
            "title": "Parameters"
        }, 
        {
            "location": "/policies/drutiny-plugin-drupal-8/#x-drupal-cache-tags-header-disabled", 
            "text": "Name :  HTTP:X-Drupal-Cache-Tags  Package :  drutiny/plugin-drupal-8  Class :  \\Drutiny\\Http\\Audit\\HttpHeaderNotExists  X-Drupal-Cache-Tags is a debugging HTTP header Drupal sends to inform developers\nwhat cache tags are being utilised in an HTTP response. The header can be high\nverbosity on responses that use a lot of entities from both content and\nconfiguration.  This header should only be used in local development or in environment specific\ndebugging.", 
            "title": "X-Drupal-Cache-Tags Header Disabled"
        }, 
        {
            "location": "/policies/drutiny-plugin-drupal-8/#parameters_25", 
            "text": "Name  Type  Description  Default      header  string  The HTTP header to check the value of.  X-Drupal-Cache-Tags", 
            "title": "Parameters"
        }, 
        {
            "location": "/policies/drutiny-plugin-distro-common/", 
            "text": "Google Analytics\n\n\nName\n: \nDistro:GoogleAnalyticsEnabled\n\n\nPackage\n: \ndrutiny/plugin-distro-common\n\n\nClass\n: \n\\Drutiny\\Audit\\Drupal\\ModuleEnabled\n\n\nEnsure the Google Analytics module is enabled.\n\n\nParameters\n\n\n\n\n\n\n\n\nName\n\n\nType\n\n\nDescription\n\n\nDefault\n\n\n\n\n\n\n\n\n\n\nmodule\n\n\nstring\n\n\nThe module to check is enabled.\n\n\ngoogleanalytics\n\n\n\n\n\n\n\n\nPassword Policy\n\n\nName\n: \nDistro:PasswordPolicyEnabled\n\n\nPackage\n: \ndrutiny/plugin-distro-common\n\n\nClass\n: \n\\Drutiny\\Audit\\Drupal\\ModuleEnabled\n\n\nEnsure the Password Policy module is enabled.\n\n\nParameters\n\n\n\n\n\n\n\n\nName\n\n\nType\n\n\nDescription\n\n\nDefault\n\n\n\n\n\n\n\n\n\n\nmodule\n\n\nstring\n\n\nThe module to check is enabled.\n\n\npassword_policy\n\n\n\n\n\n\n\n\nRobotstxt\n\n\nName\n: \nDistro:RobotstxtEnabled\n\n\nPackage\n: \ndrutiny/plugin-distro-common\n\n\nClass\n: \n\\Drutiny\\Audit\\Drupal\\ModuleEnabled\n\n\nEnsure the Robotstxt module is enabled.\n\n\nParameters\n\n\n\n\n\n\n\n\nName\n\n\nType\n\n\nDescription\n\n\nDefault\n\n\n\n\n\n\n\n\n\n\nmodule\n\n\nstring\n\n\nThe module to check is enabled.\n\n\nrobotstxt", 
            "title": "drutiny/plugin-distro-common"
        }, 
        {
            "location": "/policies/drutiny-plugin-distro-common/#google-analytics", 
            "text": "Name :  Distro:GoogleAnalyticsEnabled  Package :  drutiny/plugin-distro-common  Class :  \\Drutiny\\Audit\\Drupal\\ModuleEnabled  Ensure the Google Analytics module is enabled.", 
            "title": "Google Analytics"
        }, 
        {
            "location": "/policies/drutiny-plugin-distro-common/#parameters", 
            "text": "Name  Type  Description  Default      module  string  The module to check is enabled.  googleanalytics", 
            "title": "Parameters"
        }, 
        {
            "location": "/policies/drutiny-plugin-distro-common/#password-policy", 
            "text": "Name :  Distro:PasswordPolicyEnabled  Package :  drutiny/plugin-distro-common  Class :  \\Drutiny\\Audit\\Drupal\\ModuleEnabled  Ensure the Password Policy module is enabled.", 
            "title": "Password Policy"
        }, 
        {
            "location": "/policies/drutiny-plugin-distro-common/#parameters_1", 
            "text": "Name  Type  Description  Default      module  string  The module to check is enabled.  password_policy", 
            "title": "Parameters"
        }, 
        {
            "location": "/policies/drutiny-plugin-distro-common/#robotstxt", 
            "text": "Name :  Distro:RobotstxtEnabled  Package :  drutiny/plugin-distro-common  Class :  \\Drutiny\\Audit\\Drupal\\ModuleEnabled  Ensure the Robotstxt module is enabled.", 
            "title": "Robotstxt"
        }, 
        {
            "location": "/policies/drutiny-plugin-distro-common/#parameters_2", 
            "text": "Name  Type  Description  Default      module  string  The module to check is enabled.  robotstxt", 
            "title": "Parameters"
        }, 
        {
            "location": "/policies/drutiny-cloudflare/", 
            "text": "Cloudflare always use HTTPS\n\n\nName\n: \ncloudflare:always_use_https\n\n\nPackage\n: \ndrutiny/cloudflare\n\n\nClass\n: \n\\Drutiny\\Cloudflare\\Audit\\PageRuleMatch\n\n\nTo ensure all traffic to  is secured over an SSL connection, Cloudflare\ncomes with a feature to force any insecure traffic to redirect to a secure\nconnection before a connection to the origin location is attempted. This ensures\nall traffic to  is secured between the browser and Cloudflare.\n\n\nParameters\n\n\n\n\n\n\n\n\nName\n\n\nType\n\n\nDescription\n\n\nDefault\n\n\n\n\n\n\n\n\n\n\nrule\n\n\nstring\n\n\nThe page rule pattern to look up.\n\n\n'http://:host/*'\n\n\n\n\n\n\nsettings\n\n\narray\n\n\nA keyed list of actions the page rule should action.\n\n\nalways_use_https: true\n\n\n\n\n\n\n\n\n#2819197 - Cloudflare workaround for Drupal 8 urlGenerator\n\n\nName\n: \ncloudflare:drupal-urlGenerator-workaround\n\n\nPackage\n: \ndrutiny/cloudflare\n\n\nClass\n: \n\\Drutiny\\Cloudflare\\Audit\\PageRuleMatch\n\n\nBy accessing a site an an unexpected base path (e.g. with index.php) a site may\ncache links in a way that could be considered a minor site defacement and\npossibly lead to a duplicate content SEO penalty too. It can also impact\ncaching strategy.\n\n\nParameters\n\n\n\n\n\n\n\n\nName\n\n\nType\n\n\nDescription\n\n\nDefault\n\n\n\n\n\n\n\n\n\n\nrule\n\n\nstring\n\n\nThe page rule pattern to look up.\n\n\n'https://:host/index.php/*'\n\n\n\n\n\n\nsettings\n\n\narray\n\n\nA keyed list of actions the page rule should action.\n\n\nforwarding_url:\n    url: 'https://:host/$1'\n    status_code: 301\n\n\n\n\n\n\n\n\nCloudflare redirect Apex to primary domain\n\n\nName\n: \ncloudflare:redirect_apex\n\n\nPackage\n: \ndrutiny/cloudflare\n\n\nClass\n: \n\\Drutiny\\Cloudflare\\Audit\\PageRuleMatch\n\n\nIf  is the primary site under the  domain then you may want all\ntraffic to https:/// to be redirected to https:///. This ensures\nall traffic to both  and  are routed through a common domain\nand makes management of Cloudflare Page Rules easier to administer. This reduces\nthe likelihood of strange behaviour due to Page Rules.\n\n\nParameters\n\n\n\n\n\n\n\n\nName\n\n\nType\n\n\nDescription\n\n\nDefault\n\n\n\n\n\n\n\n\n\n\nrule\n\n\nstring\n\n\nThe page rule pattern to look up.\n\n\n'https://:zone/*'\n\n\n\n\n\n\nsettings\n\n\narray\n\n\nA keyed list of actions the page rule should action.\n\n\nforwarding_url:\n    url: 'https://:host/$1'\n    status_code: 301", 
            "title": "drutiny/cloudflare"
        }, 
        {
            "location": "/policies/drutiny-cloudflare/#cloudflare-always-use-https", 
            "text": "Name :  cloudflare:always_use_https  Package :  drutiny/cloudflare  Class :  \\Drutiny\\Cloudflare\\Audit\\PageRuleMatch  To ensure all traffic to  is secured over an SSL connection, Cloudflare\ncomes with a feature to force any insecure traffic to redirect to a secure\nconnection before a connection to the origin location is attempted. This ensures\nall traffic to  is secured between the browser and Cloudflare.", 
            "title": "Cloudflare always use HTTPS"
        }, 
        {
            "location": "/policies/drutiny-cloudflare/#parameters", 
            "text": "Name  Type  Description  Default      rule  string  The page rule pattern to look up.  'http://:host/*'    settings  array  A keyed list of actions the page rule should action.  always_use_https: true", 
            "title": "Parameters"
        }, 
        {
            "location": "/policies/drutiny-cloudflare/#2819197-cloudflare-workaround-for-drupal-8-urlgenerator", 
            "text": "Name :  cloudflare:drupal-urlGenerator-workaround  Package :  drutiny/cloudflare  Class :  \\Drutiny\\Cloudflare\\Audit\\PageRuleMatch  By accessing a site an an unexpected base path (e.g. with index.php) a site may\ncache links in a way that could be considered a minor site defacement and\npossibly lead to a duplicate content SEO penalty too. It can also impact\ncaching strategy.", 
            "title": "#2819197 - Cloudflare workaround for Drupal 8 urlGenerator"
        }, 
        {
            "location": "/policies/drutiny-cloudflare/#parameters_1", 
            "text": "Name  Type  Description  Default      rule  string  The page rule pattern to look up.  'https://:host/index.php/*'    settings  array  A keyed list of actions the page rule should action.  forwarding_url:     url: 'https://:host/$1'     status_code: 301", 
            "title": "Parameters"
        }, 
        {
            "location": "/policies/drutiny-cloudflare/#cloudflare-redirect-apex-to-primary-domain", 
            "text": "Name :  cloudflare:redirect_apex  Package :  drutiny/cloudflare  Class :  \\Drutiny\\Cloudflare\\Audit\\PageRuleMatch  If  is the primary site under the  domain then you may want all\ntraffic to https:/// to be redirected to https:///. This ensures\nall traffic to both  and  are routed through a common domain\nand makes management of Cloudflare Page Rules easier to administer. This reduces\nthe likelihood of strange behaviour due to Page Rules.", 
            "title": "Cloudflare redirect Apex to primary domain"
        }, 
        {
            "location": "/policies/drutiny-cloudflare/#parameters_2", 
            "text": "Name  Type  Description  Default      rule  string  The page rule pattern to look up.  'https://:zone/*'    settings  array  A keyed list of actions the page rule should action.  forwarding_url:     url: 'https://:host/$1'     status_code: 301", 
            "title": "Parameters"
        }, 
        {
            "location": "/policies/drutiny-acquia/", 
            "text": "Acquia Cloud Site Factory\n\n\nName\n: \nAcquia:ACSF\n\n\nPackage\n: \ndrutiny/acquia\n\n\nClass\n: \n\\Drutiny\\Audit\\Drupal\\ModuleEnabled\n\n\nEnsure the Acquia Cloud Site Factory module is enabled.\n\n\nParameters\n\n\n\n\n\n\n\n\nName\n\n\nType\n\n\nDescription\n\n\nDefault\n\n\n\n\n\n\n\n\n\n\nmodule\n\n\nstring\n\n\nThe module to check is enabled.\n\n\nacsf\n\n\n\n\n\n\n\n\nAcquia Agent\n\n\nName\n: \nAcquia:AgentEnabled\n\n\nPackage\n: \ndrutiny/acquia\n\n\nClass\n: \n\\Drutiny\\Audit\\Drupal\\ModuleEnabled\n\n\nEnsure the Acquia Agent module is enabled.\n\n\nParameters\n\n\n\n\n\n\n\n\nName\n\n\nType\n\n\nDescription\n\n\nDefault\n\n\n\n\n\n\n\n\n\n\nmodule\n\n\nstring\n\n\nThe module to check is enabled.\n\n\nacquia_agent\n\n\n\n\n\n\n\n\nAcquia Application Information\n\n\nName\n: \nAcquia:AppInfo\n\n\nPackage\n: \ndrutiny/acquia\n\n\nClass\n: \n\\Drutiny\\Acquia\\Audit\\AppInfo\n\n\nApplication Information\n\n\nACSF Deployment Workspace\n\n\nName\n: \nAcquia:CheckSiteFactoryWorkspace\n\n\nPackage\n: \ndrutiny/acquia\n\n\nClass\n: \n\\Drutiny\\Acquia\\Audit\\AcsfDeployWorkspaceCleaned\n\n\nA bug in the ACSF deployment process left codebases in the \ntmp\n directory\nwhich could lead to filesystem bloat and excessive inodes.\n\n\nCloud Edge Caching\n\n\nName\n: \nAcquia:CloudEdgeCaching\n\n\nPackage\n: \ndrutiny/acquia\n\n\nClass\n: \n\\Drutiny\\Http\\Audit\\HttpHeaderMatch\n\n\nWhen Cloudflare is successfully caching a page it will send out \nCF-Cache-Status\n\nheaders with caching information for the page requested. The value should be \nHIT\n\n\nParameters\n\n\n\n\n\n\n\n\nName\n\n\nType\n\n\nDescription\n\n\nDefault\n\n\n\n\n\n\n\n\n\n\nheader\n\n\nstring\n\n\nThe HTTP header to check the value of.\n\n\ncf-cache-status\n\n\n\n\n\n\nheader_value\n\n\nstring\n\n\nThe value to check against.\n\n\nHIT\n\n\n\n\n\n\n\n\nAcquia Cloud Edge Purging Enabled\n\n\nName\n: \nAcquia:CloudEdgeNoPurge\n\n\nPackage\n: \ndrutiny/acquia\n\n\nClass\n: \n\\Drutiny\\Plugin\\Drupal8\\Audit\\ModuleDisabled\n\n\nAcquia Cloud Edge CDN best practices recommend running a 1 minute or greater\nTime-To-Live (TTL) at the edge opposed to purging in realtime from Drupal.\n\n\nThis is to minimize the impact of potential floods through to Acquia Cloud for\nURLs that are complex for Drupal to render responses for.\n\n\nParameters\n\n\n\n\n\n\n\n\nName\n\n\nType\n\n\nDescription\n\n\nDefault\n\n\n\n\n\n\n\n\n\n\nmodule\n\n\nstring\n\n\nThe module to check is enabled.\n\n\ncloudflarepurger\n\n\n\n\n\n\n\n\nAcquia Connector\n\n\nName\n: \nAcquia:Connected\n\n\nPackage\n: \ndrutiny/acquia\n\n\nClass\n: \n\\Drutiny\\Audit\\Drupal\\ModuleEnabled\n\n\nEnsure the Acquia Connector module is enabled.\n\n\nParameters\n\n\n\n\n\n\n\n\nName\n\n\nType\n\n\nDescription\n\n\nDefault\n\n\n\n\n\n\n\n\n\n\nmodule\n\n\nstring\n\n\nThe module to check is enabled.\n\n\nacquia_connector\n\n\n\n\n\n\n\n\nCustom Domains Registered\n\n\nName\n: \nAcquia:CustomDomains\n\n\nPackage\n: \ndrutiny/acquia\n\n\nClass\n: \n\\Drutiny\\Acquia\\Audit\\CustomDomains\n\n\nEnsure there is one or more custom domains registered with Acquia Cloud.\n\n\nNo Database Search Indexes for Drupal 7\n\n\nName\n: \nAcquia:Drupal7:NoDbSearch\n\n\nPackage\n: \ndrutiny/acquia\n\n\nClass\n: \n\\Drutiny\\Acquia\\Audit\\SearchDB\n\n\nBy default Drupal can create full text search indexes in the database which\ncan lead to performance problems on large sites.\n\n\nParameters\n\n\n\n\n\n\n\n\nName\n\n\nType\n\n\nDescription\n\n\nDefault\n\n\n\n\n\n\n\n\n\n\nmodule\n\n\nstring\n\n\nThe module to check is enabled.\n\n\nsearch_api_db\n\n\n\n\n\n\n\n\nLess than 2,500 files per directory\n\n\nName\n: \nAcquia:FilesPerDirectory\n\n\nPackage\n: \ndrutiny/acquia\n\n\nClass\n: \nDrutiny\\Acquia\\Audit\\FilesPerDirectory\n\n\nOn Acquia Cloud, we have found that over 2,500 files in a single directory\ncan seriously impact a server's performance and potentially its stability.\n\n\nParameters\n\n\n\n\n\n\n\n\nName\n\n\nType\n\n\nDescription\n\n\nDefault\n\n\n\n\n\n\n\n\n\n\nlimit\n\n\ninteger\n\n\nThe limit of files per directory.\n\n\n2500\n\n\n\n\n\n\n\n\nMemcache module enabled\n\n\nName\n: \nAcquia:MemcacheEnabled\n\n\nPackage\n: \ndrutiny/acquia\n\n\nClass\n: \n\\Drutiny\\Audit\\Drupal\\ModuleEnabled\n\n\nYou can use the Memcache module to move some common cache queries out of the\ndatabase and into memory. Information held in memory will always be retrieved\nmore quickly than information retrieved from a database query.\n\n\nMemcached is available for all Acquia Cloud websites. See Using Memcached for\ninformation about how to use Memcached with an Acquia Cloud-hosted Drupal\nwebsite.\n\n\nParameters\n\n\n\n\n\n\n\n\nName\n\n\nType\n\n\nDescription\n\n\nDefault\n\n\n\n\n\n\n\n\n\n\nmodule\n\n\nstring\n\n\nThe module to check is enabled.\n\n\nmemcache\n\n\n\n\n\n\n\n\nAcquia Production Mode\n\n\nName\n: \nAcquia:ProductionMode\n\n\nPackage\n: \ndrutiny/acquia\n\n\nClass\n: \n\\Drutiny\\Acquia\\Audit\\EnvironmentAnalysis\n\n\nEnsure Acquia production environment has Production Mode enabled.\n\n\nParameters\n\n\n\n\n\n\n\n\nName\n\n\nType\n\n\nDescription\n\n\nDefault\n\n\n\n\n\n\n\n\n\n\nexpression\n\n\n\n\n\n\n'environment[\"flags\"][\"production_mode\"] === true'\n\n\n\n\n\n\nnot_applicable\n\n\n\n\n\n\n'environment[\"flags\"][\"production\"] === false'\n\n\n\n\n\n\n\n\nAcquia Purge Enabled\n\n\nName\n: \nAcquia:PurgeEnabled\n\n\nPackage\n: \ndrutiny/acquia\n\n\nClass\n: \n\\Drutiny\\Audit\\Drupal\\ModuleEnabled\n\n\nAcquia Purge modules allows updates in content to be reflected in page cache\nin realtime on the Acquia Platform. It does this by administering bans to the\nplatform page caching service (Varnish).\n\n\nParameters\n\n\n\n\n\n\n\n\nName\n\n\nType\n\n\nDescription\n\n\nDefault\n\n\n\n\n\n\n\n\n\n\nmodule\n\n\nstring\n\n\nThe module to check is enabled.\n\n\nacquia_purge\n\n\n\n\n\n\n\n\nAcquia Purge Plugin Exists\n\n\nName\n: \nAcquia:PurgePlugin\n\n\nPackage\n: \ndrutiny/acquia\n\n\nClass\n: \n\\Drutiny\\Plugin\\Drupal8\\Audit\\PurgePluginExists\n\n\nEnabled purging of cached content on Acquia Cloud by adding it as a purge plugin.\n\n\nParameters\n\n\n\n\n\n\n\n\nName\n\n\nType\n\n\nDescription\n\n\nDefault\n\n\n\n\n\n\n\n\n\n\nplugin\n\n\nstring\n\n\nThe plugins to check exists\n\n\nacquia_purge\n\n\n\n\n\n\n\n\nAcquia SPI\n\n\nName\n: \nAcquia:SPIEnabled\n\n\nPackage\n: \ndrutiny/acquia\n\n\nClass\n: \n\\Drutiny\\Audit\\Drupal\\ModuleEnabled\n\n\nEnsure the Acquia SPI module is enabled.\n\n\nParameters\n\n\n\n\n\n\n\n\nName\n\n\nType\n\n\nDescription\n\n\nDefault\n\n\n\n\n\n\n\n\n\n\nmodule\n\n\nstring\n\n\nThe module to check is enabled.\n\n\nacquia_spi\n\n\n\n\n\n\n\n\nACSF Drupal Theme Directory Size\n\n\nName\n: \nAcquia:SiteFactory:DrupalThemeDirectory\n\n\nPackage\n: \ndrutiny/acquia\n\n\nClass\n: \nDrutiny\\Audit\\Filesystem\\FsSize\n\n\nLarge theme directories can be indicative of best practice violations:\n  * Source files in site artifact. e.g. node_modules\n  * Media assets unsuitable for web delivery\n\n\nParameters\n\n\n\n\n\n\n\n\nName\n\n\nType\n\n\nDescription\n\n\nDefault\n\n\n\n\n\n\n\n\n\n\nmax_size\n\n\ninteger\n\n\nThe maximum size in MegaBytes a directory should be.\n\n\n50\n\n\n\n\n\n\npath\n\n\nstring\n\n\nThe path of the directory to check for size.\n\n\n'%root/%themes/site/'\n\n\n\n\n\n\n\n\nAcquia Cloud Site Factory Pingdom\n\n\nName\n: \nAcquia:SiteFactory:Pingdom\n\n\nPackage\n: \ndrutiny/acquia\n\n\nClass\n: \n\\Drutiny\\Audit\\Drupal\\ModuleEnabled\n\n\nEnsure the Acquia Cloud Site Factory Pingdom module is enabled.\n\n\nParameters\n\n\n\n\n\n\n\n\nName\n\n\nType\n\n\nDescription\n\n\nDefault\n\n\n\n\n\n\n\n\n\n\nmodule\n\n\nstring\n\n\nThe module to check is enabled.\n\n\nacsf_pingdom\n\n\n\n\n\n\n\n\nAcquia Search Auto Switch (D7)\n\n\nName\n: \nAcquia:SiteFactory:SearchAutoSwitch\n\n\nPackage\n: \ndrutiny/acquia\n\n\nClass\n: \n\\Drutiny\\Plugin\\Drupal7\\Audit\\VariableCompare\n\n\nUsing Site Factory and Acquia Search, the auto core selector needs to be\ndisabled in order to work.\n\n\nParameters\n\n\n\n\n\n\n\n\nName\n\n\nType\n\n\nDescription\n\n\nDefault\n\n\n\n\n\n\n\n\n\n\nkey\n\n\nstring\n\n\nThe name of the variable to compare.\n\n\nacquia_search_disable_auto_switch\n\n\n\n\n\n\nvalue\n\n\nmixed\n\n\nThe value to compare against\n\n\n1\n\n\n\n\n\n\n\n\nAcquia Cloud Site Factory Theme\n\n\nName\n: \nAcquia:SiteFactory:ThemeEnabled\n\n\nPackage\n: \ndrutiny/acquia\n\n\nClass\n: \n\\Drutiny\\Audit\\Drupal\\ModuleEnabled\n\n\nEnsure the Acquia Cloud Site Factory Theme module is enabled.\n\n\nParameters\n\n\n\n\n\n\n\n\nName\n\n\nType\n\n\nDescription\n\n\nDefault\n\n\n\n\n\n\n\n\n\n\nmodule\n\n\nstring\n\n\nThe module to check is enabled.\n\n\nacsf_theme\n\n\n\n\n\n\n\n\nAcquia Cloud Site Factory Variables\n\n\nName\n: \nAcquia:SiteFactory:Variables\n\n\nPackage\n: \ndrutiny/acquia\n\n\nClass\n: \n\\Drutiny\\Audit\\Drupal\\ModuleEnabled\n\n\nEnsure the Acquia Cloud Site Factory Variables module is enabled.\n\n\nParameters\n\n\n\n\n\n\n\n\nName\n\n\nType\n\n\nDescription\n\n\nDefault\n\n\n\n\n\n\n\n\n\n\nmodule\n\n\nstring\n\n\nThe module to check is enabled.\n\n\nacsf_variables\n\n\n\n\n\n\n\n\nDrupal Theme Path References\n\n\nName\n: \nAcquia:SiteFactoryDefaultThemePath\n\n\nPackage\n: \ndrutiny/acquia\n\n\nClass\n: \nDrutiny\\Audit\\Filesystem\\CodeScan\n\n\nEnsure there are no hard coded references to the default theme path in the\ndeployed theme as this can and will cause a lot of HTTP 404s.\n\n\nParameters\n\n\n\n\n\n\n\n\nName\n\n\nType\n\n\nDescription\n\n\nDefault\n\n\n\n\n\n\n\n\n\n\ndirectory\n\n\nstring\n\n\nAbsolute filepath to directory to scan\n\n\n'%root/%themes/site/'\n\n\n\n\n\n\nwhitelist\n\n\narray\n\n\nWhitelist patterns which the 'patterns' parameter may yield false positives from\n\n\n- .md\n- .txt\n- .svg\n\n\n\n\n\n\npatterns\n\n\narray\n\n\npatterns to run over each matching file.\n\n\n- sites\\/all\\/themes\\/\n\n\n\n\n\n\n\n\nAcquia Cloud Site Factory Duplication\n\n\nName\n: \nAcquia:SiteFactoryDuplication\n\n\nPackage\n: \ndrutiny/acquia\n\n\nClass\n: \n\\Drutiny\\Audit\\Drupal\\ModuleEnabled\n\n\nEnsure the Acquia Cloud Site Factory Duplication module is enabled.\n\n\nParameters\n\n\n\n\n\n\n\n\nName\n\n\nType\n\n\nDescription\n\n\nDefault\n\n\n\n\n\n\n\n\n\n\nmodule\n\n\nstring\n\n\nThe module to check is enabled.\n\n\nacsf_duplication\n\n\n\n\n\n\n\n\nAcquia Cloud Site Factory OpenID\n\n\nName\n: \nAcquia:SiteFactoryOpenID\n\n\nPackage\n: \ndrutiny/acquia\n\n\nClass\n: \n\\Drutiny\\Audit\\Drupal\\ModuleEnabled\n\n\nEnsure the Acquia Cloud Site Factory OpenID module is enabled.\n\n\nParameters\n\n\n\n\n\n\n\n\nName\n\n\nType\n\n\nDescription\n\n\nDefault\n\n\n\n\n\n\n\n\n\n\nmodule\n\n\nstring\n\n\nThe module to check is enabled.\n\n\nacsf_openid\n\n\n\n\n\n\n\n\nServing files from production on development environments\n\n\nName\n: \nAcquia:StageFileProxy\n\n\nPackage\n: \ndrutiny/acquia\n\n\nClass\n: \n\\Drutiny\\Audit\\Drupal\\ModuleEnabled\n\n\nDevelopment and staging servers may have less disk space allocated to them\nthan a production server. When you are copying files from your production\nserver back to staging or development, you can quickly fill up your disk\nspace. It's possible to use the files on the production server for your\nstaging site without copying them by using \nStage File Proxy\n\nmodule.\n\n\nUsing the Stage File Proxy module enables a development server to maintain a\nclean files directory and use files from an alternate source by directly\nreferencing that alternate source. An additional option within the module\nallows the file system on the development server to be seeded with files\nfrom the production server.\n\n\nParameters\n\n\n\n\n\n\n\n\nName\n\n\nType\n\n\nDescription\n\n\nDefault\n\n\n\n\n\n\n\n\n\n\nmodule\n\n\nstring\n\n\nThe module to check is enabled.\n\n\nstage_file_proxy\n\n\n\n\n\n\n\n\nNo Page Compression\n\n\nName\n: \nDrupal-7:NoPageCompression\n\n\nPackage\n: \ndrutiny/acquia\n\n\nClass\n: \n\\Drutiny\\Plugin\\Drupal7\\Audit\\VariableCompare\n\n\nDrupal's Compress cached pages option (page_compression) can cause unexpected\nbehavior when an external cache such as Varnish is employed, and typically\nprovides no benefit. Therefore, Compress cached pages should be disabled\n\n\nParameters\n\n\n\n\n\n\n\n\nName\n\n\nType\n\n\nDescription\n\n\nDefault\n\n\n\n\n\n\n\n\n\n\nkey\n\n\nstring\n\n\nThe name of the variable to check.\n\n\npage_compression\n\n\n\n\n\n\nvalue\n\n\nbool\n\n\nThe value of the variable\n\n\n0", 
            "title": "drutiny/acquia"
        }, 
        {
            "location": "/policies/drutiny-acquia/#acquia-cloud-site-factory", 
            "text": "Name :  Acquia:ACSF  Package :  drutiny/acquia  Class :  \\Drutiny\\Audit\\Drupal\\ModuleEnabled  Ensure the Acquia Cloud Site Factory module is enabled.", 
            "title": "Acquia Cloud Site Factory"
        }, 
        {
            "location": "/policies/drutiny-acquia/#parameters", 
            "text": "Name  Type  Description  Default      module  string  The module to check is enabled.  acsf", 
            "title": "Parameters"
        }, 
        {
            "location": "/policies/drutiny-acquia/#acquia-agent", 
            "text": "Name :  Acquia:AgentEnabled  Package :  drutiny/acquia  Class :  \\Drutiny\\Audit\\Drupal\\ModuleEnabled  Ensure the Acquia Agent module is enabled.", 
            "title": "Acquia Agent"
        }, 
        {
            "location": "/policies/drutiny-acquia/#parameters_1", 
            "text": "Name  Type  Description  Default      module  string  The module to check is enabled.  acquia_agent", 
            "title": "Parameters"
        }, 
        {
            "location": "/policies/drutiny-acquia/#acquia-application-information", 
            "text": "Name :  Acquia:AppInfo  Package :  drutiny/acquia  Class :  \\Drutiny\\Acquia\\Audit\\AppInfo  Application Information", 
            "title": "Acquia Application Information"
        }, 
        {
            "location": "/policies/drutiny-acquia/#acsf-deployment-workspace", 
            "text": "Name :  Acquia:CheckSiteFactoryWorkspace  Package :  drutiny/acquia  Class :  \\Drutiny\\Acquia\\Audit\\AcsfDeployWorkspaceCleaned  A bug in the ACSF deployment process left codebases in the  tmp  directory\nwhich could lead to filesystem bloat and excessive inodes.", 
            "title": "ACSF Deployment Workspace"
        }, 
        {
            "location": "/policies/drutiny-acquia/#cloud-edge-caching", 
            "text": "Name :  Acquia:CloudEdgeCaching  Package :  drutiny/acquia  Class :  \\Drutiny\\Http\\Audit\\HttpHeaderMatch  When Cloudflare is successfully caching a page it will send out  CF-Cache-Status \nheaders with caching information for the page requested. The value should be  HIT", 
            "title": "Cloud Edge Caching"
        }, 
        {
            "location": "/policies/drutiny-acquia/#parameters_2", 
            "text": "Name  Type  Description  Default      header  string  The HTTP header to check the value of.  cf-cache-status    header_value  string  The value to check against.  HIT", 
            "title": "Parameters"
        }, 
        {
            "location": "/policies/drutiny-acquia/#acquia-cloud-edge-purging-enabled", 
            "text": "Name :  Acquia:CloudEdgeNoPurge  Package :  drutiny/acquia  Class :  \\Drutiny\\Plugin\\Drupal8\\Audit\\ModuleDisabled  Acquia Cloud Edge CDN best practices recommend running a 1 minute or greater\nTime-To-Live (TTL) at the edge opposed to purging in realtime from Drupal.  This is to minimize the impact of potential floods through to Acquia Cloud for\nURLs that are complex for Drupal to render responses for.", 
            "title": "Acquia Cloud Edge Purging Enabled"
        }, 
        {
            "location": "/policies/drutiny-acquia/#parameters_3", 
            "text": "Name  Type  Description  Default      module  string  The module to check is enabled.  cloudflarepurger", 
            "title": "Parameters"
        }, 
        {
            "location": "/policies/drutiny-acquia/#acquia-connector", 
            "text": "Name :  Acquia:Connected  Package :  drutiny/acquia  Class :  \\Drutiny\\Audit\\Drupal\\ModuleEnabled  Ensure the Acquia Connector module is enabled.", 
            "title": "Acquia Connector"
        }, 
        {
            "location": "/policies/drutiny-acquia/#parameters_4", 
            "text": "Name  Type  Description  Default      module  string  The module to check is enabled.  acquia_connector", 
            "title": "Parameters"
        }, 
        {
            "location": "/policies/drutiny-acquia/#custom-domains-registered", 
            "text": "Name :  Acquia:CustomDomains  Package :  drutiny/acquia  Class :  \\Drutiny\\Acquia\\Audit\\CustomDomains  Ensure there is one or more custom domains registered with Acquia Cloud.", 
            "title": "Custom Domains Registered"
        }, 
        {
            "location": "/policies/drutiny-acquia/#no-database-search-indexes-for-drupal-7", 
            "text": "Name :  Acquia:Drupal7:NoDbSearch  Package :  drutiny/acquia  Class :  \\Drutiny\\Acquia\\Audit\\SearchDB  By default Drupal can create full text search indexes in the database which\ncan lead to performance problems on large sites.", 
            "title": "No Database Search Indexes for Drupal 7"
        }, 
        {
            "location": "/policies/drutiny-acquia/#parameters_5", 
            "text": "Name  Type  Description  Default      module  string  The module to check is enabled.  search_api_db", 
            "title": "Parameters"
        }, 
        {
            "location": "/policies/drutiny-acquia/#less-than-2500-files-per-directory", 
            "text": "Name :  Acquia:FilesPerDirectory  Package :  drutiny/acquia  Class :  Drutiny\\Acquia\\Audit\\FilesPerDirectory  On Acquia Cloud, we have found that over 2,500 files in a single directory\ncan seriously impact a server's performance and potentially its stability.", 
            "title": "Less than 2,500 files per directory"
        }, 
        {
            "location": "/policies/drutiny-acquia/#parameters_6", 
            "text": "Name  Type  Description  Default      limit  integer  The limit of files per directory.  2500", 
            "title": "Parameters"
        }, 
        {
            "location": "/policies/drutiny-acquia/#memcache-module-enabled", 
            "text": "Name :  Acquia:MemcacheEnabled  Package :  drutiny/acquia  Class :  \\Drutiny\\Audit\\Drupal\\ModuleEnabled  You can use the Memcache module to move some common cache queries out of the\ndatabase and into memory. Information held in memory will always be retrieved\nmore quickly than information retrieved from a database query.  Memcached is available for all Acquia Cloud websites. See Using Memcached for\ninformation about how to use Memcached with an Acquia Cloud-hosted Drupal\nwebsite.", 
            "title": "Memcache module enabled"
        }, 
        {
            "location": "/policies/drutiny-acquia/#parameters_7", 
            "text": "Name  Type  Description  Default      module  string  The module to check is enabled.  memcache", 
            "title": "Parameters"
        }, 
        {
            "location": "/policies/drutiny-acquia/#acquia-production-mode", 
            "text": "Name :  Acquia:ProductionMode  Package :  drutiny/acquia  Class :  \\Drutiny\\Acquia\\Audit\\EnvironmentAnalysis  Ensure Acquia production environment has Production Mode enabled.", 
            "title": "Acquia Production Mode"
        }, 
        {
            "location": "/policies/drutiny-acquia/#parameters_8", 
            "text": "Name  Type  Description  Default      expression    'environment[\"flags\"][\"production_mode\"] === true'    not_applicable    'environment[\"flags\"][\"production\"] === false'", 
            "title": "Parameters"
        }, 
        {
            "location": "/policies/drutiny-acquia/#acquia-purge-enabled", 
            "text": "Name :  Acquia:PurgeEnabled  Package :  drutiny/acquia  Class :  \\Drutiny\\Audit\\Drupal\\ModuleEnabled  Acquia Purge modules allows updates in content to be reflected in page cache\nin realtime on the Acquia Platform. It does this by administering bans to the\nplatform page caching service (Varnish).", 
            "title": "Acquia Purge Enabled"
        }, 
        {
            "location": "/policies/drutiny-acquia/#parameters_9", 
            "text": "Name  Type  Description  Default      module  string  The module to check is enabled.  acquia_purge", 
            "title": "Parameters"
        }, 
        {
            "location": "/policies/drutiny-acquia/#acquia-purge-plugin-exists", 
            "text": "Name :  Acquia:PurgePlugin  Package :  drutiny/acquia  Class :  \\Drutiny\\Plugin\\Drupal8\\Audit\\PurgePluginExists  Enabled purging of cached content on Acquia Cloud by adding it as a purge plugin.", 
            "title": "Acquia Purge Plugin Exists"
        }, 
        {
            "location": "/policies/drutiny-acquia/#parameters_10", 
            "text": "Name  Type  Description  Default      plugin  string  The plugins to check exists  acquia_purge", 
            "title": "Parameters"
        }, 
        {
            "location": "/policies/drutiny-acquia/#acquia-spi", 
            "text": "Name :  Acquia:SPIEnabled  Package :  drutiny/acquia  Class :  \\Drutiny\\Audit\\Drupal\\ModuleEnabled  Ensure the Acquia SPI module is enabled.", 
            "title": "Acquia SPI"
        }, 
        {
            "location": "/policies/drutiny-acquia/#parameters_11", 
            "text": "Name  Type  Description  Default      module  string  The module to check is enabled.  acquia_spi", 
            "title": "Parameters"
        }, 
        {
            "location": "/policies/drutiny-acquia/#acsf-drupal-theme-directory-size", 
            "text": "Name :  Acquia:SiteFactory:DrupalThemeDirectory  Package :  drutiny/acquia  Class :  Drutiny\\Audit\\Filesystem\\FsSize  Large theme directories can be indicative of best practice violations:\n  * Source files in site artifact. e.g. node_modules\n  * Media assets unsuitable for web delivery", 
            "title": "ACSF Drupal Theme Directory Size"
        }, 
        {
            "location": "/policies/drutiny-acquia/#parameters_12", 
            "text": "Name  Type  Description  Default      max_size  integer  The maximum size in MegaBytes a directory should be.  50    path  string  The path of the directory to check for size.  '%root/%themes/site/'", 
            "title": "Parameters"
        }, 
        {
            "location": "/policies/drutiny-acquia/#acquia-cloud-site-factory-pingdom", 
            "text": "Name :  Acquia:SiteFactory:Pingdom  Package :  drutiny/acquia  Class :  \\Drutiny\\Audit\\Drupal\\ModuleEnabled  Ensure the Acquia Cloud Site Factory Pingdom module is enabled.", 
            "title": "Acquia Cloud Site Factory Pingdom"
        }, 
        {
            "location": "/policies/drutiny-acquia/#parameters_13", 
            "text": "Name  Type  Description  Default      module  string  The module to check is enabled.  acsf_pingdom", 
            "title": "Parameters"
        }, 
        {
            "location": "/policies/drutiny-acquia/#acquia-search-auto-switch-d7", 
            "text": "Name :  Acquia:SiteFactory:SearchAutoSwitch  Package :  drutiny/acquia  Class :  \\Drutiny\\Plugin\\Drupal7\\Audit\\VariableCompare  Using Site Factory and Acquia Search, the auto core selector needs to be\ndisabled in order to work.", 
            "title": "Acquia Search Auto Switch (D7)"
        }, 
        {
            "location": "/policies/drutiny-acquia/#parameters_14", 
            "text": "Name  Type  Description  Default      key  string  The name of the variable to compare.  acquia_search_disable_auto_switch    value  mixed  The value to compare against  1", 
            "title": "Parameters"
        }, 
        {
            "location": "/policies/drutiny-acquia/#acquia-cloud-site-factory-theme", 
            "text": "Name :  Acquia:SiteFactory:ThemeEnabled  Package :  drutiny/acquia  Class :  \\Drutiny\\Audit\\Drupal\\ModuleEnabled  Ensure the Acquia Cloud Site Factory Theme module is enabled.", 
            "title": "Acquia Cloud Site Factory Theme"
        }, 
        {
            "location": "/policies/drutiny-acquia/#parameters_15", 
            "text": "Name  Type  Description  Default      module  string  The module to check is enabled.  acsf_theme", 
            "title": "Parameters"
        }, 
        {
            "location": "/policies/drutiny-acquia/#acquia-cloud-site-factory-variables", 
            "text": "Name :  Acquia:SiteFactory:Variables  Package :  drutiny/acquia  Class :  \\Drutiny\\Audit\\Drupal\\ModuleEnabled  Ensure the Acquia Cloud Site Factory Variables module is enabled.", 
            "title": "Acquia Cloud Site Factory Variables"
        }, 
        {
            "location": "/policies/drutiny-acquia/#parameters_16", 
            "text": "Name  Type  Description  Default      module  string  The module to check is enabled.  acsf_variables", 
            "title": "Parameters"
        }, 
        {
            "location": "/policies/drutiny-acquia/#drupal-theme-path-references", 
            "text": "Name :  Acquia:SiteFactoryDefaultThemePath  Package :  drutiny/acquia  Class :  Drutiny\\Audit\\Filesystem\\CodeScan  Ensure there are no hard coded references to the default theme path in the\ndeployed theme as this can and will cause a lot of HTTP 404s.", 
            "title": "Drupal Theme Path References"
        }, 
        {
            "location": "/policies/drutiny-acquia/#parameters_17", 
            "text": "Name  Type  Description  Default      directory  string  Absolute filepath to directory to scan  '%root/%themes/site/'    whitelist  array  Whitelist patterns which the 'patterns' parameter may yield false positives from  - .md - .txt - .svg    patterns  array  patterns to run over each matching file.  - sites\\/all\\/themes\\/", 
            "title": "Parameters"
        }, 
        {
            "location": "/policies/drutiny-acquia/#acquia-cloud-site-factory-duplication", 
            "text": "Name :  Acquia:SiteFactoryDuplication  Package :  drutiny/acquia  Class :  \\Drutiny\\Audit\\Drupal\\ModuleEnabled  Ensure the Acquia Cloud Site Factory Duplication module is enabled.", 
            "title": "Acquia Cloud Site Factory Duplication"
        }, 
        {
            "location": "/policies/drutiny-acquia/#parameters_18", 
            "text": "Name  Type  Description  Default      module  string  The module to check is enabled.  acsf_duplication", 
            "title": "Parameters"
        }, 
        {
            "location": "/policies/drutiny-acquia/#acquia-cloud-site-factory-openid", 
            "text": "Name :  Acquia:SiteFactoryOpenID  Package :  drutiny/acquia  Class :  \\Drutiny\\Audit\\Drupal\\ModuleEnabled  Ensure the Acquia Cloud Site Factory OpenID module is enabled.", 
            "title": "Acquia Cloud Site Factory OpenID"
        }, 
        {
            "location": "/policies/drutiny-acquia/#parameters_19", 
            "text": "Name  Type  Description  Default      module  string  The module to check is enabled.  acsf_openid", 
            "title": "Parameters"
        }, 
        {
            "location": "/policies/drutiny-acquia/#serving-files-from-production-on-development-environments", 
            "text": "Name :  Acquia:StageFileProxy  Package :  drutiny/acquia  Class :  \\Drutiny\\Audit\\Drupal\\ModuleEnabled  Development and staging servers may have less disk space allocated to them\nthan a production server. When you are copying files from your production\nserver back to staging or development, you can quickly fill up your disk\nspace. It's possible to use the files on the production server for your\nstaging site without copying them by using  Stage File Proxy \nmodule.  Using the Stage File Proxy module enables a development server to maintain a\nclean files directory and use files from an alternate source by directly\nreferencing that alternate source. An additional option within the module\nallows the file system on the development server to be seeded with files\nfrom the production server.", 
            "title": "Serving files from production on development environments"
        }, 
        {
            "location": "/policies/drutiny-acquia/#parameters_20", 
            "text": "Name  Type  Description  Default      module  string  The module to check is enabled.  stage_file_proxy", 
            "title": "Parameters"
        }, 
        {
            "location": "/policies/drutiny-acquia/#no-page-compression", 
            "text": "Name :  Drupal-7:NoPageCompression  Package :  drutiny/acquia  Class :  \\Drutiny\\Plugin\\Drupal7\\Audit\\VariableCompare  Drupal's Compress cached pages option (page_compression) can cause unexpected\nbehavior when an external cache such as Varnish is employed, and typically\nprovides no benefit. Therefore, Compress cached pages should be disabled", 
            "title": "No Page Compression"
        }, 
        {
            "location": "/policies/drutiny-acquia/#parameters_21", 
            "text": "Name  Type  Description  Default      key  string  The name of the variable to check.  page_compression    value  bool  The value of the variable  0", 
            "title": "Parameters"
        }, 
        {
            "location": "/policies/drutiny-http/", 
            "text": "HTTP Authorization Disabled\n\n\nName\n: \nHTTP:Authorization\n\n\nPackage\n: \ndrutiny/http\n\n\nClass\n: \n\\Drutiny\\Http\\Audit\\HttpHeaderNotExists\n\n\nThe HTTP Authorization request header contains the credentials to authenticate\na user agent with a server, usually after the server has responded with a\n401 Unauthorized status and the WWW-Authenticate header.\n\n\nAuthorization headers can bypass page caching strategies which can detrack\nfrom performance.\n\n\nParameters\n\n\n\n\n\n\n\n\nName\n\n\nType\n\n\nDescription\n\n\nDefault\n\n\n\n\n\n\n\n\n\n\nheader\n\n\nstring\n\n\nThe HTTP header to check the value of.\n\n\nAuthorization\n\n\n\n\n\n\n\n\nHTTP Cache-Control\n\n\nName\n: \nHTTP:Cache-Control\n\n\nPackage\n: \ndrutiny/http\n\n\nClass\n: \n\\Drutiny\\Http\\Audit\\HttpHeaderRegex\n\n\nCache-Control header informs reverse proxies and browsers how to cache your\nweb page for performance reasons. A cacheable page should also contain the\nmax-age directive. E.g. \nmax-age=600; public\n.\n\n\nParameters\n\n\n\n\n\n\n\n\nName\n\n\nType\n\n\nDescription\n\n\nDefault\n\n\n\n\n\n\n\n\n\n\nheader\n\n\nstring\n\n\nThe HTTP header to check the value of.\n\n\nCache-Control\n\n\n\n\n\n\nregex\n\n\nstring\n\n\nA regular expressions to validate the header value against.\n\n\nmax-age=\n\n\n\n\n\n\n\n\nHTTP Content-Security-Policy\n\n\nName\n: \nHTTP:Content-Security-Policy\n\n\nPackage\n: \ndrutiny/http\n\n\nClass\n: \n\\Drutiny\\Http\\Audit\\HttpHeaderExists\n\n\nContent Security Policy\n\nis an effective measure to protect your site from XSS attacks. By whitelisting\nsources of approved content, you can prevent the browser from loading malicious assets.\n\n\nParameters\n\n\n\n\n\n\n\n\nName\n\n\nType\n\n\nDescription\n\n\nDefault\n\n\n\n\n\n\n\n\n\n\nheader\n\n\nstring\n\n\nThe HTTP header to check the value of.\n\n\nContent-Security-Policy\n\n\n\n\n\n\n\n\nForce HTTPS\n\n\nName\n: \nHTTP:ForceHTTPS\n\n\nPackage\n: \ndrutiny/http\n\n\nClass\n: \n\\Drutiny\\Http\\Audit\\HttpsRedirect\n\n\nEnsure attempts to http redirect the user to an HTTPS URL. This ensures no\ncontent is ever served over an insecure connection which is considered a best\npractice.\n\n\nHTTP HSTS\n\n\nName\n: \nHTTP:HSTS\n\n\nPackage\n: \ndrutiny/http\n\n\nClass\n: \n\\Drutiny\\Http\\Audit\\HttpHeaderExists\n\n\nHTTP Strict Transport Security\n\nis an excellent feature to support on your site and strengthens your\nimplementation of TLS by getting the User Agent to enforce the use of HTTPS.\n\n\nParameters\n\n\n\n\n\n\n\n\nName\n\n\nType\n\n\nDescription\n\n\nDefault\n\n\n\n\n\n\n\n\n\n\nheader\n\n\nstring\n\n\nThe HTTP header to check the value of.\n\n\nStrict-Transport-Security\n\n\n\n\n\n\n\n\nHTTP Referrer Policy\n\n\nName\n: \nHTTP:ReferrerPolicy\n\n\nPackage\n: \ndrutiny/http\n\n\nClass\n: \n\\Drutiny\\Http\\Audit\\HttpHeaderExists\n\n\nReferrer Policy\n is\na header that allows a site to control how much information the browser\nincludes with navigations away from a document and should be set by all sites.\n\n\nParameters\n\n\n\n\n\n\n\n\nName\n\n\nType\n\n\nDescription\n\n\nDefault\n\n\n\n\n\n\n\n\n\n\nheader\n\n\nstring\n\n\nThe HTTP header to check the value of.\n\n\nReferrer-Policy\n\n\n\n\n\n\n\n\nHTTPS Valid SSL Certificate\n\n\nName\n: \nHTTP:ValidSSL\n\n\nPackage\n: \ndrutiny/http\n\n\nClass\n: \n\\Drutiny\\Http\\Audit\\HttpStatusCode\n\n\nEnsure https requests over a valid SSL connection. This validates the SSL\ncertficiate and chain authority to ensure browsers will also be able to\ntrust this connection.\n\n\nParameters\n\n\n\n\n\n\n\n\nName\n\n\nType\n\n\nDescription\n\n\nDefault\n\n\n\n\n\n\n\n\n\n\nforce_ssl\n\n\n\n\n\n\ntrue\n\n\n\n\n\n\n\n\nHTTP X-Content-Type-Options\n\n\nName\n: \nHTTP:X-Content-Type-Options\n\n\nPackage\n: \ndrutiny/http\n\n\nClass\n: \n\\Drutiny\\Http\\Audit\\HttpHeaderMatch\n\n\nX-Content-Type-Options\n\nstops a browser from trying to MIME-sniff the content type and forces it to\nstick with the declared content-type. The only valid value for this header is\n\nX-Content-Type-Options: nosniff\n.\n\n\nParameters\n\n\n\n\n\n\n\n\nName\n\n\nType\n\n\nDescription\n\n\nDefault\n\n\n\n\n\n\n\n\n\n\nheader\n\n\nstring\n\n\nThe HTTP header to check the value of.\n\n\nX-Content-Type-Options\n\n\n\n\n\n\nheader_value\n\n\nstring\n\n\nThe value to check against.\n\n\nnosniff\n\n\n\n\n\n\n\n\nHTTP X-Frame-Options\n\n\nName\n: \nHTTP:X-Frame-Options\n\n\nPackage\n: \ndrutiny/http\n\n\nClass\n: \n\\Drutiny\\Http\\Audit\\HttpHeaderExists\n\n\nX-Frame-Options\n\ntells the browser whether you want to allow your site to be framed or not. By\npreventing a browser from framing your site you can defend against attacks\nlike clickjacking.\n\n\nParameters\n\n\n\n\n\n\n\n\nName\n\n\nType\n\n\nDescription\n\n\nDefault\n\n\n\n\n\n\n\n\n\n\nheader\n\n\nstring\n\n\nThe HTTP header to check the value of.\n\n\nX-Frame-Options\n\n\n\n\n\n\n\n\nHTTP X-XSS-Protection\n\n\nName\n: \nHTTP:X-XSS-Protection\n\n\nPackage\n: \ndrutiny/http\n\n\nClass\n: \n\\Drutiny\\Http\\Audit\\HttpHeaderMatch\n\n\nX-XSS-Protection\n\nsets the configuration for the cross-site scripting filters built into most\nbrowsers. The best configuration is \nX-XSS-Protection: 1; mode=block\n.\n\n\nParameters\n\n\n\n\n\n\n\n\nName\n\n\nType\n\n\nDescription\n\n\nDefault\n\n\n\n\n\n\n\n\n\n\nheader\n\n\nstring\n\n\nThe HTTP header to check the value of.\n\n\nX-XSS-Protection\n\n\n\n\n\n\nheader_value\n\n\nstring\n\n\nThe value to check against.\n\n\n'1; mode=block'\n\n\n\n\n\n\n\n\nChrome distrusted Symantec PKI\n\n\nName\n: \nSSL:DistrustedSymantecPKI\n\n\nPackage\n: \ndrutiny/http\n\n\nClass\n: \n\\Drutiny\\Http\\Audit\\SslAssertion\n\n\nAt the end of July 2018, the Chrome team and PKI community plan to reduce, and\nremove, trust in Symantec\u2019s infrastructure in order to uphold users\u2019 security\nand privacy when browsing the web. SSL/TLS certificates from the Legacy\nSymantec PKI issued after December 1, 2017 will no longer be trusted.\n\n\nParameters\n\n\n\n\n\n\n\n\nName\n\n\nType\n\n\nDescription\n\n\nDefault\n\n\n\n\n\n\n\n\n\n\nexpression\n\n\nstring\n\n\nThe expression language to evaludate. See https://symfony.com/doc/current/components/expression_language/syntax.html\n\n\n\"not (cert[\\\"issuer\\\"][\\\"O\\\"] in [\\\"DigiCert Inc\\\", \\\"thawte, Inc.\\\", \\\"GeoTrust Inc.\\\"]\\nand cert[\\\"validFrom_time_t\\\"] \n 1512039600)\\n\"", 
            "title": "drutiny/http"
        }, 
        {
            "location": "/policies/drutiny-http/#http-authorization-disabled", 
            "text": "Name :  HTTP:Authorization  Package :  drutiny/http  Class :  \\Drutiny\\Http\\Audit\\HttpHeaderNotExists  The HTTP Authorization request header contains the credentials to authenticate\na user agent with a server, usually after the server has responded with a\n401 Unauthorized status and the WWW-Authenticate header.  Authorization headers can bypass page caching strategies which can detrack\nfrom performance.", 
            "title": "HTTP Authorization Disabled"
        }, 
        {
            "location": "/policies/drutiny-http/#parameters", 
            "text": "Name  Type  Description  Default      header  string  The HTTP header to check the value of.  Authorization", 
            "title": "Parameters"
        }, 
        {
            "location": "/policies/drutiny-http/#http-cache-control", 
            "text": "Name :  HTTP:Cache-Control  Package :  drutiny/http  Class :  \\Drutiny\\Http\\Audit\\HttpHeaderRegex  Cache-Control header informs reverse proxies and browsers how to cache your\nweb page for performance reasons. A cacheable page should also contain the\nmax-age directive. E.g.  max-age=600; public .", 
            "title": "HTTP Cache-Control"
        }, 
        {
            "location": "/policies/drutiny-http/#parameters_1", 
            "text": "Name  Type  Description  Default      header  string  The HTTP header to check the value of.  Cache-Control    regex  string  A regular expressions to validate the header value against.  max-age=", 
            "title": "Parameters"
        }, 
        {
            "location": "/policies/drutiny-http/#http-content-security-policy", 
            "text": "Name :  HTTP:Content-Security-Policy  Package :  drutiny/http  Class :  \\Drutiny\\Http\\Audit\\HttpHeaderExists  Content Security Policy \nis an effective measure to protect your site from XSS attacks. By whitelisting\nsources of approved content, you can prevent the browser from loading malicious assets.", 
            "title": "HTTP Content-Security-Policy"
        }, 
        {
            "location": "/policies/drutiny-http/#parameters_2", 
            "text": "Name  Type  Description  Default      header  string  The HTTP header to check the value of.  Content-Security-Policy", 
            "title": "Parameters"
        }, 
        {
            "location": "/policies/drutiny-http/#force-https", 
            "text": "Name :  HTTP:ForceHTTPS  Package :  drutiny/http  Class :  \\Drutiny\\Http\\Audit\\HttpsRedirect  Ensure attempts to http redirect the user to an HTTPS URL. This ensures no\ncontent is ever served over an insecure connection which is considered a best\npractice.", 
            "title": "Force HTTPS"
        }, 
        {
            "location": "/policies/drutiny-http/#http-hsts", 
            "text": "Name :  HTTP:HSTS  Package :  drutiny/http  Class :  \\Drutiny\\Http\\Audit\\HttpHeaderExists  HTTP Strict Transport Security \nis an excellent feature to support on your site and strengthens your\nimplementation of TLS by getting the User Agent to enforce the use of HTTPS.", 
            "title": "HTTP HSTS"
        }, 
        {
            "location": "/policies/drutiny-http/#parameters_3", 
            "text": "Name  Type  Description  Default      header  string  The HTTP header to check the value of.  Strict-Transport-Security", 
            "title": "Parameters"
        }, 
        {
            "location": "/policies/drutiny-http/#http-referrer-policy", 
            "text": "Name :  HTTP:ReferrerPolicy  Package :  drutiny/http  Class :  \\Drutiny\\Http\\Audit\\HttpHeaderExists  Referrer Policy  is\na header that allows a site to control how much information the browser\nincludes with navigations away from a document and should be set by all sites.", 
            "title": "HTTP Referrer Policy"
        }, 
        {
            "location": "/policies/drutiny-http/#parameters_4", 
            "text": "Name  Type  Description  Default      header  string  The HTTP header to check the value of.  Referrer-Policy", 
            "title": "Parameters"
        }, 
        {
            "location": "/policies/drutiny-http/#https-valid-ssl-certificate", 
            "text": "Name :  HTTP:ValidSSL  Package :  drutiny/http  Class :  \\Drutiny\\Http\\Audit\\HttpStatusCode  Ensure https requests over a valid SSL connection. This validates the SSL\ncertficiate and chain authority to ensure browsers will also be able to\ntrust this connection.", 
            "title": "HTTPS Valid SSL Certificate"
        }, 
        {
            "location": "/policies/drutiny-http/#parameters_5", 
            "text": "Name  Type  Description  Default      force_ssl    true", 
            "title": "Parameters"
        }, 
        {
            "location": "/policies/drutiny-http/#http-x-content-type-options", 
            "text": "Name :  HTTP:X-Content-Type-Options  Package :  drutiny/http  Class :  \\Drutiny\\Http\\Audit\\HttpHeaderMatch  X-Content-Type-Options \nstops a browser from trying to MIME-sniff the content type and forces it to\nstick with the declared content-type. The only valid value for this header is X-Content-Type-Options: nosniff .", 
            "title": "HTTP X-Content-Type-Options"
        }, 
        {
            "location": "/policies/drutiny-http/#parameters_6", 
            "text": "Name  Type  Description  Default      header  string  The HTTP header to check the value of.  X-Content-Type-Options    header_value  string  The value to check against.  nosniff", 
            "title": "Parameters"
        }, 
        {
            "location": "/policies/drutiny-http/#http-x-frame-options", 
            "text": "Name :  HTTP:X-Frame-Options  Package :  drutiny/http  Class :  \\Drutiny\\Http\\Audit\\HttpHeaderExists  X-Frame-Options \ntells the browser whether you want to allow your site to be framed or not. By\npreventing a browser from framing your site you can defend against attacks\nlike clickjacking.", 
            "title": "HTTP X-Frame-Options"
        }, 
        {
            "location": "/policies/drutiny-http/#parameters_7", 
            "text": "Name  Type  Description  Default      header  string  The HTTP header to check the value of.  X-Frame-Options", 
            "title": "Parameters"
        }, 
        {
            "location": "/policies/drutiny-http/#http-x-xss-protection", 
            "text": "Name :  HTTP:X-XSS-Protection  Package :  drutiny/http  Class :  \\Drutiny\\Http\\Audit\\HttpHeaderMatch  X-XSS-Protection \nsets the configuration for the cross-site scripting filters built into most\nbrowsers. The best configuration is  X-XSS-Protection: 1; mode=block .", 
            "title": "HTTP X-XSS-Protection"
        }, 
        {
            "location": "/policies/drutiny-http/#parameters_8", 
            "text": "Name  Type  Description  Default      header  string  The HTTP header to check the value of.  X-XSS-Protection    header_value  string  The value to check against.  '1; mode=block'", 
            "title": "Parameters"
        }, 
        {
            "location": "/policies/drutiny-http/#chrome-distrusted-symantec-pki", 
            "text": "Name :  SSL:DistrustedSymantecPKI  Package :  drutiny/http  Class :  \\Drutiny\\Http\\Audit\\SslAssertion  At the end of July 2018, the Chrome team and PKI community plan to reduce, and\nremove, trust in Symantec\u2019s infrastructure in order to uphold users\u2019 security\nand privacy when browsing the web. SSL/TLS certificates from the Legacy\nSymantec PKI issued after December 1, 2017 will no longer be trusted.", 
            "title": "Chrome distrusted Symantec PKI"
        }, 
        {
            "location": "/policies/drutiny-http/#parameters_9", 
            "text": "Name  Type  Description  Default      expression  string  The expression language to evaludate. See https://symfony.com/doc/current/components/expression_language/syntax.html  \"not (cert[\\\"issuer\\\"][\\\"O\\\"] in [\\\"DigiCert Inc\\\", \\\"thawte, Inc.\\\", \\\"GeoTrust Inc.\\\"]\\nand cert[\\\"validFrom_time_t\\\"]   1512039600)\\n\"", 
            "title": "Parameters"
        }, 
        {
            "location": "/policies/drutiny-drutiny/", 
            "text": ".htaccess redirects\n\n\nName\n: \nApache:LimitHtacessRedirects\n\n\nPackage\n: \ndrutiny/drutiny\n\n\nClass\n: \n\\Drutiny\\Audit\\Apache\\HtaccessRedirects\n\n\nWhen there are a large number of redirects in the \n.htaccess\n file\nthey are all required to be loaded at run time during every request as Apache\nneeds to analyze the contents so that it can make appropriate decisions about\nhow to process the application and incoming requests. Redirect rules should be\nrefactored to take advantage of regular expressions if possible. Otherwise the\nredirect module should be added to the site and all of the redirects in the\n\n.htaccess\n file should be moved into the Drupal site. Although\nthese redirects will then require a Drupal bootstrap in order to fulfill the\nrequest, Varnish will be able to cache the redirect once it has been made once\n as long as there is a maximum age set on the site.\n\n\nParameters\n\n\n\n\n\n\n\n\nName\n\n\nType\n\n\nDescription\n\n\nDefault\n\n\n\n\n\n\n\n\n\n\nmax_redirects\n\n\ninteger\n\n\nThe maximum number of redirects to allow in htaccess.\n\n\n10\n\n\n\n\n\n\n\n\nDatabase size\n\n\nName\n: \nDatabase:Size\n\n\nPackage\n: \ndrutiny/drutiny\n\n\nClass\n: \n\\Drutiny\\Audit\\Database\\DatabaseSize\n\n\nLarge databases can negatively impact your production site, and slow down\nthings like database dumps. The size reported is the data and index size\ncombined.\n\n\nParameters\n\n\n\n\n\n\n\n\nName\n\n\nType\n\n\nDescription\n\n\nDefault\n\n\n\n\n\n\n\n\n\n\nmax_size\n\n\ninteger\n\n\nThe maximum size in megabytes the database should be.\n\n\n1000\n\n\n\n\n\n\nwarning_size\n\n\ninteger\n\n\nThe size in megabytes this check will issues a warning at.\n\n\n800\n\n\n\n\n\n\n\n\nAnonymous sessions\n\n\nName\n: \nDrupal:AnonSession\n\n\nPackage\n: \ndrutiny/drutiny\n\n\nClass\n: \nDrutiny\\Audit\\Drupal\\SqlResultAudit\n\n\nIf you are generating sessions for anonymous users, you are causing a major\nperformance impact to your site. Having anonymous sessions will break\ntraditional page caching in Varnish and CDNs.\n\n\nParameters\n\n\n\n\n\n\n\n\nName\n\n\nType\n\n\nDescription\n\n\nDefault\n\n\n\n\n\n\n\n\n\n\nfield\n\n\nstring\n\n\nThe name of the field in the result row to pull the value from\n\n\ncount\n\n\n\n\n\n\nvalue\n\n\nmixed\n\n\nThe value to compare against\n\n\n0\n\n\n\n\n\n\nquery\n\n\nstring\n\n\nThe SQL query to run. Can use other parameters for variable replacement.\n\n\n\"SELECT COUNT(*) as count FROM sessions\\nWHERE uid = 0\\n  AND session NOT LIKE 'openid%'\\n  AND session NOT LIKE '%Access denied%'\\n\"\n\n\n\n\n\n\n\n\nLint PHP files in Theme\n\n\nName\n: \nDrupal:LintTheme\n\n\nPackage\n: \ndrutiny/drutiny\n\n\nClass\n: \nDrutiny\\Audit\\Drupal\\PhpLint\n\n\nEnsure all PHP files in the theme pass basic PHP syntax parsing.\n\n\nParameters\n\n\n\n\n\n\n\n\nName\n\n\nType\n\n\nDescription\n\n\nDefault\n\n\n\n\n\n\n\n\n\n\npath\n\n\nstring\n\n\nThe path where to lint PHP files.\n\n\n'%root/%themes'\n\n\n\n\n\n\n\n\nUser Enumeration\n\n\nName\n: \nDrupal:Security:UserEmueration\n\n\nPackage\n: \ndrutiny/drutiny\n\n\nClass\n: \nDrutiny\\Audit\\Drupal\\ModuleEnabled\n\n\nUser enumeration is when a malicious actor can use brute-force to either guess\nor confirm valid users in a system. User enumeration is often a web\napplication vulnerability, though it can also be found in any system that\nrequires user authentication. Two of the most common areas where user\nenumeration occurs are in a site's login page and its \u2018Forgot Password'\nfunctionality.\n\n\nUser enumeration is a default vulnerability in Drupal but can be mitigated\nthrough the use of the\n\nUsername Enumeration Prevention\n\nmodule.\n\n\nParameters\n\n\n\n\n\n\n\n\nName\n\n\nType\n\n\nDescription\n\n\nDefault\n\n\n\n\n\n\n\n\n\n\nmodule\n\n\nstring\n\n\nThe module to check is enabled.\n\n\nusername_enumeration_prevention\n\n\n\n\n\n\n\n\nSyslog\n\n\nName\n: \nDrupal:SyslogEnabled\n\n\nPackage\n: \ndrutiny/drutiny\n\n\nClass\n: \n\\Drutiny\\Audit\\Drupal\\ModuleEnabled\n\n\nSyslog module writes Drupal watchdog logs to the syslog.\n\n\nParameters\n\n\n\n\n\n\n\n\nName\n\n\nType\n\n\nDescription\n\n\nDefault\n\n\n\n\n\n\n\n\n\n\nmodule\n\n\nstring\n\n\nThe name of the module to ensure is enabled.\n\n\nsyslog\n\n\n\n\n\n\n\n\nDrupal Theme Security\n\n\nName\n: \nDrupal:ThemeSecurity\n\n\nPackage\n: \ndrutiny/drutiny\n\n\nClass\n: \nDrutiny\\Audit\\Filesystem\\CodeScan\n\n\nSome basic checks to ensure that the theme is not doing any seriously bad\nthings. Note this is not supposed to be perfect, but used as an aid in\ncode review.\n\n\nParameters\n\n\n\n\n\n\n\n\nName\n\n\nType\n\n\nDescription\n\n\nDefault\n\n\n\n\n\n\n\n\n\n\ndirectory\n\n\nstring\n\n\nAbsolute filepath to directory to scan\n\n\n'%root/%themes'\n\n\n\n\n\n\nfiletypes\n\n\narray\n\n\nfile extensions to include in the scan\n\n\n- php\n- inc\n- theme\n\n\n\n\n\n\npatterns\n\n\narray\n\n\npatterns to run over each matching file.\n\n\n- _POST\n- exec(\n- db_query\n- db_select\n- db_merge\n- db_update\n- db_write_record\n- -\nquery\n- drupal_http_request\n- curl_init\n- passthru\n- proc_open\n- system(\n- sleep(\n\n\n\n\n\n\n\n\nLarge Drupal Files\n\n\nName\n: \nDrupal:largeFiles\n\n\nPackage\n: \ndrutiny/drutiny\n\n\nClass\n: \n\\Drutiny\\Audit\\Drupal\\LargeDrupalFiles\n\n\nLarge static assets should be optimized for online display or ideally be housed in other services, e.g.\nAmazon S3 (for files) or Youtube (for videos). Storing large files can consume storage volumes,\nincrease page load time and contribute to a higher than desired cache eviction rate. Varnish, on Acquia Cloud,\ndoes not cache files larger than 10 MB.\n\n\nThis policy identifies files managed by Drupal that are larger than .\n\n\nParameters\n\n\n\n\n\n\n\n\nName\n\n\nType\n\n\nDescription\n\n\nDefault\n\n\n\n\n\n\n\n\n\n\nmax_size\n\n\ninteger\n\n\nReport files larger than this value measured in bytes.\n\n\n10000000\n\n\n\n\n\n\n\n\nModule updates\n\n\nName\n: \nDrupal:moduleUpdates\n\n\nPackage\n: \ndrutiny/drutiny\n\n\nClass\n: \n\\Drutiny\\Audit\\Drupal\\ModuleUpdateStatus\n\n\nThroughout the lifetime of your site, the Drupal project and its community\ncontributed modules will release new versions that contain bug fixes, new features\nand security updates. It important to keep your site up to date and patched\nfrom known security vulnerabilities.\n\n\nNote that upgrading modules, especially between major versions can introduce\nregressions into your site. While its important to maintain a continual update\nschedule for your site, regression testing changes is of equal importance.\n\n\nDatabase updates\n\n\nName\n: \nDrupal:updates\n\n\nPackage\n: \ndrutiny/drutiny\n\n\nClass\n: \n\\Drutiny\\Audit\\Drupal\\UpdateDBStatus\n\n\nUpdates to Drupal core or contrib modules sometimes include important database\nchanges which should be applied after the code updates have been deployed.\n\n\nAlways error test policy\n\n\nName\n: \nTest:Error\n\n\nPackage\n: \ndrutiny/drutiny\n\n\nClass\n: \n\\Drutiny\\Audit\\AlwaysError\n\n\nThis policy should always error. Twee godard poutine knausgaard, street art\nkeytar readymade unicorn wayfarers vape mumblecore blue bottle. Portland\npitchfork air plant kale chips, craft beer meditation tumeric seitan umami\nvexillologist cred coloring book taxidermy actually.\n\n\nBanjo narwhal la croix portland green juice lumbersexual biodiesel kombucha\nvegan umami aesthetic trust fund ramps. Art party +1 celiac everyday carry\nsucculents seitan franzen distillery venmo keytar cray mustache gastropub.\n8-bit seitan banh mi, vice chillwave viral synth vinyl +1. Mixtape mustache\npitchfork, meh tacos kitsch offal pop-up intelligentsia VHS air plant pork\nbelly. Thundercats microdosing taxidermy try-hard +1 ennui photo booth 8-bit.\n\n\nAlways fail test policy\n\n\nName\n: \nTest:Fail\n\n\nPackage\n: \ndrutiny/drutiny\n\n\nClass\n: \n\\Drutiny\\Audit\\AlwaysFail\n\n\nThis policy should always fail. Twee godard poutine knausgaard, street art\nkeytar readymade unicorn wayfarers vape mumblecore blue bottle. Portland\npitchfork air plant kale chips, craft beer meditation tumeric seitan umami\nvexillologist cred coloring book taxidermy actually.\n\n\nBanjo narwhal la croix portland green juice lumbersexual biodiesel kombucha\nvegan umami aesthetic trust fund ramps. Art party +1 celiac everyday carry\nsucculents seitan franzen distillery venmo keytar cray mustache gastropub.\n8-bit seitan banh mi, vice chillwave viral synth vinyl +1. Mixtape mustache\npitchfork, meh tacos kitsch offal pop-up intelligentsia VHS air plant pork\nbelly. Thundercats microdosing taxidermy try-hard +1 ennui photo booth 8-bit.\n\n\nNot applicable test policy\n\n\nName\n: \nTest:NA\n\n\nPackage\n: \ndrutiny/drutiny\n\n\nClass\n: \n\\Drutiny\\Audit\\AlwaysNA\n\n\nThis policy should always be not applicable. Twee godard poutine knausgaard,\nkeytar readymade unicorn wayfarers vape mumblecore blue bottle. Portland\npitchfork air plant kale chips, craft beer meditation tumeric seitan umami\nvexillologist cred coloring book taxidermy actually.\n\n\nBanjo narwhal la croix portland green juice lumbersexual biodiesel kombucha\nvegan umami aesthetic trust fund ramps. Art party +1 celiac everyday carry\nsucculents seitan franzen distillery venmo keytar cray mustache gastropub.\n8-bit seitan banh mi, vice chillwave viral synth vinyl +1. Mixtape mustache\npitchfork, meh tacos kitsch offal pop-up intelligentsia VHS air plant pork\nbelly. Thundercats microdosing taxidermy try-hard +1 ennui photo booth 8-bit.\n\n\nAlways notice test policy\n\n\nName\n: \nTest:Notice\n\n\nPackage\n: \ndrutiny/drutiny\n\n\nClass\n: \n\\Drutiny\\Audit\\AlwaysNotice\n\n\nThis policy should always be a notice. Twee godard poutine knausgaard, street\nkeytar readymade unicorn wayfarers vape mumblecore blue bottle. Portland\npitchfork air plant kale chips, craft beer meditation tumeric seitan umami\nvexillologist cred coloring book taxidermy actually.\n\n\nBanjo narwhal la croix portland green juice lumbersexual biodiesel kombucha\nvegan umami aesthetic trust fund ramps. Art party +1 celiac everyday carry\nsucculents seitan franzen distillery venmo keytar cray mustache gastropub.\n8-bit seitan banh mi, vice chillwave viral synth vinyl +1. Mixtape mustache\npitchfork, meh tacos kitsch offal pop-up intelligentsia VHS air plant pork\nbelly. Thundercats microdosing taxidermy try-hard +1 ennui photo booth 8-bit.\n\n\nAlways pass test policy\n\n\nName\n: \nTest:Pass\n\n\nPackage\n: \ndrutiny/drutiny\n\n\nClass\n: \n\\Drutiny\\Audit\\AlwaysPass\n\n\nThis policy should always pass. Twee godard poutine knausgaard, street art\nkeytar readymade unicorn wayfarers vape mumblecore blue bottle. Portland\npitchfork air plant kale chips, craft beer meditation tumeric seitan umami\nvexillologist cred coloring book taxidermy actually.\n\n\nBanjo narwhal la croix portland green juice lumbersexual biodiesel kombucha\nvegan umami aesthetic trust fund ramps. Art party +1 celiac everyday carry\nsucculents seitan franzen distillery venmo keytar cray mustache gastropub.\n8-bit seitan banh mi, vice chillwave viral synth vinyl +1. Mixtape mustache\npitchfork, meh tacos kitsch offal pop-up intelligentsia VHS air plant pork\nbelly. Thundercats microdosing taxidermy try-hard +1 ennui photo booth 8-bit.\n\n\nAlways pass dependant test policy\n\n\nName\n: \nTest:PassDependant\n\n\nPackage\n: \ndrutiny/drutiny\n\n\nClass\n: \n\\Drutiny\\Audit\\AlwaysPass\n\n\nThis policy should always pass. Twee godard poutine knausgaard, street art\nkeytar readymade unicorn wayfarers vape mumblecore blue bottle. Portland\npitchfork air plant kale chips, craft beer meditation tumeric seitan umami\nvexillologist cred coloring book taxidermy actually.\n\n\nBanjo narwhal la croix portland green juice lumbersexual biodiesel kombucha\nvegan umami aesthetic trust fund ramps. Art party +1 celiac everyday carry\nsucculents seitan franzen distillery venmo keytar cray mustache gastropub.\n8-bit seitan banh mi, vice chillwave viral synth vinyl +1. Mixtape mustache\npitchfork, meh tacos kitsch offal pop-up intelligentsia VHS air plant pork\nbelly. Thundercats microdosing taxidermy try-hard +1 ennui photo booth 8-bit.\n\n\nAlways warn test policy\n\n\nName\n: \nTest:Warning\n\n\nPackage\n: \ndrutiny/drutiny\n\n\nClass\n: \n\\Drutiny\\Audit\\AlwaysWarn\n\n\nThis policy should always issue a warning. Twee godard poutine knausgaard,\nkeytar readymade unicorn wayfarers vape mumblecore blue bottle. Portland\npitchfork air plant kale chips, craft beer meditation tumeric seitan umami\nvexillologist cred coloring book taxidermy actually.\n\n\nBanjo narwhal la croix portland green juice lumbersexual biodiesel kombucha\nvegan umami aesthetic trust fund ramps. Art party +1 celiac everyday carry\nsucculents seitan franzen distillery venmo keytar cray mustache gastropub.\n8-bit seitan banh mi, vice chillwave viral synth vinyl +1. Mixtape mustache\npitchfork, meh tacos kitsch offal pop-up intelligentsia VHS air plant pork\nbelly. Thundercats microdosing taxidermy try-hard +1 ennui photo booth 8-bit.\n\n\nDrupal Theme Directory Size\n\n\nName\n: \nfs:DrupalThemeDirectory\n\n\nPackage\n: \ndrutiny/drutiny\n\n\nClass\n: \nDrutiny\\Audit\\Filesystem\\FsSize\n\n\nLarge theme directories can be indicative of best practice violations:\n  * Source files in site artifact. e.g. node_modules\n  * Media assets unsuitable for web delivery\n\n\nParameters\n\n\n\n\n\n\n\n\nName\n\n\nType\n\n\nDescription\n\n\nDefault\n\n\n\n\n\n\n\n\n\n\nmax_size\n\n\ninteger\n\n\nThe maximum size in MegaBytes a directory should be.\n\n\n50\n\n\n\n\n\n\npath\n\n\nstring\n\n\nThe path of the directory to check for size.\n\n\n'%root/%themes'\n\n\n\n\n\n\n\n\nSensitive public files\n\n\nName\n: \nfs:SensitivePublicFiles\n\n\nPackage\n: \ndrutiny/drutiny\n\n\nClass\n: \nDrutiny\\Audit\\Filesystem\\SensitivePublicFiles\n\n\nCertain file extensions should never be in public files for security reasons.\n\n\nParameters\n\n\n\n\n\n\n\n\nName\n\n\nType\n\n\nDescription\n\n\nDefault\n\n\n\n\n\n\n\n\n\n\nextensions\n\n\nstring\n\n\nThe sensitive file extensions to look for.\n\n\n'php,sh,py,sql,bz2,gz,tar,tgz,zip'\n\n\n\n\n\n\n\n\nLarge public files\n\n\nName\n: \nfs:largeFiles\n\n\nPackage\n: \ndrutiny/drutiny\n\n\nClass\n: \nDrutiny\\Audit\\Filesystem\\LargeFiles\n\n\nLarge static assets should ideally be housed in other services, e.g.\nAmazon S3 (for files) or Youtube (for videos).\n\n\nParameters\n\n\n\n\n\n\n\n\nName\n\n\nType\n\n\nDescription\n\n\nDefault\n\n\n\n\n\n\n\n\n\n\nmax_size\n\n\ninteger\n\n\nReport files larger than this value measured in megabytes.\n\n\n50", 
            "title": "drutiny/drutiny"
        }, 
        {
            "location": "/policies/drutiny-drutiny/#htaccess-redirects", 
            "text": "Name :  Apache:LimitHtacessRedirects  Package :  drutiny/drutiny  Class :  \\Drutiny\\Audit\\Apache\\HtaccessRedirects  When there are a large number of redirects in the  .htaccess  file\nthey are all required to be loaded at run time during every request as Apache\nneeds to analyze the contents so that it can make appropriate decisions about\nhow to process the application and incoming requests. Redirect rules should be\nrefactored to take advantage of regular expressions if possible. Otherwise the\nredirect module should be added to the site and all of the redirects in the .htaccess  file should be moved into the Drupal site. Although\nthese redirects will then require a Drupal bootstrap in order to fulfill the\nrequest, Varnish will be able to cache the redirect once it has been made once\n as long as there is a maximum age set on the site.", 
            "title": ".htaccess redirects"
        }, 
        {
            "location": "/policies/drutiny-drutiny/#parameters", 
            "text": "Name  Type  Description  Default      max_redirects  integer  The maximum number of redirects to allow in htaccess.  10", 
            "title": "Parameters"
        }, 
        {
            "location": "/policies/drutiny-drutiny/#database-size", 
            "text": "Name :  Database:Size  Package :  drutiny/drutiny  Class :  \\Drutiny\\Audit\\Database\\DatabaseSize  Large databases can negatively impact your production site, and slow down\nthings like database dumps. The size reported is the data and index size\ncombined.", 
            "title": "Database size"
        }, 
        {
            "location": "/policies/drutiny-drutiny/#parameters_1", 
            "text": "Name  Type  Description  Default      max_size  integer  The maximum size in megabytes the database should be.  1000    warning_size  integer  The size in megabytes this check will issues a warning at.  800", 
            "title": "Parameters"
        }, 
        {
            "location": "/policies/drutiny-drutiny/#anonymous-sessions", 
            "text": "Name :  Drupal:AnonSession  Package :  drutiny/drutiny  Class :  Drutiny\\Audit\\Drupal\\SqlResultAudit  If you are generating sessions for anonymous users, you are causing a major\nperformance impact to your site. Having anonymous sessions will break\ntraditional page caching in Varnish and CDNs.", 
            "title": "Anonymous sessions"
        }, 
        {
            "location": "/policies/drutiny-drutiny/#parameters_2", 
            "text": "Name  Type  Description  Default      field  string  The name of the field in the result row to pull the value from  count    value  mixed  The value to compare against  0    query  string  The SQL query to run. Can use other parameters for variable replacement.  \"SELECT COUNT(*) as count FROM sessions\\nWHERE uid = 0\\n  AND session NOT LIKE 'openid%'\\n  AND session NOT LIKE '%Access denied%'\\n\"", 
            "title": "Parameters"
        }, 
        {
            "location": "/policies/drutiny-drutiny/#lint-php-files-in-theme", 
            "text": "Name :  Drupal:LintTheme  Package :  drutiny/drutiny  Class :  Drutiny\\Audit\\Drupal\\PhpLint  Ensure all PHP files in the theme pass basic PHP syntax parsing.", 
            "title": "Lint PHP files in Theme"
        }, 
        {
            "location": "/policies/drutiny-drutiny/#parameters_3", 
            "text": "Name  Type  Description  Default      path  string  The path where to lint PHP files.  '%root/%themes'", 
            "title": "Parameters"
        }, 
        {
            "location": "/policies/drutiny-drutiny/#user-enumeration", 
            "text": "Name :  Drupal:Security:UserEmueration  Package :  drutiny/drutiny  Class :  Drutiny\\Audit\\Drupal\\ModuleEnabled  User enumeration is when a malicious actor can use brute-force to either guess\nor confirm valid users in a system. User enumeration is often a web\napplication vulnerability, though it can also be found in any system that\nrequires user authentication. Two of the most common areas where user\nenumeration occurs are in a site's login page and its \u2018Forgot Password'\nfunctionality.  User enumeration is a default vulnerability in Drupal but can be mitigated\nthrough the use of the Username Enumeration Prevention \nmodule.", 
            "title": "User Enumeration"
        }, 
        {
            "location": "/policies/drutiny-drutiny/#parameters_4", 
            "text": "Name  Type  Description  Default      module  string  The module to check is enabled.  username_enumeration_prevention", 
            "title": "Parameters"
        }, 
        {
            "location": "/policies/drutiny-drutiny/#syslog", 
            "text": "Name :  Drupal:SyslogEnabled  Package :  drutiny/drutiny  Class :  \\Drutiny\\Audit\\Drupal\\ModuleEnabled  Syslog module writes Drupal watchdog logs to the syslog.", 
            "title": "Syslog"
        }, 
        {
            "location": "/policies/drutiny-drutiny/#parameters_5", 
            "text": "Name  Type  Description  Default      module  string  The name of the module to ensure is enabled.  syslog", 
            "title": "Parameters"
        }, 
        {
            "location": "/policies/drutiny-drutiny/#drupal-theme-security", 
            "text": "Name :  Drupal:ThemeSecurity  Package :  drutiny/drutiny  Class :  Drutiny\\Audit\\Filesystem\\CodeScan  Some basic checks to ensure that the theme is not doing any seriously bad\nthings. Note this is not supposed to be perfect, but used as an aid in\ncode review.", 
            "title": "Drupal Theme Security"
        }, 
        {
            "location": "/policies/drutiny-drutiny/#parameters_6", 
            "text": "Name  Type  Description  Default      directory  string  Absolute filepath to directory to scan  '%root/%themes'    filetypes  array  file extensions to include in the scan  - php - inc - theme    patterns  array  patterns to run over each matching file.  - _POST - exec( - db_query - db_select - db_merge - db_update - db_write_record - - query - drupal_http_request - curl_init - passthru - proc_open - system( - sleep(", 
            "title": "Parameters"
        }, 
        {
            "location": "/policies/drutiny-drutiny/#large-drupal-files", 
            "text": "Name :  Drupal:largeFiles  Package :  drutiny/drutiny  Class :  \\Drutiny\\Audit\\Drupal\\LargeDrupalFiles  Large static assets should be optimized for online display or ideally be housed in other services, e.g.\nAmazon S3 (for files) or Youtube (for videos). Storing large files can consume storage volumes,\nincrease page load time and contribute to a higher than desired cache eviction rate. Varnish, on Acquia Cloud,\ndoes not cache files larger than 10 MB.  This policy identifies files managed by Drupal that are larger than .", 
            "title": "Large Drupal Files"
        }, 
        {
            "location": "/policies/drutiny-drutiny/#parameters_7", 
            "text": "Name  Type  Description  Default      max_size  integer  Report files larger than this value measured in bytes.  10000000", 
            "title": "Parameters"
        }, 
        {
            "location": "/policies/drutiny-drutiny/#module-updates", 
            "text": "Name :  Drupal:moduleUpdates  Package :  drutiny/drutiny  Class :  \\Drutiny\\Audit\\Drupal\\ModuleUpdateStatus  Throughout the lifetime of your site, the Drupal project and its community\ncontributed modules will release new versions that contain bug fixes, new features\nand security updates. It important to keep your site up to date and patched\nfrom known security vulnerabilities.  Note that upgrading modules, especially between major versions can introduce\nregressions into your site. While its important to maintain a continual update\nschedule for your site, regression testing changes is of equal importance.", 
            "title": "Module updates"
        }, 
        {
            "location": "/policies/drutiny-drutiny/#database-updates", 
            "text": "Name :  Drupal:updates  Package :  drutiny/drutiny  Class :  \\Drutiny\\Audit\\Drupal\\UpdateDBStatus  Updates to Drupal core or contrib modules sometimes include important database\nchanges which should be applied after the code updates have been deployed.", 
            "title": "Database updates"
        }, 
        {
            "location": "/policies/drutiny-drutiny/#always-error-test-policy", 
            "text": "Name :  Test:Error  Package :  drutiny/drutiny  Class :  \\Drutiny\\Audit\\AlwaysError  This policy should always error. Twee godard poutine knausgaard, street art\nkeytar readymade unicorn wayfarers vape mumblecore blue bottle. Portland\npitchfork air plant kale chips, craft beer meditation tumeric seitan umami\nvexillologist cred coloring book taxidermy actually.  Banjo narwhal la croix portland green juice lumbersexual biodiesel kombucha\nvegan umami aesthetic trust fund ramps. Art party +1 celiac everyday carry\nsucculents seitan franzen distillery venmo keytar cray mustache gastropub.\n8-bit seitan banh mi, vice chillwave viral synth vinyl +1. Mixtape mustache\npitchfork, meh tacos kitsch offal pop-up intelligentsia VHS air plant pork\nbelly. Thundercats microdosing taxidermy try-hard +1 ennui photo booth 8-bit.", 
            "title": "Always error test policy"
        }, 
        {
            "location": "/policies/drutiny-drutiny/#always-fail-test-policy", 
            "text": "Name :  Test:Fail  Package :  drutiny/drutiny  Class :  \\Drutiny\\Audit\\AlwaysFail  This policy should always fail. Twee godard poutine knausgaard, street art\nkeytar readymade unicorn wayfarers vape mumblecore blue bottle. Portland\npitchfork air plant kale chips, craft beer meditation tumeric seitan umami\nvexillologist cred coloring book taxidermy actually.  Banjo narwhal la croix portland green juice lumbersexual biodiesel kombucha\nvegan umami aesthetic trust fund ramps. Art party +1 celiac everyday carry\nsucculents seitan franzen distillery venmo keytar cray mustache gastropub.\n8-bit seitan banh mi, vice chillwave viral synth vinyl +1. Mixtape mustache\npitchfork, meh tacos kitsch offal pop-up intelligentsia VHS air plant pork\nbelly. Thundercats microdosing taxidermy try-hard +1 ennui photo booth 8-bit.", 
            "title": "Always fail test policy"
        }, 
        {
            "location": "/policies/drutiny-drutiny/#not-applicable-test-policy", 
            "text": "Name :  Test:NA  Package :  drutiny/drutiny  Class :  \\Drutiny\\Audit\\AlwaysNA  This policy should always be not applicable. Twee godard poutine knausgaard,\nkeytar readymade unicorn wayfarers vape mumblecore blue bottle. Portland\npitchfork air plant kale chips, craft beer meditation tumeric seitan umami\nvexillologist cred coloring book taxidermy actually.  Banjo narwhal la croix portland green juice lumbersexual biodiesel kombucha\nvegan umami aesthetic trust fund ramps. Art party +1 celiac everyday carry\nsucculents seitan franzen distillery venmo keytar cray mustache gastropub.\n8-bit seitan banh mi, vice chillwave viral synth vinyl +1. Mixtape mustache\npitchfork, meh tacos kitsch offal pop-up intelligentsia VHS air plant pork\nbelly. Thundercats microdosing taxidermy try-hard +1 ennui photo booth 8-bit.", 
            "title": "Not applicable test policy"
        }, 
        {
            "location": "/policies/drutiny-drutiny/#always-notice-test-policy", 
            "text": "Name :  Test:Notice  Package :  drutiny/drutiny  Class :  \\Drutiny\\Audit\\AlwaysNotice  This policy should always be a notice. Twee godard poutine knausgaard, street\nkeytar readymade unicorn wayfarers vape mumblecore blue bottle. Portland\npitchfork air plant kale chips, craft beer meditation tumeric seitan umami\nvexillologist cred coloring book taxidermy actually.  Banjo narwhal la croix portland green juice lumbersexual biodiesel kombucha\nvegan umami aesthetic trust fund ramps. Art party +1 celiac everyday carry\nsucculents seitan franzen distillery venmo keytar cray mustache gastropub.\n8-bit seitan banh mi, vice chillwave viral synth vinyl +1. Mixtape mustache\npitchfork, meh tacos kitsch offal pop-up intelligentsia VHS air plant pork\nbelly. Thundercats microdosing taxidermy try-hard +1 ennui photo booth 8-bit.", 
            "title": "Always notice test policy"
        }, 
        {
            "location": "/policies/drutiny-drutiny/#always-pass-test-policy", 
            "text": "Name :  Test:Pass  Package :  drutiny/drutiny  Class :  \\Drutiny\\Audit\\AlwaysPass  This policy should always pass. Twee godard poutine knausgaard, street art\nkeytar readymade unicorn wayfarers vape mumblecore blue bottle. Portland\npitchfork air plant kale chips, craft beer meditation tumeric seitan umami\nvexillologist cred coloring book taxidermy actually.  Banjo narwhal la croix portland green juice lumbersexual biodiesel kombucha\nvegan umami aesthetic trust fund ramps. Art party +1 celiac everyday carry\nsucculents seitan franzen distillery venmo keytar cray mustache gastropub.\n8-bit seitan banh mi, vice chillwave viral synth vinyl +1. Mixtape mustache\npitchfork, meh tacos kitsch offal pop-up intelligentsia VHS air plant pork\nbelly. Thundercats microdosing taxidermy try-hard +1 ennui photo booth 8-bit.", 
            "title": "Always pass test policy"
        }, 
        {
            "location": "/policies/drutiny-drutiny/#always-pass-dependant-test-policy", 
            "text": "Name :  Test:PassDependant  Package :  drutiny/drutiny  Class :  \\Drutiny\\Audit\\AlwaysPass  This policy should always pass. Twee godard poutine knausgaard, street art\nkeytar readymade unicorn wayfarers vape mumblecore blue bottle. Portland\npitchfork air plant kale chips, craft beer meditation tumeric seitan umami\nvexillologist cred coloring book taxidermy actually.  Banjo narwhal la croix portland green juice lumbersexual biodiesel kombucha\nvegan umami aesthetic trust fund ramps. Art party +1 celiac everyday carry\nsucculents seitan franzen distillery venmo keytar cray mustache gastropub.\n8-bit seitan banh mi, vice chillwave viral synth vinyl +1. Mixtape mustache\npitchfork, meh tacos kitsch offal pop-up intelligentsia VHS air plant pork\nbelly. Thundercats microdosing taxidermy try-hard +1 ennui photo booth 8-bit.", 
            "title": "Always pass dependant test policy"
        }, 
        {
            "location": "/policies/drutiny-drutiny/#always-warn-test-policy", 
            "text": "Name :  Test:Warning  Package :  drutiny/drutiny  Class :  \\Drutiny\\Audit\\AlwaysWarn  This policy should always issue a warning. Twee godard poutine knausgaard,\nkeytar readymade unicorn wayfarers vape mumblecore blue bottle. Portland\npitchfork air plant kale chips, craft beer meditation tumeric seitan umami\nvexillologist cred coloring book taxidermy actually.  Banjo narwhal la croix portland green juice lumbersexual biodiesel kombucha\nvegan umami aesthetic trust fund ramps. Art party +1 celiac everyday carry\nsucculents seitan franzen distillery venmo keytar cray mustache gastropub.\n8-bit seitan banh mi, vice chillwave viral synth vinyl +1. Mixtape mustache\npitchfork, meh tacos kitsch offal pop-up intelligentsia VHS air plant pork\nbelly. Thundercats microdosing taxidermy try-hard +1 ennui photo booth 8-bit.", 
            "title": "Always warn test policy"
        }, 
        {
            "location": "/policies/drutiny-drutiny/#drupal-theme-directory-size", 
            "text": "Name :  fs:DrupalThemeDirectory  Package :  drutiny/drutiny  Class :  Drutiny\\Audit\\Filesystem\\FsSize  Large theme directories can be indicative of best practice violations:\n  * Source files in site artifact. e.g. node_modules\n  * Media assets unsuitable for web delivery", 
            "title": "Drupal Theme Directory Size"
        }, 
        {
            "location": "/policies/drutiny-drutiny/#parameters_8", 
            "text": "Name  Type  Description  Default      max_size  integer  The maximum size in MegaBytes a directory should be.  50    path  string  The path of the directory to check for size.  '%root/%themes'", 
            "title": "Parameters"
        }, 
        {
            "location": "/policies/drutiny-drutiny/#sensitive-public-files", 
            "text": "Name :  fs:SensitivePublicFiles  Package :  drutiny/drutiny  Class :  Drutiny\\Audit\\Filesystem\\SensitivePublicFiles  Certain file extensions should never be in public files for security reasons.", 
            "title": "Sensitive public files"
        }, 
        {
            "location": "/policies/drutiny-drutiny/#parameters_9", 
            "text": "Name  Type  Description  Default      extensions  string  The sensitive file extensions to look for.  'php,sh,py,sql,bz2,gz,tar,tgz,zip'", 
            "title": "Parameters"
        }, 
        {
            "location": "/policies/drutiny-drutiny/#large-public-files", 
            "text": "Name :  fs:largeFiles  Package :  drutiny/drutiny  Class :  Drutiny\\Audit\\Filesystem\\LargeFiles  Large static assets should ideally be housed in other services, e.g.\nAmazon S3 (for files) or Youtube (for videos).", 
            "title": "Large public files"
        }, 
        {
            "location": "/policies/drutiny-drutiny/#parameters_10", 
            "text": "Name  Type  Description  Default      max_size  integer  Report files larger than this value measured in megabytes.  50", 
            "title": "Parameters"
        }, 
        {
            "location": "/audits/DrutinyAcquiaAudit/", 
            "text": "AcsfDeployWorkspaceCleaned\n\n\nEnsure the ACSF deploy workspace is clear. This can bloat ephemeral storage.\n\n\nClass: \nDrutiny\\Acquia\\Audit\\AcsfDeployWorkspaceCleaned\n\nExtends: \nDrutiny\\Audit\n\nPackage: \ndrutiny/acquia\n\n\nThis class can \nremediate\n failed audits.\n\n\nPolicies\n\n\nThese are the policies that use this class:\n\n\n\n\n\n\n\n\nName\n\n\nTitle\n\n\n\n\n\n\n\n\n\n\nAcquia:CheckSiteFactoryWorkspace\n\n\nACSF Deployment Workspace\n\n\n\n\n\n\n\n\nSource\n\n\n  public function audit(Sandbox $sandbox) {\n\n    $output = $sandbox-\nexec('find /mnt/tmp/repo_* -maxdepth 1 -mindepth 1 -ctime +1 -type d');\n    $lines = array_filter(explode(PHP_EOL, $output));\n\n    $sandbox-\nsetParameter('directories', $lines);\n\n    return empty($lines);\n  }\n\n\n\n\n\nAppInfo\n\n\nEnsure an environment has custom domains set.\n\n\nClass: \nDrutiny\\Acquia\\Audit\\AppInfo\n\nExtends: \nDrutiny\\Audit\n\nPackage: \ndrutiny/acquia\n\n\nPolicies\n\n\nThese are the policies that use this class:\n\n\n\n\n\n\n\n\nName\n\n\nTitle\n\n\n\n\n\n\n\n\n\n\nAcquia:AppInfo\n\n\nAcquia Application Information\n\n\n\n\n\n\n\n\nSource\n\n\n  public function audit(Sandbox $sandbox) {\n\n    $options = $sandbox-\ngetTarget()-\ngetOptions();\n    $app = CloudApiDrushAdaptor::findApplication($options['ac-realm'], $options['ac-site']);\n    $sandbox-\nsetParameter('app', $app);\n\n    return Audit::NOTICE;\n  }\n\n\n\n\n\nCustomDomains\n\n\nEnsure an environment has custom domains set.\n\n\nClass: \nDrutiny\\Acquia\\Audit\\CustomDomains\n\nExtends: \nDrutiny\\Audit\n\nPackage: \ndrutiny/acquia\n\n\nPolicies\n\n\nThese are the policies that use this class:\n\n\n\n\n\n\n\n\nName\n\n\nTitle\n\n\n\n\n\n\n\n\n\n\nAcquia:CustomDomains\n\n\nCustom Domains Registered\n\n\n\n\n\n\n\n\nSource\n\n\n  public function audit(Sandbox $sandbox) {\n\n    $environment = CloudApiDrushAdaptor::getEnvironment($sandbox-\ngetTarget());\n\n    $domains = array_filter($environment['domains'], function ($domain) {\n      // Do not include ELB domains or Acquia default domains.\n      return !(strpos($domain, 'acquia-sites.com') || strpos($domain, 'elb.amazonaws.com'));\n    });\n\n    if (empty($domains)) {\n      return FALSE;\n    }\n\n    $sandbox-\nsetParameter('domains', array_values($domains));\n\n    return TRUE;\n  }\n\n\n\n\n\nEnvironmentAnalysis\n\n\nCheck to ensure Production Mode is enabled on Acquia Cloud.\n\n\nClass: \nDrutiny\\Acquia\\Audit\\EnvironmentAnalysis\n\nExtends: \nDrutiny\\Audit\\AbstractAnalysis\n\nPackage: \ndrutiny/acquia\n\n\nPolicies\n\n\nThese are the policies that use this class:\n\n\n\n\n\n\n\n\nName\n\n\nTitle\n\n\n\n\n\n\n\n\n\n\nAcquia:ProductionMode\n\n\nAcquia Production Mode\n\n\n\n\n\n\n\n\nSource\n\n\n  final public function audit(Sandbox $sandbox)\n  {\n    $this-\ngather($sandbox);\n    $expressionLanguage = new ExpressionLanguage();\n    $variables  = $sandbox-\ngetParameterTokens();\n    $sandbox-\nlogger()-\ninfo(__CLASS__ . ': ' . Yaml::dump($variables));\n\n    $expression = $sandbox-\ngetParameter('not_applicable', 'false');\n    $sandbox-\nlogger()-\ninfo(__CLASS__ . ': ' . $expression);\n    if ($expressionLanguage-\nevaluate($expression, $variables)) {\n      return self::NOT_APPLICABLE;\n    }\n\n    $expression = $sandbox-\ngetParameter('expression', 'true');\n    $sandbox-\nlogger()-\ninfo(__CLASS__ . ': ' . $expression);\n    return $expressionLanguage-\nevaluate($expression, $variables);\n  }\n\n\n\n\n\nFilesPerDirectory\n\n\nClass: \nDrutiny\\Acquia\\Audit\\FilesPerDirectory\n\nExtends: \nDrutiny\\Audit\n\nPackage: \ndrutiny/acquia\n\n\nPolicies\n\n\nThese are the policies that use this class:\n\n\n\n\n\n\n\n\nName\n\n\nTitle\n\n\n\n\n\n\n\n\n\n\nAcquia:FilesPerDirectory\n\n\nLess than 2,500 files per directory\n\n\n\n\n\n\n\n\nParameters\n\n\n\n\n\n\n\n\nName\n\n\nType\n\n\nDescription\n\n\nDefault\n\n\n\n\n\n\n\n\n\n\nlimit\n\n\ninteger\n\n\nThe limit of files per directory.\n\n\n2500\n\n\n\n\n\n\n\n\nTokens\n\n\n\n\n\n\n\n\nName\n\n\nType\n\n\nDescription\n\n\nDefault\n\n\n\n\n\n\n\n\n\n\nlimit\n\n\ninteger\n\n\nThe limit of files per directory.\n\n\n2500\n\n\n\n\n\n\ndirectories\n\n\narray\n\n\nA multidimensional array containing directory data breaching the limit.\n\n\n{  }\n\n\n\n\n\n\n\n\nSource\n\n\n  public function audit(Sandbox $sandbox) {\n    // Build a count of files in every directory in the public filesystem.\n    $stat = $sandbox-\ndrush(['format' =\n 'json'])-\nstatus();\n    $files = implode('/', [$stat['root'], $stat['files']]);\n    $limit = $sandbox-\ngetParameter('limit');\n\n    // Note the trailing slash at the end of $files to ensure find works over\n    // symlinks.\n    $command = \nfind $files/ -type f -exec dirname {} \\; | uniq -c | awk '\\$1 \n $limit'\n;\n\n    // Execute and clean the output into usable data.\n    $output = $sandbox-\nexec($command);\n    $lines = array_filter(explode(PHP_EOL, $output));\n    $directories = [];\n    foreach ($lines as $line) {\n      list($count, $directory) = explode(' ', trim($line));\n      $directories[] = [\n        'directory' =\n str_replace($stat['root'] . '/', '', $directory),\n        'file_count' =\n $count,\n      ];\n    }\n\n    // No limits breached, return as pass.\n    if (empty($directories)) {\n      return TRUE;\n    }\n\n    $sandbox-\nsetParameter('directories', $directories);\n\n    return FALSE;\n  }\n\n\n\n\n\nSearchDB\n\n\nEnsure there is no use of search indexes in the database.\n\n\nClass: \nDrutiny\\Acquia\\Audit\\SearchDB\n\nExtends: \nDrutiny\\Plugin\\Drupal7\\Audit\\ModuleDisabled\n\nPackage: \ndrutiny/acquia\n\n\nThis class can \nremediate\n failed audits.\n\n\nPolicies\n\n\nThese are the policies that use this class:\n\n\n\n\n\n\n\n\nName\n\n\nTitle\n\n\n\n\n\n\n\n\n\n\nAcquia:Drupal7:NoDbSearch\n\n\nNo Database Search Indexes for Drupal 7\n\n\n\n\n\n\n\n\nParameters\n\n\n\n\n\n\n\n\nName\n\n\nType\n\n\nDescription\n\n\nDefault\n\n\n\n\n\n\n\n\n\n\nmodule\n\n\nstring\n\n\nThe module to check is enabled.\n\n\nsearch_api_db\n\n\n\n\n\n\n\n\nTokens\n\n\n\n\n\n\n\n\nName\n\n\nType\n\n\nDescription\n\n\nDefault\n\n\n\n\n\n\n\n\n\n\nmodule\n\n\nstring\n\n\nThe module to check is enabled.\n\n\nsearch_api_db\n\n\n\n\n\n\nindexes\n\n\narray\n\n\nAn array of index names found in the database. Only available on failure.\n\n\nnull\n\n\n\n\n\n\nitems\n\n\ninteger\n\n\nThe number of indexed items in the database. Only available on failure.\n\n\nnull\n\n\n\n\n\n\n\n\nSource\n\n\n  public function audit(Sandbox $sandbox) {\n\n    $sandbox-\nsetParameter('module', 'search_api_db');\n    if (parent::audit($sandbox)) {\n      return TRUE;\n    }\n\n    // Find out if there are active indexes using the db service class.\n    $output = $sandbox-\ndrush()-\nsqlq(\nSELECT COUNT(i.machine_name) as count FROM {search_api_index} i LEFT JOIN {search_api_server} s ON i.server = s.machine_name WHERE i.status \n 0 AND s.class = 'search_api_db_service';\n);\n    if (empty($output)) {\n      return TRUE;\n    }\n    elseif (count($output) == 1) {\n      $number_of_db_indexes = (int) $output[0];\n    }\n    else {\n      $number_of_db_indexes = (int) $output[1];\n    }\n\n    $sandbox-\nsetParameter('indexes', $number_of_db_indexes);\n\n    $output = $sandbox-\ndrush()-\nsqlq('SELECT COUNT(item_id) FROM {search_api_db_default_node_index};');\n\n    $sandbox-\nsetParameter('items', $output);\n\n    return FALSE;\n  }", 
            "title": "Acquia "
        }, 
        {
            "location": "/audits/DrutinyAcquiaAudit/#acsfdeployworkspacecleaned", 
            "text": "Ensure the ACSF deploy workspace is clear. This can bloat ephemeral storage.  Class:  Drutiny\\Acquia\\Audit\\AcsfDeployWorkspaceCleaned \nExtends:  Drutiny\\Audit \nPackage:  drutiny/acquia  This class can  remediate  failed audits.", 
            "title": "AcsfDeployWorkspaceCleaned"
        }, 
        {
            "location": "/audits/DrutinyAcquiaAudit/#policies", 
            "text": "These are the policies that use this class:     Name  Title      Acquia:CheckSiteFactoryWorkspace  ACSF Deployment Workspace", 
            "title": "Policies"
        }, 
        {
            "location": "/audits/DrutinyAcquiaAudit/#source", 
            "text": "public function audit(Sandbox $sandbox) {\n\n    $output = $sandbox- exec('find /mnt/tmp/repo_* -maxdepth 1 -mindepth 1 -ctime +1 -type d');\n    $lines = array_filter(explode(PHP_EOL, $output));\n\n    $sandbox- setParameter('directories', $lines);\n\n    return empty($lines);\n  }", 
            "title": "Source"
        }, 
        {
            "location": "/audits/DrutinyAcquiaAudit/#appinfo", 
            "text": "Ensure an environment has custom domains set.  Class:  Drutiny\\Acquia\\Audit\\AppInfo \nExtends:  Drutiny\\Audit \nPackage:  drutiny/acquia", 
            "title": "AppInfo"
        }, 
        {
            "location": "/audits/DrutinyAcquiaAudit/#policies_1", 
            "text": "These are the policies that use this class:     Name  Title      Acquia:AppInfo  Acquia Application Information", 
            "title": "Policies"
        }, 
        {
            "location": "/audits/DrutinyAcquiaAudit/#source_1", 
            "text": "public function audit(Sandbox $sandbox) {\n\n    $options = $sandbox- getTarget()- getOptions();\n    $app = CloudApiDrushAdaptor::findApplication($options['ac-realm'], $options['ac-site']);\n    $sandbox- setParameter('app', $app);\n\n    return Audit::NOTICE;\n  }", 
            "title": "Source"
        }, 
        {
            "location": "/audits/DrutinyAcquiaAudit/#customdomains", 
            "text": "Ensure an environment has custom domains set.  Class:  Drutiny\\Acquia\\Audit\\CustomDomains \nExtends:  Drutiny\\Audit \nPackage:  drutiny/acquia", 
            "title": "CustomDomains"
        }, 
        {
            "location": "/audits/DrutinyAcquiaAudit/#policies_2", 
            "text": "These are the policies that use this class:     Name  Title      Acquia:CustomDomains  Custom Domains Registered", 
            "title": "Policies"
        }, 
        {
            "location": "/audits/DrutinyAcquiaAudit/#source_2", 
            "text": "public function audit(Sandbox $sandbox) {\n\n    $environment = CloudApiDrushAdaptor::getEnvironment($sandbox- getTarget());\n\n    $domains = array_filter($environment['domains'], function ($domain) {\n      // Do not include ELB domains or Acquia default domains.\n      return !(strpos($domain, 'acquia-sites.com') || strpos($domain, 'elb.amazonaws.com'));\n    });\n\n    if (empty($domains)) {\n      return FALSE;\n    }\n\n    $sandbox- setParameter('domains', array_values($domains));\n\n    return TRUE;\n  }", 
            "title": "Source"
        }, 
        {
            "location": "/audits/DrutinyAcquiaAudit/#environmentanalysis", 
            "text": "Check to ensure Production Mode is enabled on Acquia Cloud.  Class:  Drutiny\\Acquia\\Audit\\EnvironmentAnalysis \nExtends:  Drutiny\\Audit\\AbstractAnalysis \nPackage:  drutiny/acquia", 
            "title": "EnvironmentAnalysis"
        }, 
        {
            "location": "/audits/DrutinyAcquiaAudit/#policies_3", 
            "text": "These are the policies that use this class:     Name  Title      Acquia:ProductionMode  Acquia Production Mode", 
            "title": "Policies"
        }, 
        {
            "location": "/audits/DrutinyAcquiaAudit/#source_3", 
            "text": "final public function audit(Sandbox $sandbox)\n  {\n    $this- gather($sandbox);\n    $expressionLanguage = new ExpressionLanguage();\n    $variables  = $sandbox- getParameterTokens();\n    $sandbox- logger()- info(__CLASS__ . ': ' . Yaml::dump($variables));\n\n    $expression = $sandbox- getParameter('not_applicable', 'false');\n    $sandbox- logger()- info(__CLASS__ . ': ' . $expression);\n    if ($expressionLanguage- evaluate($expression, $variables)) {\n      return self::NOT_APPLICABLE;\n    }\n\n    $expression = $sandbox- getParameter('expression', 'true');\n    $sandbox- logger()- info(__CLASS__ . ': ' . $expression);\n    return $expressionLanguage- evaluate($expression, $variables);\n  }", 
            "title": "Source"
        }, 
        {
            "location": "/audits/DrutinyAcquiaAudit/#filesperdirectory", 
            "text": "Class:  Drutiny\\Acquia\\Audit\\FilesPerDirectory \nExtends:  Drutiny\\Audit \nPackage:  drutiny/acquia", 
            "title": "FilesPerDirectory"
        }, 
        {
            "location": "/audits/DrutinyAcquiaAudit/#policies_4", 
            "text": "These are the policies that use this class:     Name  Title      Acquia:FilesPerDirectory  Less than 2,500 files per directory", 
            "title": "Policies"
        }, 
        {
            "location": "/audits/DrutinyAcquiaAudit/#parameters", 
            "text": "Name  Type  Description  Default      limit  integer  The limit of files per directory.  2500", 
            "title": "Parameters"
        }, 
        {
            "location": "/audits/DrutinyAcquiaAudit/#tokens", 
            "text": "Name  Type  Description  Default      limit  integer  The limit of files per directory.  2500    directories  array  A multidimensional array containing directory data breaching the limit.  {  }", 
            "title": "Tokens"
        }, 
        {
            "location": "/audits/DrutinyAcquiaAudit/#source_4", 
            "text": "public function audit(Sandbox $sandbox) {\n    // Build a count of files in every directory in the public filesystem.\n    $stat = $sandbox- drush(['format' =  'json'])- status();\n    $files = implode('/', [$stat['root'], $stat['files']]);\n    $limit = $sandbox- getParameter('limit');\n\n    // Note the trailing slash at the end of $files to ensure find works over\n    // symlinks.\n    $command =  find $files/ -type f -exec dirname {} \\; | uniq -c | awk '\\$1   $limit' ;\n\n    // Execute and clean the output into usable data.\n    $output = $sandbox- exec($command);\n    $lines = array_filter(explode(PHP_EOL, $output));\n    $directories = [];\n    foreach ($lines as $line) {\n      list($count, $directory) = explode(' ', trim($line));\n      $directories[] = [\n        'directory' =  str_replace($stat['root'] . '/', '', $directory),\n        'file_count' =  $count,\n      ];\n    }\n\n    // No limits breached, return as pass.\n    if (empty($directories)) {\n      return TRUE;\n    }\n\n    $sandbox- setParameter('directories', $directories);\n\n    return FALSE;\n  }", 
            "title": "Source"
        }, 
        {
            "location": "/audits/DrutinyAcquiaAudit/#searchdb", 
            "text": "Ensure there is no use of search indexes in the database.  Class:  Drutiny\\Acquia\\Audit\\SearchDB \nExtends:  Drutiny\\Plugin\\Drupal7\\Audit\\ModuleDisabled \nPackage:  drutiny/acquia  This class can  remediate  failed audits.", 
            "title": "SearchDB"
        }, 
        {
            "location": "/audits/DrutinyAcquiaAudit/#policies_5", 
            "text": "These are the policies that use this class:     Name  Title      Acquia:Drupal7:NoDbSearch  No Database Search Indexes for Drupal 7", 
            "title": "Policies"
        }, 
        {
            "location": "/audits/DrutinyAcquiaAudit/#parameters_1", 
            "text": "Name  Type  Description  Default      module  string  The module to check is enabled.  search_api_db", 
            "title": "Parameters"
        }, 
        {
            "location": "/audits/DrutinyAcquiaAudit/#tokens_1", 
            "text": "Name  Type  Description  Default      module  string  The module to check is enabled.  search_api_db    indexes  array  An array of index names found in the database. Only available on failure.  null    items  integer  The number of indexed items in the database. Only available on failure.  null", 
            "title": "Tokens"
        }, 
        {
            "location": "/audits/DrutinyAcquiaAudit/#source_5", 
            "text": "public function audit(Sandbox $sandbox) {\n\n    $sandbox- setParameter('module', 'search_api_db');\n    if (parent::audit($sandbox)) {\n      return TRUE;\n    }\n\n    // Find out if there are active indexes using the db service class.\n    $output = $sandbox- drush()- sqlq( SELECT COUNT(i.machine_name) as count FROM {search_api_index} i LEFT JOIN {search_api_server} s ON i.server = s.machine_name WHERE i.status   0 AND s.class = 'search_api_db_service'; );\n    if (empty($output)) {\n      return TRUE;\n    }\n    elseif (count($output) == 1) {\n      $number_of_db_indexes = (int) $output[0];\n    }\n    else {\n      $number_of_db_indexes = (int) $output[1];\n    }\n\n    $sandbox- setParameter('indexes', $number_of_db_indexes);\n\n    $output = $sandbox- drush()- sqlq('SELECT COUNT(item_id) FROM {search_api_db_default_node_index};');\n\n    $sandbox- setParameter('items', $output);\n\n    return FALSE;\n  }", 
            "title": "Source"
        }, 
        {
            "location": "/audits/DrutinyAudit/", 
            "text": "AbstractAnalysis\n\n\nAudit gathered data.\n\n\nClass: \nDrutiny\\Audit\\AbstractAnalysis\n\nExtends: \nDrutiny\\Audit\n\nPackage: \ndrutiny/drutiny\n\n\nNOTE\n: This Audit is \nabstract\n and cannot be used directly by a policy.\n\n\nParameters\n\n\n\n\n\n\n\n\nName\n\n\nType\n\n\nDescription\n\n\nDefault\n\n\n\n\n\n\n\n\n\n\nexpression\n\n\nstring\n\n\nThe expression language to evaludate. See https://symfony.com/doc/current/components/expression_language/syntax.html\n\n\n'true'\n\n\n\n\n\n\nnot_applicable\n\n\nstring\n\n\nThe expression language to evaludate if the analysis is not applicable. See https://symfony.com/doc/current/components/expression_language/syntax.html\n\n\n'false'\n\n\n\n\n\n\n\n\nTokens\n\n\n\n\n\n\n\n\nName\n\n\nType\n\n\nDescription\n\n\nDefault\n\n\n\n\n\n\n\n\n\n\nexpression\n\n\nstring\n\n\nThe expression language to evaludate. See https://symfony.com/doc/current/components/expression_language/syntax.html\n\n\n'true'\n\n\n\n\n\n\nnot_applicable\n\n\nstring\n\n\nThe expression language to evaludate if the analysis is not applicable. See https://symfony.com/doc/current/components/expression_language/syntax.html\n\n\n'false'\n\n\n\n\n\n\n\n\nSource\n\n\n  final public function audit(Sandbox $sandbox)\n  {\n    $this-\ngather($sandbox);\n    $expressionLanguage = new ExpressionLanguage();\n    $variables  = $sandbox-\ngetParameterTokens();\n    $sandbox-\nlogger()-\ninfo(__CLASS__ . ': ' . Yaml::dump($variables));\n\n    $expression = $sandbox-\ngetParameter('not_applicable', 'false');\n    $sandbox-\nlogger()-\ninfo(__CLASS__ . ': ' . $expression);\n    if ($expressionLanguage-\nevaluate($expression, $variables)) {\n      return self::NOT_APPLICABLE;\n    }\n\n    $expression = $sandbox-\ngetParameter('expression', 'true');\n    $sandbox-\nlogger()-\ninfo(__CLASS__ . ': ' . $expression);\n    return $expressionLanguage-\nevaluate($expression, $variables);\n  }\n\n\n\n\n\nAbstractComparison\n\n\nComparatively evaluate two values.\n\n\nClass: \nDrutiny\\Audit\\AbstractComparison\n\nExtends: \nDrutiny\\Audit\n\nPackage: \ndrutiny/drutiny\n\n\nNOTE\n: This Audit is \nabstract\n and cannot be used directly by a policy.\n\n\nAlwaysError\n\n\nAn audit that always fails.\n\n\nClass: \nDrutiny\\Audit\\AlwaysError\n\nExtends: \nDrutiny\\Audit\n\nPackage: \ndrutiny/drutiny\n\n\nPolicies\n\n\nThese are the policies that use this class:\n\n\n\n\n\n\n\n\nName\n\n\nTitle\n\n\n\n\n\n\n\n\n\n\nTest:Error\n\n\nAlways error test policy\n\n\n\n\n\n\n\n\nSource\n\n\n  public function audit(Sandbox $sandbox)\n  {\n    throw new \\Exception(\nThis audit will always throw an exception as an error.\n);\n  }\n\n\n\n\n\nAlwaysFail\n\n\nAn audit that always succeeds.\n\n\nClass: \nDrutiny\\Audit\\AlwaysFail\n\nExtends: \nDrutiny\\Audit\n\nPackage: \ndrutiny/drutiny\n\n\nPolicies\n\n\nThese are the policies that use this class:\n\n\n\n\n\n\n\n\nName\n\n\nTitle\n\n\n\n\n\n\n\n\n\n\nTest:Fail\n\n\nAlways fail test policy\n\n\n\n\n\n\n\n\nSource\n\n\n  public function audit(Sandbox $sandbox)\n  {\n    return FALSE;\n  }\n\n\n\n\n\nAlwaysNA\n\n\nAn audit that always not applicable.\n\n\nClass: \nDrutiny\\Audit\\AlwaysNA\n\nExtends: \nDrutiny\\Audit\n\nPackage: \ndrutiny/drutiny\n\n\nPolicies\n\n\nThese are the policies that use this class:\n\n\n\n\n\n\n\n\nName\n\n\nTitle\n\n\n\n\n\n\n\n\n\n\nTest:NA\n\n\nNot applicable test policy\n\n\n\n\n\n\n\n\nSource\n\n\n  public function audit(Sandbox $sandbox)\n  {\n    // This should never trigger.\n    return Audit::FAIL;\n  }\n\n\n\n\n\nAlwaysNotice\n\n\nAn audit that always succeeds.\n\n\nClass: \nDrutiny\\Audit\\AlwaysNotice\n\nExtends: \nDrutiny\\Audit\n\nPackage: \ndrutiny/drutiny\n\n\nPolicies\n\n\nThese are the policies that use this class:\n\n\n\n\n\n\n\n\nName\n\n\nTitle\n\n\n\n\n\n\n\n\n\n\nTest:Notice\n\n\nAlways notice test policy\n\n\n\n\n\n\n\n\nSource\n\n\n  public function audit(Sandbox $sandbox)\n  {\n    return Audit::NOTICE;\n  }\n\n\n\n\n\nAlwaysPass\n\n\nAn audit that always succeeds.\n\n\nClass: \nDrutiny\\Audit\\AlwaysPass\n\nExtends: \nDrutiny\\Audit\n\nPackage: \ndrutiny/drutiny\n\n\nPolicies\n\n\nThese are the policies that use this class:\n\n\n\n\n\n\n\n\nName\n\n\nTitle\n\n\n\n\n\n\n\n\n\n\nTest:PassDependant\n\n\nAlways pass dependant test policy\n\n\n\n\n\n\nTest:Pass\n\n\nAlways pass test policy\n\n\n\n\n\n\n\n\nSource\n\n\n  public function audit(Sandbox $sandbox)\n  {\n    return TRUE;\n  }\n\n\n\n\n\nAlwaysWarn\n\n\nAn audit that always succeeds.\n\n\nClass: \nDrutiny\\Audit\\AlwaysWarn\n\nExtends: \nDrutiny\\Audit\n\nPackage: \ndrutiny/drutiny\n\n\nPolicies\n\n\nThese are the policies that use this class:\n\n\n\n\n\n\n\n\nName\n\n\nTitle\n\n\n\n\n\n\n\n\n\n\nTest:Warning\n\n\nAlways warn test policy\n\n\n\n\n\n\n\n\nSource\n\n\n  public function audit(Sandbox $sandbox)\n  {\n    return Audit::WARNING;\n  }", 
            "title": "General"
        }, 
        {
            "location": "/audits/DrutinyAudit/#abstractanalysis", 
            "text": "Audit gathered data.  Class:  Drutiny\\Audit\\AbstractAnalysis \nExtends:  Drutiny\\Audit \nPackage:  drutiny/drutiny  NOTE : This Audit is  abstract  and cannot be used directly by a policy.", 
            "title": "AbstractAnalysis"
        }, 
        {
            "location": "/audits/DrutinyAudit/#parameters", 
            "text": "Name  Type  Description  Default      expression  string  The expression language to evaludate. See https://symfony.com/doc/current/components/expression_language/syntax.html  'true'    not_applicable  string  The expression language to evaludate if the analysis is not applicable. See https://symfony.com/doc/current/components/expression_language/syntax.html  'false'", 
            "title": "Parameters"
        }, 
        {
            "location": "/audits/DrutinyAudit/#tokens", 
            "text": "Name  Type  Description  Default      expression  string  The expression language to evaludate. See https://symfony.com/doc/current/components/expression_language/syntax.html  'true'    not_applicable  string  The expression language to evaludate if the analysis is not applicable. See https://symfony.com/doc/current/components/expression_language/syntax.html  'false'", 
            "title": "Tokens"
        }, 
        {
            "location": "/audits/DrutinyAudit/#source", 
            "text": "final public function audit(Sandbox $sandbox)\n  {\n    $this- gather($sandbox);\n    $expressionLanguage = new ExpressionLanguage();\n    $variables  = $sandbox- getParameterTokens();\n    $sandbox- logger()- info(__CLASS__ . ': ' . Yaml::dump($variables));\n\n    $expression = $sandbox- getParameter('not_applicable', 'false');\n    $sandbox- logger()- info(__CLASS__ . ': ' . $expression);\n    if ($expressionLanguage- evaluate($expression, $variables)) {\n      return self::NOT_APPLICABLE;\n    }\n\n    $expression = $sandbox- getParameter('expression', 'true');\n    $sandbox- logger()- info(__CLASS__ . ': ' . $expression);\n    return $expressionLanguage- evaluate($expression, $variables);\n  }", 
            "title": "Source"
        }, 
        {
            "location": "/audits/DrutinyAudit/#abstractcomparison", 
            "text": "Comparatively evaluate two values.  Class:  Drutiny\\Audit\\AbstractComparison \nExtends:  Drutiny\\Audit \nPackage:  drutiny/drutiny  NOTE : This Audit is  abstract  and cannot be used directly by a policy.", 
            "title": "AbstractComparison"
        }, 
        {
            "location": "/audits/DrutinyAudit/#alwayserror", 
            "text": "An audit that always fails.  Class:  Drutiny\\Audit\\AlwaysError \nExtends:  Drutiny\\Audit \nPackage:  drutiny/drutiny", 
            "title": "AlwaysError"
        }, 
        {
            "location": "/audits/DrutinyAudit/#policies", 
            "text": "These are the policies that use this class:     Name  Title      Test:Error  Always error test policy", 
            "title": "Policies"
        }, 
        {
            "location": "/audits/DrutinyAudit/#source_1", 
            "text": "public function audit(Sandbox $sandbox)\n  {\n    throw new \\Exception( This audit will always throw an exception as an error. );\n  }", 
            "title": "Source"
        }, 
        {
            "location": "/audits/DrutinyAudit/#alwaysfail", 
            "text": "An audit that always succeeds.  Class:  Drutiny\\Audit\\AlwaysFail \nExtends:  Drutiny\\Audit \nPackage:  drutiny/drutiny", 
            "title": "AlwaysFail"
        }, 
        {
            "location": "/audits/DrutinyAudit/#policies_1", 
            "text": "These are the policies that use this class:     Name  Title      Test:Fail  Always fail test policy", 
            "title": "Policies"
        }, 
        {
            "location": "/audits/DrutinyAudit/#source_2", 
            "text": "public function audit(Sandbox $sandbox)\n  {\n    return FALSE;\n  }", 
            "title": "Source"
        }, 
        {
            "location": "/audits/DrutinyAudit/#alwaysna", 
            "text": "An audit that always not applicable.  Class:  Drutiny\\Audit\\AlwaysNA \nExtends:  Drutiny\\Audit \nPackage:  drutiny/drutiny", 
            "title": "AlwaysNA"
        }, 
        {
            "location": "/audits/DrutinyAudit/#policies_2", 
            "text": "These are the policies that use this class:     Name  Title      Test:NA  Not applicable test policy", 
            "title": "Policies"
        }, 
        {
            "location": "/audits/DrutinyAudit/#source_3", 
            "text": "public function audit(Sandbox $sandbox)\n  {\n    // This should never trigger.\n    return Audit::FAIL;\n  }", 
            "title": "Source"
        }, 
        {
            "location": "/audits/DrutinyAudit/#alwaysnotice", 
            "text": "An audit that always succeeds.  Class:  Drutiny\\Audit\\AlwaysNotice \nExtends:  Drutiny\\Audit \nPackage:  drutiny/drutiny", 
            "title": "AlwaysNotice"
        }, 
        {
            "location": "/audits/DrutinyAudit/#policies_3", 
            "text": "These are the policies that use this class:     Name  Title      Test:Notice  Always notice test policy", 
            "title": "Policies"
        }, 
        {
            "location": "/audits/DrutinyAudit/#source_4", 
            "text": "public function audit(Sandbox $sandbox)\n  {\n    return Audit::NOTICE;\n  }", 
            "title": "Source"
        }, 
        {
            "location": "/audits/DrutinyAudit/#alwayspass", 
            "text": "An audit that always succeeds.  Class:  Drutiny\\Audit\\AlwaysPass \nExtends:  Drutiny\\Audit \nPackage:  drutiny/drutiny", 
            "title": "AlwaysPass"
        }, 
        {
            "location": "/audits/DrutinyAudit/#policies_4", 
            "text": "These are the policies that use this class:     Name  Title      Test:PassDependant  Always pass dependant test policy    Test:Pass  Always pass test policy", 
            "title": "Policies"
        }, 
        {
            "location": "/audits/DrutinyAudit/#source_5", 
            "text": "public function audit(Sandbox $sandbox)\n  {\n    return TRUE;\n  }", 
            "title": "Source"
        }, 
        {
            "location": "/audits/DrutinyAudit/#alwayswarn", 
            "text": "An audit that always succeeds.  Class:  Drutiny\\Audit\\AlwaysWarn \nExtends:  Drutiny\\Audit \nPackage:  drutiny/drutiny", 
            "title": "AlwaysWarn"
        }, 
        {
            "location": "/audits/DrutinyAudit/#policies_5", 
            "text": "These are the policies that use this class:     Name  Title      Test:Warning  Always warn test policy", 
            "title": "Policies"
        }, 
        {
            "location": "/audits/DrutinyAudit/#source_6", 
            "text": "public function audit(Sandbox $sandbox)\n  {\n    return Audit::WARNING;\n  }", 
            "title": "Source"
        }, 
        {
            "location": "/audits/DrutinyAuditApache/", 
            "text": "HtaccessRedirects\n\n\n.htaccess redirects\n\n\nClass: \nDrutiny\\Audit\\Apache\\HtaccessRedirects\n\nExtends: \nDrutiny\\Audit\n\nPackage: \ndrutiny/drutiny\n\n\nPolicies\n\n\nThese are the policies that use this class:\n\n\n\n\n\n\n\n\nName\n\n\nTitle\n\n\n\n\n\n\n\n\n\n\nApache:LimitHtacessRedirects\n\n\n.htaccess redirects\n\n\n\n\n\n\n\n\nParameters\n\n\n\n\n\n\n\n\nName\n\n\nType\n\n\nDescription\n\n\nDefault\n\n\n\n\n\n\n\n\n\n\nmax_redirects\n\n\ninteger\n\n\nThe maximum number of redirects to allow.\n\n\n10\n\n\n\n\n\n\n\n\nTokens\n\n\n\n\n\n\n\n\nName\n\n\nType\n\n\nDescription\n\n\nDefault\n\n\n\n\n\n\n\n\n\n\nmax_redirects\n\n\ninteger\n\n\nThe maximum number of redirects to allow.\n\n\n10\n\n\n\n\n\n\ntotal_redirects\n\n\ninteger\n\n\nThe number of redirects counted.\n\n\n10\n\n\n\n\n\n\n\n\nSource\n\n\n  public function audit(Sandbox $sandbox) {\n\n    $patterns = array(\n      'RedirectPermanent',\n      'Redirect(Match)?.*?(301|permanent) *$',\n      'RewriteRule.*\\[.*R=(301|permanent).*\\] *$',\n    );\n    $regex = '^ *(' . implode('|', $patterns) . ')';\n    $command = \ngrep -Ei '${regex}' %docroot%/.htaccess | wc -l\n;\n\n    $total_redirects = (int) $sandbox-\nexec($command);\n\n    $sandbox-\nsetParameter('total_redirects', $total_redirects);\n\n    return $total_redirects \n $sandbox-\ngetParameter('max_redirects', 10);\n  }", 
            "title": "Apache"
        }, 
        {
            "location": "/audits/DrutinyAuditApache/#htaccessredirects", 
            "text": ".htaccess redirects  Class:  Drutiny\\Audit\\Apache\\HtaccessRedirects \nExtends:  Drutiny\\Audit \nPackage:  drutiny/drutiny", 
            "title": "HtaccessRedirects"
        }, 
        {
            "location": "/audits/DrutinyAuditApache/#policies", 
            "text": "These are the policies that use this class:     Name  Title      Apache:LimitHtacessRedirects  .htaccess redirects", 
            "title": "Policies"
        }, 
        {
            "location": "/audits/DrutinyAuditApache/#parameters", 
            "text": "Name  Type  Description  Default      max_redirects  integer  The maximum number of redirects to allow.  10", 
            "title": "Parameters"
        }, 
        {
            "location": "/audits/DrutinyAuditApache/#tokens", 
            "text": "Name  Type  Description  Default      max_redirects  integer  The maximum number of redirects to allow.  10    total_redirects  integer  The number of redirects counted.  10", 
            "title": "Tokens"
        }, 
        {
            "location": "/audits/DrutinyAuditApache/#source", 
            "text": "public function audit(Sandbox $sandbox) {\n\n    $patterns = array(\n      'RedirectPermanent',\n      'Redirect(Match)?.*?(301|permanent) *$',\n      'RewriteRule.*\\[.*R=(301|permanent).*\\] *$',\n    );\n    $regex = '^ *(' . implode('|', $patterns) . ')';\n    $command =  grep -Ei '${regex}' %docroot%/.htaccess | wc -l ;\n\n    $total_redirects = (int) $sandbox- exec($command);\n\n    $sandbox- setParameter('total_redirects', $total_redirects);\n\n    return $total_redirects   $sandbox- getParameter('max_redirects', 10);\n  }", 
            "title": "Source"
        }, 
        {
            "location": "/audits/DrutinyAuditDNS/", 
            "text": "SPF\n\n\nAssert a value is present in the DNS record of the zone.\n\n\nClass: \nDrutiny\\Audit\\DNS\\SPF\n\nExtends: \nDrutiny\\Audit\n\nPackage: \ndrutiny/drutiny\n\n\nParameters\n\n\n\n\n\n\n\n\nName\n\n\nType\n\n\nDescription\n\n\nDefault\n\n\n\n\n\n\n\n\n\n\ntype\n\n\nstring\n\n\nThe type of DNS record to lookup\n\n\nA\n\n\n\n\n\n\nzone\n\n\narray\n\n\nA list of fields returned from the query to be available globally (outside of a row).\n\n\nnull\n\n\n\n\n\n\nmatching_value\n\n\nstring\n\n\nA value that should be present in the queried DNS record.\n\n\nnull\n\n\n\n\n\n\n\n\nTokens\n\n\n\n\n\n\n\n\nName\n\n\nType\n\n\nDescription\n\n\nDefault\n\n\n\n\n\n\n\n\n\n\ntype\n\n\nstring\n\n\nThe type of DNS record to lookup\n\n\nA\n\n\n\n\n\n\nzone\n\n\narray\n\n\nA list of fields returned from the query to be available globally (outside of a row).\n\n\nnull\n\n\n\n\n\n\nmatching_value\n\n\nstring\n\n\nA value that should be present in the queried DNS record.\n\n\nnull\n\n\n\n\n\n\n\n\nSource\n\n\n  public function audit(Sandbox $sandbox)\n  {\n    $type = $sandbox-\ngetParameter('type', 'A');\n    $uri = $sandbox-\ngetTarget()-\nuri();\n    $domain = preg_match('/^http/', $uri) ? parse_url($uri, PHP_URL_HOST) : $uri;\n    $zone = $sandbox-\ngetParameter('zone', $domain);\n\n    // Set the zone incase it wasn't set.\n    $sandbox-\nsetParameter('zone', $zone);\n\n    $values = $sandbox-\nlocalExec(strtr('dig +short @type @zone', [\n      '@type' =\n $type,\n      '@zone' =\n $zone,\n    ]));\n\n    $values = array_map('trim', explode(PHP_EOL, $values));\n    $values = array_filter($values);\n\n    $matching_value = $sandbox-\ngetParameter('matching_value');\n    return (bool) count(array_filter($values, function ($txt) use ($matching_value) {\n      return strpos($txt, $matching_value) !== FALSE;\n    }));\n  }", 
            "title": "DNS"
        }, 
        {
            "location": "/audits/DrutinyAuditDNS/#spf", 
            "text": "Assert a value is present in the DNS record of the zone.  Class:  Drutiny\\Audit\\DNS\\SPF \nExtends:  Drutiny\\Audit \nPackage:  drutiny/drutiny", 
            "title": "SPF"
        }, 
        {
            "location": "/audits/DrutinyAuditDNS/#parameters", 
            "text": "Name  Type  Description  Default      type  string  The type of DNS record to lookup  A    zone  array  A list of fields returned from the query to be available globally (outside of a row).  null    matching_value  string  A value that should be present in the queried DNS record.  null", 
            "title": "Parameters"
        }, 
        {
            "location": "/audits/DrutinyAuditDNS/#tokens", 
            "text": "Name  Type  Description  Default      type  string  The type of DNS record to lookup  A    zone  array  A list of fields returned from the query to be available globally (outside of a row).  null    matching_value  string  A value that should be present in the queried DNS record.  null", 
            "title": "Tokens"
        }, 
        {
            "location": "/audits/DrutinyAuditDNS/#source", 
            "text": "public function audit(Sandbox $sandbox)\n  {\n    $type = $sandbox- getParameter('type', 'A');\n    $uri = $sandbox- getTarget()- uri();\n    $domain = preg_match('/^http/', $uri) ? parse_url($uri, PHP_URL_HOST) : $uri;\n    $zone = $sandbox- getParameter('zone', $domain);\n\n    // Set the zone incase it wasn't set.\n    $sandbox- setParameter('zone', $zone);\n\n    $values = $sandbox- localExec(strtr('dig +short @type @zone', [\n      '@type' =  $type,\n      '@zone' =  $zone,\n    ]));\n\n    $values = array_map('trim', explode(PHP_EOL, $values));\n    $values = array_filter($values);\n\n    $matching_value = $sandbox- getParameter('matching_value');\n    return (bool) count(array_filter($values, function ($txt) use ($matching_value) {\n      return strpos($txt, $matching_value) !== FALSE;\n    }));\n  }", 
            "title": "Source"
        }, 
        {
            "location": "/audits/DrutinyAuditDatabase/", 
            "text": "DatabaseSize\n\n\nLarge databases can negatively impact your production site, and slow down things like database dumps.\n\n\nClass: \nDrutiny\\Audit\\Database\\DatabaseSize\n\nExtends: \nDrutiny\\Audit\n\nPackage: \ndrutiny/drutiny\n\n\nPolicies\n\n\nThese are the policies that use this class:\n\n\n\n\n\n\n\n\nName\n\n\nTitle\n\n\n\n\n\n\n\n\n\n\nDatabase:Size\n\n\nDatabase size\n\n\n\n\n\n\n\n\nParameters\n\n\n\n\n\n\n\n\nName\n\n\nType\n\n\nDescription\n\n\nDefault\n\n\n\n\n\n\n\n\n\n\nmax_size\n\n\ninteger\n\n\nFail the audit if the database size is greater than this value\n\n\nnull\n\n\n\n\n\n\nwarning_size\n\n\ninteger\n\n\nIssue a warning if the database size is greater than this value\n\n\nnull\n\n\n\n\n\n\n\n\nTokens\n\n\n\n\n\n\n\n\nName\n\n\nType\n\n\nDescription\n\n\nDefault\n\n\n\n\n\n\n\n\n\n\nmax_size\n\n\ninteger\n\n\nFail the audit if the database size is greater than this value\n\n\nnull\n\n\n\n\n\n\nwarning_size\n\n\ninteger\n\n\nIssue a warning if the database size is greater than this value\n\n\nnull\n\n\n\n\n\n\ndb\n\n\nstring\n\n\nThe name of the database\n\n\nnull\n\n\n\n\n\n\nsize\n\n\ninteger\n\n\nThe size of the database\n\n\nnull\n\n\n\n\n\n\n\n\nSource\n\n\n  public function audit(Sandbox $sandbox) {\n    $stat = $sandbox-\ndrush(['format' =\n 'json'])\n      -\nstatus();\n\n    $name = $stat['db-name'];\n    $sql = \nSELECT ROUND(SUM(data_length + index_length) / 1024 / 1024, 1) 'DB Size in MB'\n            FROM information_schema.tables\n            WHERE table_schema='{$name}'\n            GROUP BY table_schema;\n;\n\n    $resultLines = $sandbox-\ndrush()-\nsqlq($sql);\n    $resultLines = array_filter($resultLines, function($line) {\n      return $line !== 'DB Size in MB';\n    });\n    $size = (float) reset($resultLines);\n\n    $sandbox-\nsetParameter('db', $name)\n            -\nsetParameter('size', $size);\n\n    if ($sandbox-\ngetParameter('max_size') \n $size) {\n      return FALSE;\n    }\n\n    if ($sandbox-\ngetParameter('warning_size') \n $size) {\n      return Audit::WARNING;\n    }\n\n    return TRUE;\n  }", 
            "title": "Database"
        }, 
        {
            "location": "/audits/DrutinyAuditDatabase/#databasesize", 
            "text": "Large databases can negatively impact your production site, and slow down things like database dumps.  Class:  Drutiny\\Audit\\Database\\DatabaseSize \nExtends:  Drutiny\\Audit \nPackage:  drutiny/drutiny", 
            "title": "DatabaseSize"
        }, 
        {
            "location": "/audits/DrutinyAuditDatabase/#policies", 
            "text": "These are the policies that use this class:     Name  Title      Database:Size  Database size", 
            "title": "Policies"
        }, 
        {
            "location": "/audits/DrutinyAuditDatabase/#parameters", 
            "text": "Name  Type  Description  Default      max_size  integer  Fail the audit if the database size is greater than this value  null    warning_size  integer  Issue a warning if the database size is greater than this value  null", 
            "title": "Parameters"
        }, 
        {
            "location": "/audits/DrutinyAuditDatabase/#tokens", 
            "text": "Name  Type  Description  Default      max_size  integer  Fail the audit if the database size is greater than this value  null    warning_size  integer  Issue a warning if the database size is greater than this value  null    db  string  The name of the database  null    size  integer  The size of the database  null", 
            "title": "Tokens"
        }, 
        {
            "location": "/audits/DrutinyAuditDatabase/#source", 
            "text": "public function audit(Sandbox $sandbox) {\n    $stat = $sandbox- drush(['format' =  'json'])\n      - status();\n\n    $name = $stat['db-name'];\n    $sql =  SELECT ROUND(SUM(data_length + index_length) / 1024 / 1024, 1) 'DB Size in MB'\n            FROM information_schema.tables\n            WHERE table_schema='{$name}'\n            GROUP BY table_schema; ;\n\n    $resultLines = $sandbox- drush()- sqlq($sql);\n    $resultLines = array_filter($resultLines, function($line) {\n      return $line !== 'DB Size in MB';\n    });\n    $size = (float) reset($resultLines);\n\n    $sandbox- setParameter('db', $name)\n            - setParameter('size', $size);\n\n    if ($sandbox- getParameter('max_size')   $size) {\n      return FALSE;\n    }\n\n    if ($sandbox- getParameter('warning_size')   $size) {\n      return Audit::WARNING;\n    }\n\n    return TRUE;\n  }", 
            "title": "Source"
        }, 
        {
            "location": "/audits/DrutinyAuditDrupal/", 
            "text": "IniGet\n\n\nEvaluate a PHP ini setting.\n\n\nClass: \nDrutiny\\Audit\\Drupal\\IniGet\n\nExtends: \nDrutiny\\Audit\\AbstractComparison\n\nPackage: \ndrutiny/drutiny\n\n\nParameters\n\n\n\n\n\n\n\n\nName\n\n\nType\n\n\nDescription\n\n\nDefault\n\n\n\n\n\n\n\n\n\n\nsetting\n\n\nstring\n\n\nThe name of the ini setting to check.\n\n\nnull\n\n\n\n\n\n\nvalue\n\n\nmixed\n\n\nThe local value of the ini setting to compare for.\n\n\nnull\n\n\n\n\n\n\ncomp_type\n\n\nstring\n\n\nThe comparison operator to use for the comparison.\n\n\nnull\n\n\n\n\n\n\n\n\nTokens\n\n\n\n\n\n\n\n\nName\n\n\nType\n\n\nDescription\n\n\nDefault\n\n\n\n\n\n\n\n\n\n\nsetting\n\n\nstring\n\n\nThe name of the ini setting to check.\n\n\nnull\n\n\n\n\n\n\nvalue\n\n\nmixed\n\n\nThe local value of the ini setting to compare for.\n\n\nnull\n\n\n\n\n\n\ncomp_type\n\n\nstring\n\n\nThe comparison operator to use for the comparison.\n\n\nnull\n\n\n\n\n\n\n\n\nSource\n\n\n  public function audit(Sandbox $sandbox)\n  {\n    $ini = $this-\nsandbox-\ndrush()-\nevaluate(function () {\n      return ini_get_all();\n    });\n    $setting = $sandbox-\ngetParameter('setting');\n\n    if (!isset($ini[$setting])) {\n      return FALSE;\n    }\n\n    return $this-\ncompare($sandbox-\ngetParameter('value'), $ini[$setting]['local_value'], $sandbox);\n  }\n\n\n\n\n\nLargeDrupalFiles\n\n\nIdentify files larger than a specfied size. Pass if no matching files found.\n\n\nClass: \nDrutiny\\Audit\\Drupal\\LargeDrupalFiles\n\nExtends: \nDrutiny\\Audit\n\nPackage: \ndrutiny/drutiny\n\n\nPolicies\n\n\nThese are the policies that use this class:\n\n\n\n\n\n\n\n\nName\n\n\nTitle\n\n\n\n\n\n\n\n\n\n\nDrupal:largeFiles\n\n\nLarge Drupal Files\n\n\n\n\n\n\n\n\nParameters\n\n\n\n\n\n\n\n\nName\n\n\nType\n\n\nDescription\n\n\nDefault\n\n\n\n\n\n\n\n\n\n\nmax_size\n\n\ninteger\n\n\nReport files larger than this value measured in bytes.\n\n\n10000000\n\n\n\n\n\n\n\n\nTokens\n\n\n\n\n\n\n\n\nName\n\n\nType\n\n\nDescription\n\n\nDefault\n\n\n\n\n\n\n\n\n\n\nmax_size\n\n\ninteger\n\n\nReport files larger than this value measured in bytes.\n\n\n10000000\n\n\n\n\n\n\ntotal\n\n\ninteger\n\n\nTotal number of large files found\n\n\nnull\n\n\n\n\n\n\ntoo_many_files\n\n\ninteger\n\n\nText to display if there are more than 10 files found.\n\n\nnull\n\n\n\n\n\n\nfiles\n\n\ninteger\n\n\nA list of up to 10 files that are too large.\n\n\nnull\n\n\n\n\n\n\nplural\n\n\nstring\n\n\nThis variable will contain an 's' if there is more than one issue found.\n\n\n''\n\n\n\n\n\n\n\n\nSource\n\n\n  public function audit(Sandbox $sandbox) {\n    $max_size = (int) $sandbox-\ngetParameter('max_size', 10000000);\n    $sandbox-\nsetParameter('readable_max_size', $max_size / 1000 / 1000 . ' MB');\n    $query = \nSELECT fm.uri, fm.filesize, (SELECT COUNT(*) FROM file_usage fu WHERE fu.fid = fm.fid) as 'usage' FROM file_managed fm WHERE fm.filesize \n= @size ORDER BY fm.filesize DESC\n;\n    $query = strtr($query, ['@size' =\n $max_size]);\n    $output = $sandbox-\ndrush()-\nsqlQuery($query);\n\n    if (empty($output)) {\n      return TRUE;\n    }\n\n    $records = is_array($output) ? $output : explode(\n\\n\n, $output);\n    $rows = array();\n    foreach ($records as $record) {\n      // Ignore record if it contains message about adding RSA key to known hosts.\n      if (strpos($record, '(RSA) to the list of known hosts') != FALSE) {\n        continue;\n      }\n\n      // Create the columns\n      $parts = explode(\n\\t\n, $record);\n      $rows[] = [\n        'uri' =\n $parts[0],\n        'size' =\n number_format((float) $parts[1] / 1000 / 1000, 2) . ' MB',\n        'usage' =\n ($parts[2] == 0) ? 'No' : 'Yes'\n      ];\n    }\n    $totalRows = count($rows);\n\n    if ($totalRows \n 1) {\n      return TRUE;\n    }\n    $sandbox-\nsetParameter('total', $totalRows);\n\n    // Reduce the number of rows to 10\n    $rows = array_slice($rows, 0, 10);\n    $too_many_files = ($totalRows \n 10) ? \nOnly the first 10 files are displayed.\n : \n;\n\n    $sandbox-\nsetParameter('too_many_files', $too_many_files);\n    $sandbox-\nsetParameter('files', $rows);\n    $sandbox-\nsetParameter('plural', $totalRows \n 1 ? 's' : '');\n\n    return Audit::FAIL;\n  }\n\n\n\n\n\nModuleEnabled\n\n\nGeneric module is enabled check.\n\n\nClass: \nDrutiny\\Audit\\Drupal\\ModuleEnabled\n\nExtends: \nDrutiny\\Audit\n\nPackage: \ndrutiny/drutiny\n\n\nThis class can \nremediate\n failed audits.\n\n\nPolicies\n\n\nThese are the policies that use this class:\n\n\n\n\n\n\n\n\nName\n\n\nTitle\n\n\n\n\n\n\n\n\n\n\nDrupal-7:SecurePagesEnabled\n\n\nSecure Pages Enabled\n\n\n\n\n\n\nDrupal-8:MemcacheEnabled\n\n\nMemcache module enabled\n\n\n\n\n\n\nDrupal-8:PurgeEnabled\n\n\nPurge module enabled\n\n\n\n\n\n\nDistro:PasswordPolicyEnabled\n\n\nPassword Policy\n\n\n\n\n\n\nDistro:RobotstxtEnabled\n\n\nRobotstxt\n\n\n\n\n\n\nDistro:GoogleAnalyticsEnabled\n\n\nGoogle Analytics\n\n\n\n\n\n\nAcquia:SPIEnabled\n\n\nAcquia SPI\n\n\n\n\n\n\nAcquia:AgentEnabled\n\n\nAcquia Agent\n\n\n\n\n\n\nAcquia:SiteFactoryOpenID\n\n\nAcquia Cloud Site Factory OpenID\n\n\n\n\n\n\nAcquia:SiteFactory:Variables\n\n\nAcquia Cloud Site Factory Variables\n\n\n\n\n\n\nAcquia:SiteFactoryDuplication\n\n\nAcquia Cloud Site Factory Duplication\n\n\n\n\n\n\nAcquia:SiteFactory:ThemeEnabled\n\n\nAcquia Cloud Site Factory Theme\n\n\n\n\n\n\nAcquia:SiteFactory:Pingdom\n\n\nAcquia Cloud Site Factory Pingdom\n\n\n\n\n\n\nAcquia:ACSF\n\n\nAcquia Cloud Site Factory\n\n\n\n\n\n\nAcquia:StageFileProxy\n\n\nServing files from production on development environments\n\n\n\n\n\n\nAcquia:MemcacheEnabled\n\n\nMemcache module enabled\n\n\n\n\n\n\nAcquia:PurgeEnabled\n\n\nAcquia Purge Enabled\n\n\n\n\n\n\nAcquia:Connected\n\n\nAcquia Connector\n\n\n\n\n\n\nDrupal:SyslogEnabled\n\n\nSyslog\n\n\n\n\n\n\nDrupal:Security:UserEmueration\n\n\nUser Enumeration\n\n\n\n\n\n\n\n\nParameters\n\n\n\n\n\n\n\n\nName\n\n\nType\n\n\nDescription\n\n\nDefault\n\n\n\n\n\n\n\n\n\n\nmodule\n\n\nstring\n\n\nThe module to check is enabled.\n\n\nnull\n\n\n\n\n\n\n\n\nTokens\n\n\n\n\n\n\n\n\nName\n\n\nType\n\n\nDescription\n\n\nDefault\n\n\n\n\n\n\n\n\n\n\nmodule\n\n\nstring\n\n\nThe module to check is enabled.\n\n\nnull\n\n\n\n\n\n\n\n\nSource\n\n\n  public function audit(Sandbox $sandbox)\n  {\n\n    $module = $sandbox-\ngetParameter('module');\n    $info = $sandbox-\ndrush(['format' =\n 'json'])-\npmList();\n\n    if (!isset($info[$module])) {\n      return FALSE;\n    }\n\n    $status = strtolower($info[$module]['status']);\n\n    return ($status == 'enabled');\n  }\n\n\n\n\n\nModuleUpdateStatus\n\n\nLook for modules with available updates.\n\n\nClass: \nDrutiny\\Audit\\Drupal\\ModuleUpdateStatus\n\nExtends: \nDrutiny\\Audit\n\nPackage: \ndrutiny/drutiny\n\n\nPolicies\n\n\nThese are the policies that use this class:\n\n\n\n\n\n\n\n\nName\n\n\nTitle\n\n\n\n\n\n\n\n\n\n\nDrupal:moduleUpdates\n\n\nModule updates\n\n\n\n\n\n\n\n\nTokens\n\n\n\n\n\n\n\n\nName\n\n\nType\n\n\nDescription\n\n\nDefault\n\n\n\n\n\n\n\n\n\n\nupdates\n\n\narray\n\n\nDescription of module updates available.\n\n\nnull\n\n\n\n\n\n\n\n\nSource\n\n\n  public function audit(Sandbox $sandbox) {\n    $output = $sandbox-\ndrush()-\npmUpdatestatus('--format=json');\n    $lines = explode(PHP_EOL, $output);\n    $lines = array_map('trim', $lines);\n\n    // Output can often contain non-json output which needs to be filtered out.\n    while ($line = array_shift($lines)) {\n      if ($line == \n{\n) {\n        array_unshift($lines, $line);\n        break;\n      }\n    }\n    $json = implode(PHP_EOL, $lines);\n    $modules = json_decode($json, TRUE);\n\n    $issues = [];\n\n    foreach ($modules as $name =\n $info) {\n\n      if (isset($info['recommended_major']) \n $info['existing_major'] != $info['recommended_major']) {\n        $issues[] = $info;\n      }\n      elseif ($info['existing_version'] != $info['recommended']) {\n        $issues[] = $info;\n      }\n    }\n\n    $sandbox-\nsetParameter('updates', $issues);\n\n    if (!count($issues)) {\n      return TRUE;\n    }\n\n    $sec_updates = array_filter($issues, function ($info) {\n      return strpos($info['status_msg'], 'SECURITY') !== FALSE;\n    });\n\n    // Pure failure if all issues are security ones.\n    if (count($sec_updates) === count($issues)) {\n      return FALSE;\n    }\n    // Security updates and normal updates available.\n    elseif (count($sec_updates)) {\n      return Audit::WARNING_FAIL;\n    }\n\n    // Just normal updates available.\n    return Audit::WARNING;\n  }\n\n\n\n\n\nModuleVersion\n\n\nCheck the version of Drupal project in a site.\n\n\nClass: \nDrutiny\\Audit\\Drupal\\ModuleVersion\n\nExtends: \nDrutiny\\Audit\n\nPackage: \ndrutiny/drutiny\n\n\nPolicies\n\n\nThese are the policies that use this class:\n\n\n\n\n\n\n\n\nName\n\n\nTitle\n\n\n\n\n\n\n\n\n\n\nDrupal-7:SA-CORE-2013-003\n\n\nCSS Aggregation\n\n\n\n\n\n\n\n\nParameters\n\n\n\n\n\n\n\n\nName\n\n\nType\n\n\nDescription\n\n\nDefault\n\n\n\n\n\n\n\n\n\n\nmodule\n\n\nstring\n\n\nThe module to version information for\n\n\nnull\n\n\n\n\n\n\nversion\n\n\nstring\n\n\nThe static version to check against.\n\n\nnull\n\n\n\n\n\n\ncomparator\n\n\nstring\n\n\nHow to compare the version (greaterThan, greaterThanOrEqualTo, lessThan etc. See https://github.com/composer/semver)\n\n\ngreaterThanOrEqualTo\n\n\n\n\n\n\n\n\nTokens\n\n\n\n\n\n\n\n\nName\n\n\nType\n\n\nDescription\n\n\nDefault\n\n\n\n\n\n\n\n\n\n\nmodule\n\n\nstring\n\n\nThe module to version information for\n\n\nnull\n\n\n\n\n\n\nversion\n\n\nstring\n\n\nThe static version to check against.\n\n\nnull\n\n\n\n\n\n\ncomparator\n\n\nstring\n\n\nHow to compare the version (greaterThan, greaterThanOrEqualTo, lessThan etc. See https://github.com/composer/semver)\n\n\ngreaterThanOrEqualTo\n\n\n\n\n\n\n\n\nSource\n\n\n  public function audit(Sandbox $sandbox)\n  {\n    $module = $sandbox-\ngetParameter('module');\n    $version = $sandbox-\ngetParameter('version');\n    $comparator_method = $sandbox-\ngetParameter('comparator');\n\n    if (!method_exists(\nComposer\\Semver\\Comparator\n, $comparator_method)) {\n      throw new \\Exception(\nComparator method not available: $comparator_method\n);\n    }\n\n    $info = $sandbox-\ndrush(['format' =\n 'json'])-\npmList();\n\n    if (!isset($info[$module])) {\n      return Audit::NOT_APPLICABLE;\n    }\n\n    $current_version = strtolower($info[$module]['version']);\n    $sandbox-\nsetParameter('current_version', $current_version);\n\n    $sandbox-\nlogger()-\ninfo(\n$comparator_method($current_version, $version)\n);\n\n    return call_user_func(\nComposer\\Semver\\Comparator::$comparator_method\n, $current_version, $version);\n  }\n\n\n\n\n\nPhpLint\n\n\nRun PHP lint over PHP files in a directory.\n\n\nClass: \nDrutiny\\Audit\\Drupal\\PhpLint\n\nExtends: \nDrutiny\\Audit\n\nPackage: \ndrutiny/drutiny\n\n\nPolicies\n\n\nThese are the policies that use this class:\n\n\n\n\n\n\n\n\nName\n\n\nTitle\n\n\n\n\n\n\n\n\n\n\nDrupal:LintTheme\n\n\nLint PHP files in Theme\n\n\n\n\n\n\n\n\nParameters\n\n\n\n\n\n\n\n\nName\n\n\nType\n\n\nDescription\n\n\nDefault\n\n\n\n\n\n\n\n\n\n\npath\n\n\nstring\n\n\nThe path where to lint PHP files.\n\n\n'%root'\n\n\n\n\n\n\n\n\nTokens\n\n\n\n\n\n\n\n\nName\n\n\nType\n\n\nDescription\n\n\nDefault\n\n\n\n\n\n\n\n\n\n\npath\n\n\nstring\n\n\nThe path where to lint PHP files.\n\n\n'%root'\n\n\n\n\n\n\nerrors\n\n\narray\n\n\nAn array of parse errors found.\n\n\n{  }\n\n\n\n\n\n\n\n\nSource\n\n\n  public function audit(Sandbox $sandbox) {\n    // find src/ -name \\*.php -exec php -l {} \\; 2\n1 | grep 'PHP Parse error:'\n    $path = $sandbox-\ngetParameter('path', '%root');\n    $stat = $sandbox-\ndrush(['format' =\n 'json'])-\nstatus();\n\n    $path = strtr($path, $stat['%paths']);\n\n    $errors = $sandbox-\nexec(\nfind $path -name \\*.php -exec php -l {} \\; 2\n1 | grep 'PHP Parse error:' || true\n);\n    $errors = array_filter(explode(PHP_EOL, $errors));\n    $sandbox-\nsetParameter('errors', $errors);\n    return count($errors) == 0;\n  }\n\n\n\n\n\nSqlResultAudit\n\n\nAudit the first row returned from a SQL query.\n\n\nClass: \nDrutiny\\Audit\\Drupal\\SqlResultAudit\n\nExtends: \nDrutiny\\Audit\\AbstractComparison\n\nPackage: \ndrutiny/drutiny\n\n\nPolicies\n\n\nThese are the policies that use this class:\n\n\n\n\n\n\n\n\nName\n\n\nTitle\n\n\n\n\n\n\n\n\n\n\nDrupal:AnonSession\n\n\nAnonymous sessions\n\n\n\n\n\n\n\n\nParameters\n\n\n\n\n\n\n\n\nName\n\n\nType\n\n\nDescription\n\n\nDefault\n\n\n\n\n\n\n\n\n\n\nquery\n\n\nstring\n\n\nThe SQL query to run. Can use other parameters for variable replacement.\n\n\nnull\n\n\n\n\n\n\nfield\n\n\nstring\n\n\nThe name of the field in the result row to pull the value from\n\n\nnull\n\n\n\n\n\n\nvalue\n\n\nmixed\n\n\nThe value to compare against\n\n\nnull\n\n\n\n\n\n\ncomp_type\n\n\nstring\n\n\nThe comparison operator to use for the comparison.\n\n\n'='\n\n\n\n\n\n\ndefault_value\n\n\nstring\n\n\nIf no SQL result set is returned, what should the default value of the field be?\n\n\n''\n\n\n\n\n\n\n\n\nTokens\n\n\n\n\n\n\n\n\nName\n\n\nType\n\n\nDescription\n\n\nDefault\n\n\n\n\n\n\n\n\n\n\nquery\n\n\nstring\n\n\nThe SQL query to run. Can use other parameters for variable replacement.\n\n\nnull\n\n\n\n\n\n\nfield\n\n\nstring\n\n\nThe name of the field in the result row to pull the value from\n\n\nnull\n\n\n\n\n\n\nvalue\n\n\nmixed\n\n\nThe value to compare against\n\n\nnull\n\n\n\n\n\n\ncomp_type\n\n\nstring\n\n\nThe comparison operator to use for the comparison.\n\n\n'='\n\n\n\n\n\n\ndefault_value\n\n\nstring\n\n\nIf no SQL result set is returned, what should the default value of the field be?\n\n\n''\n\n\n\n\n\n\nresult\n\n\nstring\n\n\nThe comparison operator to use for the comparison.\n\n\nnull\n\n\n\n\n\n\n\n\nSource\n\n\n  public function audit(Sandbox $sandbox)\n  {\n    $query = $sandbox-\ngetParameter('query');\n\n    $tokens = [];\n    foreach ($sandbox-\ngetParameterTokens() as $key =\n $value) {\n        $tokens[':' . $key] = $value;\n    }\n    $query = strtr($query . ' \\G', $tokens);\n\n    if (!preg_match_all('/^SELECT (.*) FROM/', $query, $fields)) {\n      throw new \\Exception(\nCould not parse fields from SQL query: $query.\n);\n    }\n\n    $output = $sandbox-\ndrush()-\nsqlq($query);\n    $results = [];\n\n    while ($line = array_shift($output))\n    {\n      if (preg_match('/^[\\*]+ ([0-9]+)\\. row [\\*]+$/', $line, $matches)) {\n        $idx = $matches[1];\n      }\n      else {\n        list($field, $value) = explode(':', trim($line), 2);\n        $results[$idx][$field] = $value;\n      }\n    }\n\n    $field = $sandbox-\ngetParameter('field');\n\n    if (empty($results)) {\n      $results[] = [\n        $field =\n $sandbox-\ngetParameter('default_value'),\n      ];\n    }\n\n    $row = array_shift($results);\n\n    $field = $sandbox-\ngetParameter('field');\n    if (!isset($row[$field])) {\n      throw new \\Exception(\nDid not find $field in SQL query: $query.\n);\n    }\n\n     $sandbox-\nsetParameter('result', $row);\n\n    return $this-\ncompare($sandbox-\ngetParameter('value'), $row[$field], $sandbox);\n  }\n\n\n\n\n\nStatusInformation\n\n\nDrush Status Information\n\n\nClass: \nDrutiny\\Audit\\Drupal\\StatusInformation\n\nExtends: \nDrutiny\\Audit\n\nPackage: \ndrutiny/drutiny\n\n\nTokens\n\n\n\n\n\n\n\n\nName\n\n\nType\n\n\nDescription\n\n\nDefault\n\n\n\n\n\n\n\n\n\n\nstatus\n\n\narray\n\n\nThe status object returned by drush.\n\n\nnull\n\n\n\n\n\n\n\n\nSource\n\n\n  public function audit(Sandbox $sandbox) {\n    $stat = $sandbox-\ndrush(['format' =\n 'json'])-\nstatus();\n    $sandbox-\nsetParameter('status', $stat);\n\n    return Audit::NOTICE;\n  }\n\n\n\n\n\nUpdateDBStatus\n\n\nEnsure all module updates have been applied.\n\n\nClass: \nDrutiny\\Audit\\Drupal\\UpdateDBStatus\n\nExtends: \nDrutiny\\Audit\n\nPackage: \ndrutiny/drutiny\n\n\nPolicies\n\n\nThese are the policies that use this class:\n\n\n\n\n\n\n\n\nName\n\n\nTitle\n\n\n\n\n\n\n\n\n\n\nDrupal:updates\n\n\nDatabase updates\n\n\n\n\n\n\n\n\nSource\n\n\n  public function audit(Sandbox $sandbox) {\n    $output = $sandbox-\ndrush()-\nupdb('-n');\n\n    if (strpos($output, 'No database updates required') \n= 0 || empty($output)) {\n      return TRUE;\n    }\n    return FALSE;\n  }", 
            "title": "Drupal"
        }, 
        {
            "location": "/audits/DrutinyAuditDrupal/#iniget", 
            "text": "Evaluate a PHP ini setting.  Class:  Drutiny\\Audit\\Drupal\\IniGet \nExtends:  Drutiny\\Audit\\AbstractComparison \nPackage:  drutiny/drutiny", 
            "title": "IniGet"
        }, 
        {
            "location": "/audits/DrutinyAuditDrupal/#parameters", 
            "text": "Name  Type  Description  Default      setting  string  The name of the ini setting to check.  null    value  mixed  The local value of the ini setting to compare for.  null    comp_type  string  The comparison operator to use for the comparison.  null", 
            "title": "Parameters"
        }, 
        {
            "location": "/audits/DrutinyAuditDrupal/#tokens", 
            "text": "Name  Type  Description  Default      setting  string  The name of the ini setting to check.  null    value  mixed  The local value of the ini setting to compare for.  null    comp_type  string  The comparison operator to use for the comparison.  null", 
            "title": "Tokens"
        }, 
        {
            "location": "/audits/DrutinyAuditDrupal/#source", 
            "text": "public function audit(Sandbox $sandbox)\n  {\n    $ini = $this- sandbox- drush()- evaluate(function () {\n      return ini_get_all();\n    });\n    $setting = $sandbox- getParameter('setting');\n\n    if (!isset($ini[$setting])) {\n      return FALSE;\n    }\n\n    return $this- compare($sandbox- getParameter('value'), $ini[$setting]['local_value'], $sandbox);\n  }", 
            "title": "Source"
        }, 
        {
            "location": "/audits/DrutinyAuditDrupal/#largedrupalfiles", 
            "text": "Identify files larger than a specfied size. Pass if no matching files found.  Class:  Drutiny\\Audit\\Drupal\\LargeDrupalFiles \nExtends:  Drutiny\\Audit \nPackage:  drutiny/drutiny", 
            "title": "LargeDrupalFiles"
        }, 
        {
            "location": "/audits/DrutinyAuditDrupal/#policies", 
            "text": "These are the policies that use this class:     Name  Title      Drupal:largeFiles  Large Drupal Files", 
            "title": "Policies"
        }, 
        {
            "location": "/audits/DrutinyAuditDrupal/#parameters_1", 
            "text": "Name  Type  Description  Default      max_size  integer  Report files larger than this value measured in bytes.  10000000", 
            "title": "Parameters"
        }, 
        {
            "location": "/audits/DrutinyAuditDrupal/#tokens_1", 
            "text": "Name  Type  Description  Default      max_size  integer  Report files larger than this value measured in bytes.  10000000    total  integer  Total number of large files found  null    too_many_files  integer  Text to display if there are more than 10 files found.  null    files  integer  A list of up to 10 files that are too large.  null    plural  string  This variable will contain an 's' if there is more than one issue found.  ''", 
            "title": "Tokens"
        }, 
        {
            "location": "/audits/DrutinyAuditDrupal/#source_1", 
            "text": "public function audit(Sandbox $sandbox) {\n    $max_size = (int) $sandbox- getParameter('max_size', 10000000);\n    $sandbox- setParameter('readable_max_size', $max_size / 1000 / 1000 . ' MB');\n    $query =  SELECT fm.uri, fm.filesize, (SELECT COUNT(*) FROM file_usage fu WHERE fu.fid = fm.fid) as 'usage' FROM file_managed fm WHERE fm.filesize  = @size ORDER BY fm.filesize DESC ;\n    $query = strtr($query, ['@size' =  $max_size]);\n    $output = $sandbox- drush()- sqlQuery($query);\n\n    if (empty($output)) {\n      return TRUE;\n    }\n\n    $records = is_array($output) ? $output : explode( \\n , $output);\n    $rows = array();\n    foreach ($records as $record) {\n      // Ignore record if it contains message about adding RSA key to known hosts.\n      if (strpos($record, '(RSA) to the list of known hosts') != FALSE) {\n        continue;\n      }\n\n      // Create the columns\n      $parts = explode( \\t , $record);\n      $rows[] = [\n        'uri' =  $parts[0],\n        'size' =  number_format((float) $parts[1] / 1000 / 1000, 2) . ' MB',\n        'usage' =  ($parts[2] == 0) ? 'No' : 'Yes'\n      ];\n    }\n    $totalRows = count($rows);\n\n    if ($totalRows   1) {\n      return TRUE;\n    }\n    $sandbox- setParameter('total', $totalRows);\n\n    // Reduce the number of rows to 10\n    $rows = array_slice($rows, 0, 10);\n    $too_many_files = ($totalRows   10) ?  Only the first 10 files are displayed.  :  ;\n\n    $sandbox- setParameter('too_many_files', $too_many_files);\n    $sandbox- setParameter('files', $rows);\n    $sandbox- setParameter('plural', $totalRows   1 ? 's' : '');\n\n    return Audit::FAIL;\n  }", 
            "title": "Source"
        }, 
        {
            "location": "/audits/DrutinyAuditDrupal/#moduleenabled", 
            "text": "Generic module is enabled check.  Class:  Drutiny\\Audit\\Drupal\\ModuleEnabled \nExtends:  Drutiny\\Audit \nPackage:  drutiny/drutiny  This class can  remediate  failed audits.", 
            "title": "ModuleEnabled"
        }, 
        {
            "location": "/audits/DrutinyAuditDrupal/#policies_1", 
            "text": "These are the policies that use this class:     Name  Title      Drupal-7:SecurePagesEnabled  Secure Pages Enabled    Drupal-8:MemcacheEnabled  Memcache module enabled    Drupal-8:PurgeEnabled  Purge module enabled    Distro:PasswordPolicyEnabled  Password Policy    Distro:RobotstxtEnabled  Robotstxt    Distro:GoogleAnalyticsEnabled  Google Analytics    Acquia:SPIEnabled  Acquia SPI    Acquia:AgentEnabled  Acquia Agent    Acquia:SiteFactoryOpenID  Acquia Cloud Site Factory OpenID    Acquia:SiteFactory:Variables  Acquia Cloud Site Factory Variables    Acquia:SiteFactoryDuplication  Acquia Cloud Site Factory Duplication    Acquia:SiteFactory:ThemeEnabled  Acquia Cloud Site Factory Theme    Acquia:SiteFactory:Pingdom  Acquia Cloud Site Factory Pingdom    Acquia:ACSF  Acquia Cloud Site Factory    Acquia:StageFileProxy  Serving files from production on development environments    Acquia:MemcacheEnabled  Memcache module enabled    Acquia:PurgeEnabled  Acquia Purge Enabled    Acquia:Connected  Acquia Connector    Drupal:SyslogEnabled  Syslog    Drupal:Security:UserEmueration  User Enumeration", 
            "title": "Policies"
        }, 
        {
            "location": "/audits/DrutinyAuditDrupal/#parameters_2", 
            "text": "Name  Type  Description  Default      module  string  The module to check is enabled.  null", 
            "title": "Parameters"
        }, 
        {
            "location": "/audits/DrutinyAuditDrupal/#tokens_2", 
            "text": "Name  Type  Description  Default      module  string  The module to check is enabled.  null", 
            "title": "Tokens"
        }, 
        {
            "location": "/audits/DrutinyAuditDrupal/#source_2", 
            "text": "public function audit(Sandbox $sandbox)\n  {\n\n    $module = $sandbox- getParameter('module');\n    $info = $sandbox- drush(['format' =  'json'])- pmList();\n\n    if (!isset($info[$module])) {\n      return FALSE;\n    }\n\n    $status = strtolower($info[$module]['status']);\n\n    return ($status == 'enabled');\n  }", 
            "title": "Source"
        }, 
        {
            "location": "/audits/DrutinyAuditDrupal/#moduleupdatestatus", 
            "text": "Look for modules with available updates.  Class:  Drutiny\\Audit\\Drupal\\ModuleUpdateStatus \nExtends:  Drutiny\\Audit \nPackage:  drutiny/drutiny", 
            "title": "ModuleUpdateStatus"
        }, 
        {
            "location": "/audits/DrutinyAuditDrupal/#policies_2", 
            "text": "These are the policies that use this class:     Name  Title      Drupal:moduleUpdates  Module updates", 
            "title": "Policies"
        }, 
        {
            "location": "/audits/DrutinyAuditDrupal/#tokens_3", 
            "text": "Name  Type  Description  Default      updates  array  Description of module updates available.  null", 
            "title": "Tokens"
        }, 
        {
            "location": "/audits/DrutinyAuditDrupal/#source_3", 
            "text": "public function audit(Sandbox $sandbox) {\n    $output = $sandbox- drush()- pmUpdatestatus('--format=json');\n    $lines = explode(PHP_EOL, $output);\n    $lines = array_map('trim', $lines);\n\n    // Output can often contain non-json output which needs to be filtered out.\n    while ($line = array_shift($lines)) {\n      if ($line ==  { ) {\n        array_unshift($lines, $line);\n        break;\n      }\n    }\n    $json = implode(PHP_EOL, $lines);\n    $modules = json_decode($json, TRUE);\n\n    $issues = [];\n\n    foreach ($modules as $name =  $info) {\n\n      if (isset($info['recommended_major'])   $info['existing_major'] != $info['recommended_major']) {\n        $issues[] = $info;\n      }\n      elseif ($info['existing_version'] != $info['recommended']) {\n        $issues[] = $info;\n      }\n    }\n\n    $sandbox- setParameter('updates', $issues);\n\n    if (!count($issues)) {\n      return TRUE;\n    }\n\n    $sec_updates = array_filter($issues, function ($info) {\n      return strpos($info['status_msg'], 'SECURITY') !== FALSE;\n    });\n\n    // Pure failure if all issues are security ones.\n    if (count($sec_updates) === count($issues)) {\n      return FALSE;\n    }\n    // Security updates and normal updates available.\n    elseif (count($sec_updates)) {\n      return Audit::WARNING_FAIL;\n    }\n\n    // Just normal updates available.\n    return Audit::WARNING;\n  }", 
            "title": "Source"
        }, 
        {
            "location": "/audits/DrutinyAuditDrupal/#moduleversion", 
            "text": "Check the version of Drupal project in a site.  Class:  Drutiny\\Audit\\Drupal\\ModuleVersion \nExtends:  Drutiny\\Audit \nPackage:  drutiny/drutiny", 
            "title": "ModuleVersion"
        }, 
        {
            "location": "/audits/DrutinyAuditDrupal/#policies_3", 
            "text": "These are the policies that use this class:     Name  Title      Drupal-7:SA-CORE-2013-003  CSS Aggregation", 
            "title": "Policies"
        }, 
        {
            "location": "/audits/DrutinyAuditDrupal/#parameters_3", 
            "text": "Name  Type  Description  Default      module  string  The module to version information for  null    version  string  The static version to check against.  null    comparator  string  How to compare the version (greaterThan, greaterThanOrEqualTo, lessThan etc. See https://github.com/composer/semver)  greaterThanOrEqualTo", 
            "title": "Parameters"
        }, 
        {
            "location": "/audits/DrutinyAuditDrupal/#tokens_4", 
            "text": "Name  Type  Description  Default      module  string  The module to version information for  null    version  string  The static version to check against.  null    comparator  string  How to compare the version (greaterThan, greaterThanOrEqualTo, lessThan etc. See https://github.com/composer/semver)  greaterThanOrEqualTo", 
            "title": "Tokens"
        }, 
        {
            "location": "/audits/DrutinyAuditDrupal/#source_4", 
            "text": "public function audit(Sandbox $sandbox)\n  {\n    $module = $sandbox- getParameter('module');\n    $version = $sandbox- getParameter('version');\n    $comparator_method = $sandbox- getParameter('comparator');\n\n    if (!method_exists( Composer\\Semver\\Comparator , $comparator_method)) {\n      throw new \\Exception( Comparator method not available: $comparator_method );\n    }\n\n    $info = $sandbox- drush(['format' =  'json'])- pmList();\n\n    if (!isset($info[$module])) {\n      return Audit::NOT_APPLICABLE;\n    }\n\n    $current_version = strtolower($info[$module]['version']);\n    $sandbox- setParameter('current_version', $current_version);\n\n    $sandbox- logger()- info( $comparator_method($current_version, $version) );\n\n    return call_user_func( Composer\\Semver\\Comparator::$comparator_method , $current_version, $version);\n  }", 
            "title": "Source"
        }, 
        {
            "location": "/audits/DrutinyAuditDrupal/#phplint", 
            "text": "Run PHP lint over PHP files in a directory.  Class:  Drutiny\\Audit\\Drupal\\PhpLint \nExtends:  Drutiny\\Audit \nPackage:  drutiny/drutiny", 
            "title": "PhpLint"
        }, 
        {
            "location": "/audits/DrutinyAuditDrupal/#policies_4", 
            "text": "These are the policies that use this class:     Name  Title      Drupal:LintTheme  Lint PHP files in Theme", 
            "title": "Policies"
        }, 
        {
            "location": "/audits/DrutinyAuditDrupal/#parameters_4", 
            "text": "Name  Type  Description  Default      path  string  The path where to lint PHP files.  '%root'", 
            "title": "Parameters"
        }, 
        {
            "location": "/audits/DrutinyAuditDrupal/#tokens_5", 
            "text": "Name  Type  Description  Default      path  string  The path where to lint PHP files.  '%root'    errors  array  An array of parse errors found.  {  }", 
            "title": "Tokens"
        }, 
        {
            "location": "/audits/DrutinyAuditDrupal/#source_5", 
            "text": "public function audit(Sandbox $sandbox) {\n    // find src/ -name \\*.php -exec php -l {} \\; 2 1 | grep 'PHP Parse error:'\n    $path = $sandbox- getParameter('path', '%root');\n    $stat = $sandbox- drush(['format' =  'json'])- status();\n\n    $path = strtr($path, $stat['%paths']);\n\n    $errors = $sandbox- exec( find $path -name \\*.php -exec php -l {} \\; 2 1 | grep 'PHP Parse error:' || true );\n    $errors = array_filter(explode(PHP_EOL, $errors));\n    $sandbox- setParameter('errors', $errors);\n    return count($errors) == 0;\n  }", 
            "title": "Source"
        }, 
        {
            "location": "/audits/DrutinyAuditDrupal/#sqlresultaudit", 
            "text": "Audit the first row returned from a SQL query.  Class:  Drutiny\\Audit\\Drupal\\SqlResultAudit \nExtends:  Drutiny\\Audit\\AbstractComparison \nPackage:  drutiny/drutiny", 
            "title": "SqlResultAudit"
        }, 
        {
            "location": "/audits/DrutinyAuditDrupal/#policies_5", 
            "text": "These are the policies that use this class:     Name  Title      Drupal:AnonSession  Anonymous sessions", 
            "title": "Policies"
        }, 
        {
            "location": "/audits/DrutinyAuditDrupal/#parameters_5", 
            "text": "Name  Type  Description  Default      query  string  The SQL query to run. Can use other parameters for variable replacement.  null    field  string  The name of the field in the result row to pull the value from  null    value  mixed  The value to compare against  null    comp_type  string  The comparison operator to use for the comparison.  '='    default_value  string  If no SQL result set is returned, what should the default value of the field be?  ''", 
            "title": "Parameters"
        }, 
        {
            "location": "/audits/DrutinyAuditDrupal/#tokens_6", 
            "text": "Name  Type  Description  Default      query  string  The SQL query to run. Can use other parameters for variable replacement.  null    field  string  The name of the field in the result row to pull the value from  null    value  mixed  The value to compare against  null    comp_type  string  The comparison operator to use for the comparison.  '='    default_value  string  If no SQL result set is returned, what should the default value of the field be?  ''    result  string  The comparison operator to use for the comparison.  null", 
            "title": "Tokens"
        }, 
        {
            "location": "/audits/DrutinyAuditDrupal/#source_6", 
            "text": "public function audit(Sandbox $sandbox)\n  {\n    $query = $sandbox- getParameter('query');\n\n    $tokens = [];\n    foreach ($sandbox- getParameterTokens() as $key =  $value) {\n        $tokens[':' . $key] = $value;\n    }\n    $query = strtr($query . ' \\G', $tokens);\n\n    if (!preg_match_all('/^SELECT (.*) FROM/', $query, $fields)) {\n      throw new \\Exception( Could not parse fields from SQL query: $query. );\n    }\n\n    $output = $sandbox- drush()- sqlq($query);\n    $results = [];\n\n    while ($line = array_shift($output))\n    {\n      if (preg_match('/^[\\*]+ ([0-9]+)\\. row [\\*]+$/', $line, $matches)) {\n        $idx = $matches[1];\n      }\n      else {\n        list($field, $value) = explode(':', trim($line), 2);\n        $results[$idx][$field] = $value;\n      }\n    }\n\n    $field = $sandbox- getParameter('field');\n\n    if (empty($results)) {\n      $results[] = [\n        $field =  $sandbox- getParameter('default_value'),\n      ];\n    }\n\n    $row = array_shift($results);\n\n    $field = $sandbox- getParameter('field');\n    if (!isset($row[$field])) {\n      throw new \\Exception( Did not find $field in SQL query: $query. );\n    }\n\n     $sandbox- setParameter('result', $row);\n\n    return $this- compare($sandbox- getParameter('value'), $row[$field], $sandbox);\n  }", 
            "title": "Source"
        }, 
        {
            "location": "/audits/DrutinyAuditDrupal/#statusinformation", 
            "text": "Drush Status Information  Class:  Drutiny\\Audit\\Drupal\\StatusInformation \nExtends:  Drutiny\\Audit \nPackage:  drutiny/drutiny", 
            "title": "StatusInformation"
        }, 
        {
            "location": "/audits/DrutinyAuditDrupal/#tokens_7", 
            "text": "Name  Type  Description  Default      status  array  The status object returned by drush.  null", 
            "title": "Tokens"
        }, 
        {
            "location": "/audits/DrutinyAuditDrupal/#source_7", 
            "text": "public function audit(Sandbox $sandbox) {\n    $stat = $sandbox- drush(['format' =  'json'])- status();\n    $sandbox- setParameter('status', $stat);\n\n    return Audit::NOTICE;\n  }", 
            "title": "Source"
        }, 
        {
            "location": "/audits/DrutinyAuditDrupal/#updatedbstatus", 
            "text": "Ensure all module updates have been applied.  Class:  Drutiny\\Audit\\Drupal\\UpdateDBStatus \nExtends:  Drutiny\\Audit \nPackage:  drutiny/drutiny", 
            "title": "UpdateDBStatus"
        }, 
        {
            "location": "/audits/DrutinyAuditDrupal/#policies_6", 
            "text": "These are the policies that use this class:     Name  Title      Drupal:updates  Database updates", 
            "title": "Policies"
        }, 
        {
            "location": "/audits/DrutinyAuditDrupal/#source_8", 
            "text": "public function audit(Sandbox $sandbox) {\n    $output = $sandbox- drush()- updb('-n');\n\n    if (strpos($output, 'No database updates required')  = 0 || empty($output)) {\n      return TRUE;\n    }\n    return FALSE;\n  }", 
            "title": "Source"
        }, 
        {
            "location": "/audits/DrutinyAuditFilesystem/", 
            "text": "CodeScan\n\n\nScan files in a directory for matching criteria.\n\n\nClass: \nDrutiny\\Audit\\Filesystem\\CodeScan\n\nExtends: \nDrutiny\\Audit\n\nPackage: \ndrutiny/drutiny\n\n\nPolicies\n\n\nThese are the policies that use this class:\n\n\n\n\n\n\n\n\nName\n\n\nTitle\n\n\n\n\n\n\n\n\n\n\nAcquia:SiteFactoryDefaultThemePath\n\n\nDrupal Theme Path References\n\n\n\n\n\n\nDrupal:ThemeSecurity\n\n\nDrupal Theme Security\n\n\n\n\n\n\n\n\nParameters\n\n\n\n\n\n\n\n\nName\n\n\nType\n\n\nDescription\n\n\nDefault\n\n\n\n\n\n\n\n\n\n\ndirectory\n\n\nstring\n\n\nAbsolute filepath to directory to scan\n\n\n'%root'\n\n\n\n\n\n\nexclude\n\n\narray\n\n\nAbsolute filepaths to directories omit from scanning\n\n\n{  }\n\n\n\n\n\n\nfiletypes\n\n\narray\n\n\nfile extensions to include in the scan\n\n\n{  }\n\n\n\n\n\n\npatterns\n\n\narray\n\n\npatterns to run over each matching file.\n\n\n{  }\n\n\n\n\n\n\nwhitelist\n\n\narray\n\n\nWhitelist patterns which the 'patterns' parameter may yield false positives from\n\n\n{  }\n\n\n\n\n\n\n\n\nTokens\n\n\n\n\n\n\n\n\nName\n\n\nType\n\n\nDescription\n\n\nDefault\n\n\n\n\n\n\n\n\n\n\ndirectory\n\n\nstring\n\n\nAbsolute filepath to directory to scan\n\n\n'%root'\n\n\n\n\n\n\nexclude\n\n\narray\n\n\nAbsolute filepaths to directories omit from scanning\n\n\n{  }\n\n\n\n\n\n\nfiletypes\n\n\narray\n\n\nfile extensions to include in the scan\n\n\n{  }\n\n\n\n\n\n\npatterns\n\n\narray\n\n\npatterns to run over each matching file.\n\n\n{  }\n\n\n\n\n\n\nwhitelist\n\n\narray\n\n\nWhitelist patterns which the 'patterns' parameter may yield false positives from\n\n\n{  }\n\n\n\n\n\n\nresults\n\n\narray\n\n\nAn array of results matching the scan criteria. Each match is an assoc array with the following keys: filepath, line, code, basename.\n\n\n{  }\n\n\n\n\n\n\n\n\nSource\n\n\n  public function audit(Sandbox $sandbox) {\n    $directory = $sandbox-\ngetParameter('directory', '%root');\n    $stat = $sandbox-\ndrush(['format' =\n 'json'])-\nstatus();\n\n    $directory =  strtr($directory, $stat['%paths']);\n\n    $command = ['find', $directory, '-type f'];\n\n    $types = $sandbox-\ngetParameter('filetypes', []);\n\n    if (!empty($types)) {\n      $conditions = [];\n      foreach ($types as $type) {\n        $conditions[] = '-iname \n*.' . $type . '\n';\n      }\n      $command[] = '\\( ' . implode(' -or ', $conditions) . ' \\)';\n    }\n\n    foreach ($sandbox-\ngetParameter('exclude', []) as $filepath) {\n      $filepath = strtr($filepath, $stat['%paths']);\n      $command[] = \n! -path '$filepath'\n;\n    }\n\n    $command[] = '| (xargs grep -nE';\n    $command[] = '\n' . implode('|', $sandbox-\ngetParameter('patterns', [])) . '\n || exit 0)';\n\n    $whitelist = $sandbox-\ngetParameter('whitelist', []);\n    if (!empty($whitelist)) {\n      $command[] = \n| (grep -vE '\n . implode('|', $whitelist) . \n' || exit 0)\n;\n    }\n\n\n    $command = implode(' ', $command);\n    $sandbox-\nlogger()-\ninfo('[' . __CLASS__ . '] ' . $command);\n    $output = $sandbox-\nexec($command);\n\n    if (empty($output)) {\n      return TRUE;\n    }\n\n    $matches = array_filter(explode(PHP_EOL, $output));\n    $matches = array_map(function ($line) {\n      list($filepath, $line_number, $code) = explode(':', $line, 3);\n      return [\n        'file' =\n $filepath,\n        'line' =\n $line_number,\n        'code' =\n trim($code),\n        'basename' =\n basename($filepath)\n      ];\n    }, $matches);\n\n    $results = [\n      'found' =\n count($matches),\n      'findings' =\n $matches,\n      'filepaths' =\n array_values(array_unique(array_map(function ($match) use ($stat) {\n        return str_replace($stat['%paths']['%root'], '', $match['file']);\n      }, $matches)))\n    ];\n\n    $sandbox-\nsetParameter('results', $results);\n\n    return empty($matches);\n  }\n\n\n\n\n\nFsSize\n\n\nLarge files\n\n\nClass: \nDrutiny\\Audit\\Filesystem\\FsSize\n\nExtends: \nDrutiny\\Audit\n\nPackage: \ndrutiny/drutiny\n\n\nPolicies\n\n\nThese are the policies that use this class:\n\n\n\n\n\n\n\n\nName\n\n\nTitle\n\n\n\n\n\n\n\n\n\n\nAcquia:SiteFactory:DrupalThemeDirectory\n\n\nACSF Drupal Theme Directory Size\n\n\n\n\n\n\nfs:DrupalThemeDirectory\n\n\nDrupal Theme Directory Size\n\n\n\n\n\n\n\n\nParameters\n\n\n\n\n\n\n\n\nName\n\n\nType\n\n\nDescription\n\n\nDefault\n\n\n\n\n\n\n\n\n\n\nmax_size\n\n\ninteger\n\n\nThe maximum size in MegaBytes a directory should be.\n\n\n20\n\n\n\n\n\n\npath\n\n\nstring\n\n\nThe path of the directory to check for size.\n\n\nnull\n\n\n\n\n\n\n\n\nTokens\n\n\n\n\n\n\n\n\nName\n\n\nType\n\n\nDescription\n\n\nDefault\n\n\n\n\n\n\n\n\n\n\nmax_size\n\n\ninteger\n\n\nThe maximum size in MegaBytes a directory should be.\n\n\n20\n\n\n\n\n\n\npath\n\n\nstring\n\n\nThe path of the directory to check for size.\n\n\nnull\n\n\n\n\n\n\n\n\nSource\n\n\n  public function audit(Sandbox $sandbox) {\n    $path = $sandbox-\ngetParameter('path', '%files');\n    $stat = $sandbox-\ndrush(['format' =\n 'json'])-\nstatus();\n\n    $path = strtr($path, $stat['%paths']);\n\n    $size = $sandbox-\nexec(\ndu -d 0 $path | awk '{print $1}'\n);\n\n    $max_size = (int) $sandbox-\ngetParameter('max_size', 20);\n\n    // Set the size in MB for rendering\n    $sandbox-\nsetParameter('size', ceil($size * 1024 * 1024));\n    // Set the actual path.\n    $sandbox-\nsetParameter('path', $path);\n\n    // Convert max_size into bytes.\n    $max_size = $max_size * 1024 * 1024;\n\n    return $size \n $max_size;\n  }\n\n\n\n\n\nLargeFiles\n\n\nLarge files\n\n\nClass: \nDrutiny\\Audit\\Filesystem\\LargeFiles\n\nExtends: \nDrutiny\\Audit\n\nPackage: \ndrutiny/drutiny\n\n\nPolicies\n\n\nThese are the policies that use this class:\n\n\n\n\n\n\n\n\nName\n\n\nTitle\n\n\n\n\n\n\n\n\n\n\nfs:largeFiles\n\n\nLarge public files\n\n\n\n\n\n\n\n\nParameters\n\n\n\n\n\n\n\n\nName\n\n\nType\n\n\nDescription\n\n\nDefault\n\n\n\n\n\n\n\n\n\n\nmax_size\n\n\ninteger\n\n\nReport files larger than this value measured in megabytes.\n\n\n20\n\n\n\n\n\n\n\n\nTokens\n\n\n\n\n\n\n\n\nName\n\n\nType\n\n\nDescription\n\n\nDefault\n\n\n\n\n\n\n\n\n\n\nmax_size\n\n\ninteger\n\n\nReport files larger than this value measured in megabytes.\n\n\n20\n\n\n\n\n\n\nissues\n\n\narray\n\n\nA list of files that reach the max file size.\n\n\nnull\n\n\n\n\n\n\nplural\n\n\nstring\n\n\nThis variable will contain an 's' if there is more than one issue found.\n\n\n''\n\n\n\n\n\n\n\n\nSource\n\n\n  public function audit(Sandbox $sandbox) {\n    $stat = $sandbox-\ndrush(['format' =\n 'json'])-\nstatus();\n\n    $root = $stat['root'];\n    $files = $stat['files'];\n\n    $max_size = (int) $sandbox-\ngetParameter('max_size', 20);\n\n    $command = \nfind @location -type f -size +@sizeM -printf '@print-format'\n;\n    $command .= \n | sort -nr\n;\n    $command = strtr($command, [\n      '@location' =\n \n{$root}/{$files}/\n,\n      '@size' =\n $max_size,\n      '@print-format' =\n '%k\\t%p\\n',\n    ]);\n\n    $output = $sandbox-\nexec($command);\n\n    if (empty($output)) {\n      return TRUE;\n    }\n\n    // Output from find is a giant string with newlines to seperate the files.\n    $rows = array_map(function ($line) {\n      $parts = array_map('trim', explode(\n\\t\n, $line));\n      $size = number_format((float) $parts[0] / 1024, 2);\n      $filename = trim($parts[1]);\n      return \n{$filename} [{$size} MB]\n;\n    },\n    array_filter(explode(\n\\n\n, $output)));\n\n    $sandbox-\nsetParameter('issues', $rows);\n    $sandbox-\nsetParameter('plural', count($rows) \n 1 ? 's' : '');\n\n    return Audit::WARNING;\n  }\n\n\n\n\n\nSensitivePublicFiles\n\n\nSensitive public files\n\n\nClass: \nDrutiny\\Audit\\Filesystem\\SensitivePublicFiles\n\nExtends: \nDrutiny\\Audit\n\nPackage: \ndrutiny/drutiny\n\n\nPolicies\n\n\nThese are the policies that use this class:\n\n\n\n\n\n\n\n\nName\n\n\nTitle\n\n\n\n\n\n\n\n\n\n\nfs:SensitivePublicFiles\n\n\nSensitive public files\n\n\n\n\n\n\n\n\nParameters\n\n\n\n\n\n\n\n\nName\n\n\nType\n\n\nDescription\n\n\nDefault\n\n\n\n\n\n\n\n\n\n\nextensions\n\n\nstring\n\n\nThe sensitive file extensions to look for.\n\n\nnull\n\n\n\n\n\n\n\n\nTokens\n\n\n\n\n\n\n\n\nName\n\n\nType\n\n\nDescription\n\n\nDefault\n\n\n\n\n\n\n\n\n\n\nextensions\n\n\nstring\n\n\nThe sensitive file extensions to look for.\n\n\nnull\n\n\n\n\n\n\nissues\n\n\narray\n\n\nA list of files that reach the max file size.\n\n\nnull\n\n\n\n\n\n\nplural\n\n\nstring\n\n\nThis variable will contain an 's' if there is more than one issue found.\n\n\n''\n\n\n\n\n\n\n\n\nSource\n\n\n  public function audit(Sandbox $sandbox) {\n    $stat = $sandbox-\ndrush(['format' =\n 'json'])-\nstatus();\n\n    $root = $stat['root'];\n    $files = $stat['files'];\n\n    $extensions = $sandbox-\ngetParameter('extensions');\n    $extensions = array_map('trim', explode(',', $extensions));\n\n    // Output is in the format:\n    //\n    // 7048 ./iStock_000017426795Large-2.jpg\n    // 6370 ./portrait-small-1.png\n    //\n    // Note, the size is in KB in the response, we convert to MB later on in\n    // this check.\n\n    $command = \ncd @location ; find . -type f \\( @name-lookups \\) -printf '@print-format'\n;\n    $command .= \n | grep -v -E '/js/js_|/css/css_|/php/twig/|/php/html_purifier_serializer/' | sort -nr\n;\n    $command = strtr($command, [\n      '@location' =\n \n{$root}/{$files}/\n,\n      '@name-lookups' =\n \n-name '*.\n . implode(\n' -o -name '*.\n, $extensions) . \n'\n,\n      '@print-format' =\n '%k\\t%p\\n',\n    ]);\n\n    $output = $sandbox-\nexec($command);\n\n    if (empty($output)) {\n      return Audit::SUCCESS;\n    }\n\n    // Output from find is a giant string with newlines to separate the files.\n    $rows = array_map(function ($line) {\n      $parts = array_map('trim', explode(\n\\t\n, $line));\n      $size = number_format((float) $parts[0] / 1024, 2);\n      $filename = trim($parts[1]);\n      return \n{$filename} [{$size} MB]\n;\n    },\n    array_filter(explode(\n\\n\n, $output)));\n\n    $sandbox-\nsetParameter('issues', $rows);\n    $sandbox-\nsetParameter('plural', count($rows) \n 1 ? 's' : '');\n\n    return Audit::FAIL;\n  }", 
            "title": "Filesystem"
        }, 
        {
            "location": "/audits/DrutinyAuditFilesystem/#codescan", 
            "text": "Scan files in a directory for matching criteria.  Class:  Drutiny\\Audit\\Filesystem\\CodeScan \nExtends:  Drutiny\\Audit \nPackage:  drutiny/drutiny", 
            "title": "CodeScan"
        }, 
        {
            "location": "/audits/DrutinyAuditFilesystem/#policies", 
            "text": "These are the policies that use this class:     Name  Title      Acquia:SiteFactoryDefaultThemePath  Drupal Theme Path References    Drupal:ThemeSecurity  Drupal Theme Security", 
            "title": "Policies"
        }, 
        {
            "location": "/audits/DrutinyAuditFilesystem/#parameters", 
            "text": "Name  Type  Description  Default      directory  string  Absolute filepath to directory to scan  '%root'    exclude  array  Absolute filepaths to directories omit from scanning  {  }    filetypes  array  file extensions to include in the scan  {  }    patterns  array  patterns to run over each matching file.  {  }    whitelist  array  Whitelist patterns which the 'patterns' parameter may yield false positives from  {  }", 
            "title": "Parameters"
        }, 
        {
            "location": "/audits/DrutinyAuditFilesystem/#tokens", 
            "text": "Name  Type  Description  Default      directory  string  Absolute filepath to directory to scan  '%root'    exclude  array  Absolute filepaths to directories omit from scanning  {  }    filetypes  array  file extensions to include in the scan  {  }    patterns  array  patterns to run over each matching file.  {  }    whitelist  array  Whitelist patterns which the 'patterns' parameter may yield false positives from  {  }    results  array  An array of results matching the scan criteria. Each match is an assoc array with the following keys: filepath, line, code, basename.  {  }", 
            "title": "Tokens"
        }, 
        {
            "location": "/audits/DrutinyAuditFilesystem/#source", 
            "text": "public function audit(Sandbox $sandbox) {\n    $directory = $sandbox- getParameter('directory', '%root');\n    $stat = $sandbox- drush(['format' =  'json'])- status();\n\n    $directory =  strtr($directory, $stat['%paths']);\n\n    $command = ['find', $directory, '-type f'];\n\n    $types = $sandbox- getParameter('filetypes', []);\n\n    if (!empty($types)) {\n      $conditions = [];\n      foreach ($types as $type) {\n        $conditions[] = '-iname  *.' . $type . ' ';\n      }\n      $command[] = '\\( ' . implode(' -or ', $conditions) . ' \\)';\n    }\n\n    foreach ($sandbox- getParameter('exclude', []) as $filepath) {\n      $filepath = strtr($filepath, $stat['%paths']);\n      $command[] =  ! -path '$filepath' ;\n    }\n\n    $command[] = '| (xargs grep -nE';\n    $command[] = ' ' . implode('|', $sandbox- getParameter('patterns', [])) . '  || exit 0)';\n\n    $whitelist = $sandbox- getParameter('whitelist', []);\n    if (!empty($whitelist)) {\n      $command[] =  | (grep -vE '  . implode('|', $whitelist) .  ' || exit 0) ;\n    }\n\n\n    $command = implode(' ', $command);\n    $sandbox- logger()- info('[' . __CLASS__ . '] ' . $command);\n    $output = $sandbox- exec($command);\n\n    if (empty($output)) {\n      return TRUE;\n    }\n\n    $matches = array_filter(explode(PHP_EOL, $output));\n    $matches = array_map(function ($line) {\n      list($filepath, $line_number, $code) = explode(':', $line, 3);\n      return [\n        'file' =  $filepath,\n        'line' =  $line_number,\n        'code' =  trim($code),\n        'basename' =  basename($filepath)\n      ];\n    }, $matches);\n\n    $results = [\n      'found' =  count($matches),\n      'findings' =  $matches,\n      'filepaths' =  array_values(array_unique(array_map(function ($match) use ($stat) {\n        return str_replace($stat['%paths']['%root'], '', $match['file']);\n      }, $matches)))\n    ];\n\n    $sandbox- setParameter('results', $results);\n\n    return empty($matches);\n  }", 
            "title": "Source"
        }, 
        {
            "location": "/audits/DrutinyAuditFilesystem/#fssize", 
            "text": "Large files  Class:  Drutiny\\Audit\\Filesystem\\FsSize \nExtends:  Drutiny\\Audit \nPackage:  drutiny/drutiny", 
            "title": "FsSize"
        }, 
        {
            "location": "/audits/DrutinyAuditFilesystem/#policies_1", 
            "text": "These are the policies that use this class:     Name  Title      Acquia:SiteFactory:DrupalThemeDirectory  ACSF Drupal Theme Directory Size    fs:DrupalThemeDirectory  Drupal Theme Directory Size", 
            "title": "Policies"
        }, 
        {
            "location": "/audits/DrutinyAuditFilesystem/#parameters_1", 
            "text": "Name  Type  Description  Default      max_size  integer  The maximum size in MegaBytes a directory should be.  20    path  string  The path of the directory to check for size.  null", 
            "title": "Parameters"
        }, 
        {
            "location": "/audits/DrutinyAuditFilesystem/#tokens_1", 
            "text": "Name  Type  Description  Default      max_size  integer  The maximum size in MegaBytes a directory should be.  20    path  string  The path of the directory to check for size.  null", 
            "title": "Tokens"
        }, 
        {
            "location": "/audits/DrutinyAuditFilesystem/#source_1", 
            "text": "public function audit(Sandbox $sandbox) {\n    $path = $sandbox- getParameter('path', '%files');\n    $stat = $sandbox- drush(['format' =  'json'])- status();\n\n    $path = strtr($path, $stat['%paths']);\n\n    $size = $sandbox- exec( du -d 0 $path | awk '{print $1}' );\n\n    $max_size = (int) $sandbox- getParameter('max_size', 20);\n\n    // Set the size in MB for rendering\n    $sandbox- setParameter('size', ceil($size * 1024 * 1024));\n    // Set the actual path.\n    $sandbox- setParameter('path', $path);\n\n    // Convert max_size into bytes.\n    $max_size = $max_size * 1024 * 1024;\n\n    return $size   $max_size;\n  }", 
            "title": "Source"
        }, 
        {
            "location": "/audits/DrutinyAuditFilesystem/#largefiles", 
            "text": "Large files  Class:  Drutiny\\Audit\\Filesystem\\LargeFiles \nExtends:  Drutiny\\Audit \nPackage:  drutiny/drutiny", 
            "title": "LargeFiles"
        }, 
        {
            "location": "/audits/DrutinyAuditFilesystem/#policies_2", 
            "text": "These are the policies that use this class:     Name  Title      fs:largeFiles  Large public files", 
            "title": "Policies"
        }, 
        {
            "location": "/audits/DrutinyAuditFilesystem/#parameters_2", 
            "text": "Name  Type  Description  Default      max_size  integer  Report files larger than this value measured in megabytes.  20", 
            "title": "Parameters"
        }, 
        {
            "location": "/audits/DrutinyAuditFilesystem/#tokens_2", 
            "text": "Name  Type  Description  Default      max_size  integer  Report files larger than this value measured in megabytes.  20    issues  array  A list of files that reach the max file size.  null    plural  string  This variable will contain an 's' if there is more than one issue found.  ''", 
            "title": "Tokens"
        }, 
        {
            "location": "/audits/DrutinyAuditFilesystem/#source_2", 
            "text": "public function audit(Sandbox $sandbox) {\n    $stat = $sandbox- drush(['format' =  'json'])- status();\n\n    $root = $stat['root'];\n    $files = $stat['files'];\n\n    $max_size = (int) $sandbox- getParameter('max_size', 20);\n\n    $command =  find @location -type f -size +@sizeM -printf '@print-format' ;\n    $command .=   | sort -nr ;\n    $command = strtr($command, [\n      '@location' =   {$root}/{$files}/ ,\n      '@size' =  $max_size,\n      '@print-format' =  '%k\\t%p\\n',\n    ]);\n\n    $output = $sandbox- exec($command);\n\n    if (empty($output)) {\n      return TRUE;\n    }\n\n    // Output from find is a giant string with newlines to seperate the files.\n    $rows = array_map(function ($line) {\n      $parts = array_map('trim', explode( \\t , $line));\n      $size = number_format((float) $parts[0] / 1024, 2);\n      $filename = trim($parts[1]);\n      return  {$filename} [{$size} MB] ;\n    },\n    array_filter(explode( \\n , $output)));\n\n    $sandbox- setParameter('issues', $rows);\n    $sandbox- setParameter('plural', count($rows)   1 ? 's' : '');\n\n    return Audit::WARNING;\n  }", 
            "title": "Source"
        }, 
        {
            "location": "/audits/DrutinyAuditFilesystem/#sensitivepublicfiles", 
            "text": "Sensitive public files  Class:  Drutiny\\Audit\\Filesystem\\SensitivePublicFiles \nExtends:  Drutiny\\Audit \nPackage:  drutiny/drutiny", 
            "title": "SensitivePublicFiles"
        }, 
        {
            "location": "/audits/DrutinyAuditFilesystem/#policies_3", 
            "text": "These are the policies that use this class:     Name  Title      fs:SensitivePublicFiles  Sensitive public files", 
            "title": "Policies"
        }, 
        {
            "location": "/audits/DrutinyAuditFilesystem/#parameters_3", 
            "text": "Name  Type  Description  Default      extensions  string  The sensitive file extensions to look for.  null", 
            "title": "Parameters"
        }, 
        {
            "location": "/audits/DrutinyAuditFilesystem/#tokens_3", 
            "text": "Name  Type  Description  Default      extensions  string  The sensitive file extensions to look for.  null    issues  array  A list of files that reach the max file size.  null    plural  string  This variable will contain an 's' if there is more than one issue found.  ''", 
            "title": "Tokens"
        }, 
        {
            "location": "/audits/DrutinyAuditFilesystem/#source_3", 
            "text": "public function audit(Sandbox $sandbox) {\n    $stat = $sandbox- drush(['format' =  'json'])- status();\n\n    $root = $stat['root'];\n    $files = $stat['files'];\n\n    $extensions = $sandbox- getParameter('extensions');\n    $extensions = array_map('trim', explode(',', $extensions));\n\n    // Output is in the format:\n    //\n    // 7048 ./iStock_000017426795Large-2.jpg\n    // 6370 ./portrait-small-1.png\n    //\n    // Note, the size is in KB in the response, we convert to MB later on in\n    // this check.\n\n    $command =  cd @location ; find . -type f \\( @name-lookups \\) -printf '@print-format' ;\n    $command .=   | grep -v -E '/js/js_|/css/css_|/php/twig/|/php/html_purifier_serializer/' | sort -nr ;\n    $command = strtr($command, [\n      '@location' =   {$root}/{$files}/ ,\n      '@name-lookups' =   -name '*.  . implode( ' -o -name '*. , $extensions) .  ' ,\n      '@print-format' =  '%k\\t%p\\n',\n    ]);\n\n    $output = $sandbox- exec($command);\n\n    if (empty($output)) {\n      return Audit::SUCCESS;\n    }\n\n    // Output from find is a giant string with newlines to separate the files.\n    $rows = array_map(function ($line) {\n      $parts = array_map('trim', explode( \\t , $line));\n      $size = number_format((float) $parts[0] / 1024, 2);\n      $filename = trim($parts[1]);\n      return  {$filename} [{$size} MB] ;\n    },\n    array_filter(explode( \\n , $output)));\n\n    $sandbox- setParameter('issues', $rows);\n    $sandbox- setParameter('plural', count($rows)   1 ? 's' : '');\n\n    return Audit::FAIL;\n  }", 
            "title": "Source"
        }, 
        {
            "location": "/audits/DrutinyAuditTemplate/", 
            "text": "SampleAudit\n\n\nA template audit class to implement a real audit from.\n\n\nClass: \nDrutiny\\Audit\\Template\\SampleAudit\n\nExtends: \nDrutiny\\Audit\n\nPackage: \ndrutiny/drutiny\n\n\nParameters\n\n\n\n\n\n\n\n\nName\n\n\nType\n\n\nDescription\n\n\nDefault\n\n\n\n\n\n\n\n\n\n\nfoo\n\n\nstring\n\n\narray\n\n\ninteger\n\n\n\n\n\n\n\n\nTokens\n\n\n\n\n\n\n\n\nName\n\n\nType\n\n\nDescription\n\n\nDefault\n\n\n\n\n\n\n\n\n\n\nfoo\n\n\nstring\n\n\narray\n\n\ninteger\n\n\n\n\n\n\ndata\n\n\narray\n\n\nAn array that maybe used by a policy in the outcome messaging.\n\n\n{  }\n\n\n\n\n\n\n\n\nSource\n\n\n  public function audit(Sandbox $sandbox)\n  {\n    // Example usage of Parameters and Tokens.\n    // See annotations in class doc block.\n    $foo = $sandbox-\ngetParameter('foo');\n    $sandbox-\nsetParameter('data', [$foo]);\n    // TODO: Write audit.\n    throw new \\Exception(\nAudit needs to be created.\n);\n  }\n\n\n\n\n\nSampleRemediableAudit\n\n\nA template audit class to implement a real audit from.\n\n\nClass: \nDrutiny\\Audit\\Template\\SampleRemediableAudit\n\nExtends: \nDrutiny\\Audit\n\nPackage: \ndrutiny/drutiny\n\n\nThis class can \nremediate\n failed audits.\n\n\nParameters\n\n\n\n\n\n\n\n\nName\n\n\nType\n\n\nDescription\n\n\nDefault\n\n\n\n\n\n\n\n\n\n\nfoo\n\n\nstring\n\n\narray\n\n\ninteger\n\n\n\n\n\n\n\n\nTokens\n\n\n\n\n\n\n\n\nName\n\n\nType\n\n\nDescription\n\n\nDefault\n\n\n\n\n\n\n\n\n\n\nfoo\n\n\nstring\n\n\narray\n\n\ninteger\n\n\n\n\n\n\ndata\n\n\narray\n\n\nAn array that maybe used by a policy in the outcome messaging.\n\n\n{  }\n\n\n\n\n\n\n\n\nSource\n\n\n  public function audit(Sandbox $sandbox)\n  {\n    // Example usage of Parameters and Tokens.\n    // See annotations in class doc block.\n    $foo = $sandbox-\ngetParameter('foo');\n    $sandbox-\nsetParameter('data', [$foo]);\n    // TODO: Write audit.\n    throw new \\Exception(\nAudit needs to be created.\n);\n  }", 
            "title": "Template"
        }, 
        {
            "location": "/audits/DrutinyAuditTemplate/#sampleaudit", 
            "text": "A template audit class to implement a real audit from.  Class:  Drutiny\\Audit\\Template\\SampleAudit \nExtends:  Drutiny\\Audit \nPackage:  drutiny/drutiny", 
            "title": "SampleAudit"
        }, 
        {
            "location": "/audits/DrutinyAuditTemplate/#parameters", 
            "text": "Name  Type  Description  Default      foo  string  array  integer", 
            "title": "Parameters"
        }, 
        {
            "location": "/audits/DrutinyAuditTemplate/#tokens", 
            "text": "Name  Type  Description  Default      foo  string  array  integer    data  array  An array that maybe used by a policy in the outcome messaging.  {  }", 
            "title": "Tokens"
        }, 
        {
            "location": "/audits/DrutinyAuditTemplate/#source", 
            "text": "public function audit(Sandbox $sandbox)\n  {\n    // Example usage of Parameters and Tokens.\n    // See annotations in class doc block.\n    $foo = $sandbox- getParameter('foo');\n    $sandbox- setParameter('data', [$foo]);\n    // TODO: Write audit.\n    throw new \\Exception( Audit needs to be created. );\n  }", 
            "title": "Source"
        }, 
        {
            "location": "/audits/DrutinyAuditTemplate/#sampleremediableaudit", 
            "text": "A template audit class to implement a real audit from.  Class:  Drutiny\\Audit\\Template\\SampleRemediableAudit \nExtends:  Drutiny\\Audit \nPackage:  drutiny/drutiny  This class can  remediate  failed audits.", 
            "title": "SampleRemediableAudit"
        }, 
        {
            "location": "/audits/DrutinyAuditTemplate/#parameters_1", 
            "text": "Name  Type  Description  Default      foo  string  array  integer", 
            "title": "Parameters"
        }, 
        {
            "location": "/audits/DrutinyAuditTemplate/#tokens_1", 
            "text": "Name  Type  Description  Default      foo  string  array  integer    data  array  An array that maybe used by a policy in the outcome messaging.  {  }", 
            "title": "Tokens"
        }, 
        {
            "location": "/audits/DrutinyAuditTemplate/#source_1", 
            "text": "public function audit(Sandbox $sandbox)\n  {\n    // Example usage of Parameters and Tokens.\n    // See annotations in class doc block.\n    $foo = $sandbox- getParameter('foo');\n    $sandbox- setParameter('data', [$foo]);\n    // TODO: Write audit.\n    throw new \\Exception( Audit needs to be created. );\n  }", 
            "title": "Source"
        }, 
        {
            "location": "/audits/DrutinyCloudflareAudit/", 
            "text": "ApiEnabledAudit\n\n\nClass: \nDrutiny\\Cloudflare\\Audit\\ApiEnabledAudit\n\nExtends: \nDrutiny\\Audit\n\nPackage: \ndrutiny/cloudflare\n\n\nNOTE\n: This Audit is \nabstract\n and cannot be used directly by a policy.\n\n\nPageRuleMatch\n\n\nClass: \nDrutiny\\Cloudflare\\Audit\\PageRuleMatch\n\nExtends: \nDrutiny\\Cloudflare\\Audit\\ApiEnabledAudit\n\nPackage: \ndrutiny/cloudflare\n\n\nPolicies\n\n\nThese are the policies that use this class:\n\n\n\n\n\n\n\n\nName\n\n\nTitle\n\n\n\n\n\n\n\n\n\n\ncloudflare:redirect_apex\n\n\nCloudflare redirect Apex to primary domain\n\n\n\n\n\n\ncloudflare:always_use_https\n\n\nCloudflare always use HTTPS\n\n\n\n\n\n\ncloudflare:drupal-urlGenerator-workaround\n\n\n#2819197 - Cloudflare workaround for Drupal 8 urlGenerator\n\n\n\n\n\n\n\n\nParameters\n\n\n\n\n\n\n\n\nName\n\n\nType\n\n\nDescription\n\n\nDefault\n\n\n\n\n\n\n\n\n\n\nzone\n\n\nstring\n\n\nThe apex domain registered with Cloudflare.\n\n\nnull\n\n\n\n\n\n\nrule\n\n\nstring\n\n\nThe page rule pattern to look up.\n\n\nnull\n\n\n\n\n\n\nsettings\n\n\narray\n\n\nA keyed list of actions the page rule should action.\n\n\nnull\n\n\n\n\n\n\n\n\nTokens\n\n\n\n\n\n\n\n\nName\n\n\nType\n\n\nDescription\n\n\nDefault\n\n\n\n\n\n\n\n\n\n\nzone\n\n\nstring\n\n\nThe apex domain registered with Cloudflare.\n\n\nnull\n\n\n\n\n\n\nrule\n\n\nstring\n\n\nThe page rule pattern to look up.\n\n\nnull\n\n\n\n\n\n\nsettings\n\n\narray\n\n\nA keyed list of actions the page rule should action.\n\n\nnull\n\n\n\n\n\n\nactions\n\n\narray\n\n\nA keyed list of actions the page rule contains.\n\n\nnull\n\n\n\n\n\n\nextra_actions\n\n\narray\n\n\nA keyed list of actions the page rule contains that are not listed in the settings parameter.\n\n\nnull\n\n\n\n\n\n\ninvalid_actions\n\n\narray\n\n\nA keyed list of actions the page rule that don't match the values set in the settings parameter.\n\n\nnull\n\n\n\n\n\n\n\n\nSource\n\n\n  public function audit(Sandbox $sandbox)\n  {\n    $uri = $sandbox-\ndrush()-\ngetGlobalDefaultOption('uri');\n    $host = strpos($uri, 'http') === 0 ? parse_url($uri, PHP_URL_HOST) : $uri;\n    $sandbox-\nsetParameter('host', $host);\n\n    $zone  = $this-\nzoneInfo($sandbox-\ngetParameter('zone', $host));\n    $sandbox-\nsetParameter('zone', $zone['name']);\n\n    $response = $this-\napi()-\nrequest('GET', \nzones/{$zone['id']}/pagerules\n);\n\n    // Create a reusable translation function to allow settings to use variables.\n    $t = function ($v) use ($zone, $host) {\n      return strtr($v, [\n        ':zone' =\n $zone['name'],\n        ':host' =\n $host\n      ]);\n    };\n\n    $constraint = $t($sandbox-\ngetParameter('rule'));\n    $sandbox-\nsetParameter('rule', $constraint);\n\n\n    $rules = array_filter($response['result'], function ($rule) use ($constraint) {\n      return $rule['targets'][0]['constraint']['value'] == $constraint;\n    });\n\n    if (!count($rules)) {\n      return FALSE;\n    }\n\n    // Build action array.\n    $rule = array_shift($rules);\n    foreach ($rule['actions'] as $action) {\n      $actions[$action['id']] = isset($action['value']) ? $action['value'] : TRUE;\n    }\n    $this-\nrecurKsort($actions);\n    $sandbox-\nsetParameter('actions', $actions);\n\n    // Build settings array.\n    $settings = $sandbox-\ngetParameter('settings');\n    if (isset($settings['forwarding_url'])) {\n      $settings['forwarding_url']['url'] = $t($settings['forwarding_url']['url']);\n    }\n    $this-\nrecurKsort($settings);\n    $sandbox-\nsetParameter('settings', $settings);\n\n    // Format parameters so that array_diff_(key|assoc) can do the correct job.\n    $settings = array_map(['Symfony\\Component\\Yaml\\Yaml', 'dump'], $settings);\n    $actions = array_map(['Symfony\\Component\\Yaml\\Yaml', 'dump'], $actions);\n\n    // Calculate the differences.\n    $extra_actions = array_diff_key($actions, $settings);\n    $test_actions = array_diff_key($actions, $extra_actions);\n    $invalid_actions = array_diff_assoc($test_actions, $settings);\n\n    // Format parameters so that array_diff_(key|assoc) can do the correct job.\n    $extra_actions = array_map(['Symfony\\Component\\Yaml\\Yaml', 'parse'], $extra_actions);\n    $invalid_actions = array_map(['Symfony\\Component\\Yaml\\Yaml', 'parse'], $invalid_actions);\n\n    $sandbox-\nsetParameter('extra_actions', $extra_actions);\n    $sandbox-\nsetParameter('invalid_actions', $invalid_actions);\n    $sandbox-\nsetParameter('invalid_actions_array', array_map(function ($key, $value) {\n      return ['id' =\n $key, 'value' =\n Yaml::dump($value)];\n    }, array_keys($invalid_actions), array_values($invalid_actions)));\n\n    $sandbox-\nsetParameter('settings_array', array_map(function ($key, $value) {\n      return ['id' =\n $key, 'value' =\n $value];\n    }, array_keys($settings), array_values($settings)));\n\n    $sandbox-\nlogger()-\ninfo(__CLASS__ . PHP_EOL . Yaml::dump(['parameters' =\n $sandbox-\ngetParameterTokens()], 6));\n\n    return empty($invalid_actions);\n  }", 
            "title": "Cloudflare "
        }, 
        {
            "location": "/audits/DrutinyCloudflareAudit/#apienabledaudit", 
            "text": "Class:  Drutiny\\Cloudflare\\Audit\\ApiEnabledAudit \nExtends:  Drutiny\\Audit \nPackage:  drutiny/cloudflare  NOTE : This Audit is  abstract  and cannot be used directly by a policy.", 
            "title": "ApiEnabledAudit"
        }, 
        {
            "location": "/audits/DrutinyCloudflareAudit/#pagerulematch", 
            "text": "Class:  Drutiny\\Cloudflare\\Audit\\PageRuleMatch \nExtends:  Drutiny\\Cloudflare\\Audit\\ApiEnabledAudit \nPackage:  drutiny/cloudflare", 
            "title": "PageRuleMatch"
        }, 
        {
            "location": "/audits/DrutinyCloudflareAudit/#policies", 
            "text": "These are the policies that use this class:     Name  Title      cloudflare:redirect_apex  Cloudflare redirect Apex to primary domain    cloudflare:always_use_https  Cloudflare always use HTTPS    cloudflare:drupal-urlGenerator-workaround  #2819197 - Cloudflare workaround for Drupal 8 urlGenerator", 
            "title": "Policies"
        }, 
        {
            "location": "/audits/DrutinyCloudflareAudit/#parameters", 
            "text": "Name  Type  Description  Default      zone  string  The apex domain registered with Cloudflare.  null    rule  string  The page rule pattern to look up.  null    settings  array  A keyed list of actions the page rule should action.  null", 
            "title": "Parameters"
        }, 
        {
            "location": "/audits/DrutinyCloudflareAudit/#tokens", 
            "text": "Name  Type  Description  Default      zone  string  The apex domain registered with Cloudflare.  null    rule  string  The page rule pattern to look up.  null    settings  array  A keyed list of actions the page rule should action.  null    actions  array  A keyed list of actions the page rule contains.  null    extra_actions  array  A keyed list of actions the page rule contains that are not listed in the settings parameter.  null    invalid_actions  array  A keyed list of actions the page rule that don't match the values set in the settings parameter.  null", 
            "title": "Tokens"
        }, 
        {
            "location": "/audits/DrutinyCloudflareAudit/#source", 
            "text": "public function audit(Sandbox $sandbox)\n  {\n    $uri = $sandbox- drush()- getGlobalDefaultOption('uri');\n    $host = strpos($uri, 'http') === 0 ? parse_url($uri, PHP_URL_HOST) : $uri;\n    $sandbox- setParameter('host', $host);\n\n    $zone  = $this- zoneInfo($sandbox- getParameter('zone', $host));\n    $sandbox- setParameter('zone', $zone['name']);\n\n    $response = $this- api()- request('GET',  zones/{$zone['id']}/pagerules );\n\n    // Create a reusable translation function to allow settings to use variables.\n    $t = function ($v) use ($zone, $host) {\n      return strtr($v, [\n        ':zone' =  $zone['name'],\n        ':host' =  $host\n      ]);\n    };\n\n    $constraint = $t($sandbox- getParameter('rule'));\n    $sandbox- setParameter('rule', $constraint);\n\n\n    $rules = array_filter($response['result'], function ($rule) use ($constraint) {\n      return $rule['targets'][0]['constraint']['value'] == $constraint;\n    });\n\n    if (!count($rules)) {\n      return FALSE;\n    }\n\n    // Build action array.\n    $rule = array_shift($rules);\n    foreach ($rule['actions'] as $action) {\n      $actions[$action['id']] = isset($action['value']) ? $action['value'] : TRUE;\n    }\n    $this- recurKsort($actions);\n    $sandbox- setParameter('actions', $actions);\n\n    // Build settings array.\n    $settings = $sandbox- getParameter('settings');\n    if (isset($settings['forwarding_url'])) {\n      $settings['forwarding_url']['url'] = $t($settings['forwarding_url']['url']);\n    }\n    $this- recurKsort($settings);\n    $sandbox- setParameter('settings', $settings);\n\n    // Format parameters so that array_diff_(key|assoc) can do the correct job.\n    $settings = array_map(['Symfony\\Component\\Yaml\\Yaml', 'dump'], $settings);\n    $actions = array_map(['Symfony\\Component\\Yaml\\Yaml', 'dump'], $actions);\n\n    // Calculate the differences.\n    $extra_actions = array_diff_key($actions, $settings);\n    $test_actions = array_diff_key($actions, $extra_actions);\n    $invalid_actions = array_diff_assoc($test_actions, $settings);\n\n    // Format parameters so that array_diff_(key|assoc) can do the correct job.\n    $extra_actions = array_map(['Symfony\\Component\\Yaml\\Yaml', 'parse'], $extra_actions);\n    $invalid_actions = array_map(['Symfony\\Component\\Yaml\\Yaml', 'parse'], $invalid_actions);\n\n    $sandbox- setParameter('extra_actions', $extra_actions);\n    $sandbox- setParameter('invalid_actions', $invalid_actions);\n    $sandbox- setParameter('invalid_actions_array', array_map(function ($key, $value) {\n      return ['id' =  $key, 'value' =  Yaml::dump($value)];\n    }, array_keys($invalid_actions), array_values($invalid_actions)));\n\n    $sandbox- setParameter('settings_array', array_map(function ($key, $value) {\n      return ['id' =  $key, 'value' =  $value];\n    }, array_keys($settings), array_values($settings)));\n\n    $sandbox- logger()- info(__CLASS__ . PHP_EOL . Yaml::dump(['parameters' =  $sandbox- getParameterTokens()], 6));\n\n    return empty($invalid_actions);\n  }", 
            "title": "Source"
        }, 
        {
            "location": "/audits/DrutinyHttpAudit/", 
            "text": "Http\n\n\nClass: \nDrutiny\\Http\\Audit\\Http\n\nExtends: \nDrutiny\\Audit\n\nPackage: \ndrutiny/http\n\n\nNOTE\n: This Audit is \nabstract\n and cannot be used directly by a policy.\n\n\nHttpHeaderExists\n\n\nClass: \nDrutiny\\Http\\Audit\\HttpHeaderExists\n\nExtends: \nDrutiny\\Http\\Audit\\Http\n\nPackage: \ndrutiny/http\n\n\nPolicies\n\n\nThese are the policies that use this class:\n\n\n\n\n\n\n\n\nName\n\n\nTitle\n\n\n\n\n\n\n\n\n\n\nHTTP:Content-Security-Policy\n\n\nHTTP Content-Security-Policy\n\n\n\n\n\n\nHTTP:HSTS\n\n\nHTTP HSTS\n\n\n\n\n\n\nHTTP:ReferrerPolicy\n\n\nHTTP Referrer Policy\n\n\n\n\n\n\nHTTP:X-Frame-Options\n\n\nHTTP X-Frame-Options\n\n\n\n\n\n\n\n\nParameters\n\n\n\n\n\n\n\n\nName\n\n\nType\n\n\nDescription\n\n\nDefault\n\n\n\n\n\n\n\n\n\n\nheader\n\n\nstring\n\n\nThe HTTP header to check the value of.\n\n\nnull\n\n\n\n\n\n\n\n\nTokens\n\n\n\n\n\n\n\n\nName\n\n\nType\n\n\nDescription\n\n\nDefault\n\n\n\n\n\n\n\n\n\n\nheader\n\n\nstring\n\n\nThe HTTP header to check the value of.\n\n\nnull\n\n\n\n\n\n\nheader_value\n\n\nstring\n\n\nThe value to check against.\n\n\nnull\n\n\n\n\n\n\n\n\nSource\n\n\n  public function audit(Sandbox $sandbox)\n  {\n    $res = $this-\ngetHttpResponse($sandbox);\n    if ($has_header = $res-\nhasHeader($sandbox-\ngetParameter('header'))) {\n        $headers = $res-\ngetHeader($sandbox-\ngetParameter('header'));\n        $sandbox-\nsetParameter('header_value', $headers[0]);\n    }\n    return $has_header;\n  }\n\n\n\n\n\nHttpHeaderMatch\n\n\nClass: \nDrutiny\\Http\\Audit\\HttpHeaderMatch\n\nExtends: \nDrutiny\\Http\\Audit\\Http\n\nPackage: \ndrutiny/http\n\n\nPolicies\n\n\nThese are the policies that use this class:\n\n\n\n\n\n\n\n\nName\n\n\nTitle\n\n\n\n\n\n\n\n\n\n\nAcquia:CloudEdgeCaching\n\n\nCloud Edge Caching\n\n\n\n\n\n\nHTTP:X-Content-Type-Options\n\n\nHTTP X-Content-Type-Options\n\n\n\n\n\n\nHTTP:X-XSS-Protection\n\n\nHTTP X-XSS-Protection\n\n\n\n\n\n\n\n\nParameters\n\n\n\n\n\n\n\n\nName\n\n\nType\n\n\nDescription\n\n\nDefault\n\n\n\n\n\n\n\n\n\n\nheader\n\n\nstring\n\n\nThe HTTP header to check the value of.\n\n\nnull\n\n\n\n\n\n\nheader_value\n\n\nstring\n\n\nThe value to check against.\n\n\nnull\n\n\n\n\n\n\n\n\nTokens\n\n\n\n\n\n\n\n\nName\n\n\nType\n\n\nDescription\n\n\nDefault\n\n\n\n\n\n\n\n\n\n\nheader\n\n\nstring\n\n\nThe HTTP header to check the value of.\n\n\nnull\n\n\n\n\n\n\nheader_value\n\n\nstring\n\n\nThe value to check against.\n\n\nnull\n\n\n\n\n\n\n\n\nSource\n\n\n  public function audit(Sandbox $sandbox)\n  {\n    $value = $sandbox-\ngetParameter('header_value');\n    $res = $this-\ngetHttpResponse($sandbox);\n    $header = $sandbox-\ngetParameter('header');\n\n    if (!$res-\nhasHeader($header)) {\n      return FALSE;\n    }\n    $headers = $res-\ngetHeader($header);\n    return $value == $headers[0];\n  }\n\n\n\n\n\nHttpHeaderNotExists\n\n\nClass: \nDrutiny\\Http\\Audit\\HttpHeaderNotExists\n\nExtends: \nDrutiny\\Http\\Audit\\HttpHeaderExists\n\nPackage: \ndrutiny/http\n\n\nPolicies\n\n\nThese are the policies that use this class:\n\n\n\n\n\n\n\n\nName\n\n\nTitle\n\n\n\n\n\n\n\n\n\n\nHTTP:X-Drupal-Cache-Tags\n\n\nX-Drupal-Cache-Tags Header Disabled\n\n\n\n\n\n\nHTTP:Authorization\n\n\nHTTP Authorization Disabled\n\n\n\n\n\n\n\n\nParameters\n\n\n\n\n\n\n\n\nName\n\n\nType\n\n\nDescription\n\n\nDefault\n\n\n\n\n\n\n\n\n\n\nheader\n\n\nstring\n\n\nThe HTTP header to check the value of.\n\n\nnull\n\n\n\n\n\n\n\n\nTokens\n\n\n\n\n\n\n\n\nName\n\n\nType\n\n\nDescription\n\n\nDefault\n\n\n\n\n\n\n\n\n\n\nheader\n\n\nstring\n\n\nThe HTTP header to check the value of.\n\n\nnull\n\n\n\n\n\n\nheader_value\n\n\nstring\n\n\nThe value to check against.\n\n\nnull\n\n\n\n\n\n\n\n\nSource\n\n\n  public function audit(Sandbox $sandbox)\n  {\n    return !parent::audit($sandbox);\n  }\n\n\n\n\n\nHttpHeaderRegex\n\n\nClass: \nDrutiny\\Http\\Audit\\HttpHeaderRegex\n\nExtends: \nDrutiny\\Http\\Audit\\Http\n\nPackage: \ndrutiny/http\n\n\nPolicies\n\n\nThese are the policies that use this class:\n\n\n\n\n\n\n\n\nName\n\n\nTitle\n\n\n\n\n\n\n\n\n\n\nHTTP:Cache-Control\n\n\nHTTP Cache-Control\n\n\n\n\n\n\n\n\nParameters\n\n\n\n\n\n\n\n\nName\n\n\nType\n\n\nDescription\n\n\nDefault\n\n\n\n\n\n\n\n\n\n\nheader\n\n\nstring\n\n\nThe HTTP header to check the value of.\n\n\nnull\n\n\n\n\n\n\nregex\n\n\nstring\n\n\nA regular expressions to validate the header value against.\n\n\nnull\n\n\n\n\n\n\n\n\nTokens\n\n\n\n\n\n\n\n\nName\n\n\nType\n\n\nDescription\n\n\nDefault\n\n\n\n\n\n\n\n\n\n\nheader\n\n\nstring\n\n\nThe HTTP header to check the value of.\n\n\nnull\n\n\n\n\n\n\nregex\n\n\nstring\n\n\nA regular expressions to validate the header value against.\n\n\nnull\n\n\n\n\n\n\n\n\nSource\n\n\n  public function audit(Sandbox $sandbox)\n  {\n    $regex = $sandbox-\ngetParameter('regex');\n    $regex = \n/$regex/\n;\n    $res = $this-\ngetHttpResponse($sandbox);\n    $header = $sandbox-\ngetParameter('header');\n\n    if (!$res-\nhasHeader($header)) {\n      return FALSE;\n    }\n    $headers = $res-\ngetHeader($header);\n    return preg_match($regex, $headers[0]);\n  }\n\n\n\n\n\nHttpStatusCode\n\n\nClass: \nDrutiny\\Http\\Audit\\HttpStatusCode\n\nExtends: \nDrutiny\\Http\\Audit\\Http\n\nPackage: \ndrutiny/http\n\n\nPolicies\n\n\nThese are the policies that use this class:\n\n\n\n\n\n\n\n\nName\n\n\nTitle\n\n\n\n\n\n\n\n\n\n\nHTTP:ValidSSL\n\n\nHTTPS Valid SSL Certificate\n\n\n\n\n\n\n\n\nParameters\n\n\n\n\n\n\n\n\nName\n\n\nType\n\n\nDescription\n\n\nDefault\n\n\n\n\n\n\n\n\n\n\nstatus_code\n\n\nstring\n\n\nThe expected status code from the HTTP response\n\n\n200\n\n\n\n\n\n\n\n\nTokens\n\n\n\n\n\n\n\n\nName\n\n\nType\n\n\nDescription\n\n\nDefault\n\n\n\n\n\n\n\n\n\n\nstatus_code\n\n\nstring\n\n\nThe expected status code from the HTTP response\n\n\n200\n\n\n\n\n\n\n\n\nSource\n\n\n  public function audit(Sandbox $sandbox)\n  {\n    $status_code = $sandbox-\ngetParameter('status_code', 200);\n    $res = $this-\ngetHttpResponse($sandbox);\n    return $status_code == $res-\ngetStatusCode();\n  }\n\n\n\n\n\nHttpsRedirect\n\n\nClass: \nDrutiny\\Http\\Audit\\HttpsRedirect\n\nExtends: \nDrutiny\\Http\\Audit\\Http\n\nPackage: \ndrutiny/http\n\n\nPolicies\n\n\nThese are the policies that use this class:\n\n\n\n\n\n\n\n\nName\n\n\nTitle\n\n\n\n\n\n\n\n\n\n\nHTTP:ForceHTTPS\n\n\nForce HTTPS\n\n\n\n\n\n\n\n\nSource\n\n\n  public function audit(Sandbox $sandbox)\n  {\n    $url = $sandbox-\ngetParameter('url', $uri = $sandbox-\ngetTarget()-\nuri());\n    $url = strtr($url, [\n      'https://' =\n 'http://',\n    ]);\n    $sandbox-\nsetParameter('url', $url);\n    $sandbox-\nsetParameter('expected_location', strtr($url, [\n      'http://' =\n 'https://',\n    ]));\n\n    // Ensure the redirect is not followed.\n    $options = $sandbox-\ngetParameter('options', []);\n    $options['allow_redirects'] = FALSE;\n    $sandbox-\nsetParameter('options', $options);\n\n    $res = $this-\ngetHttpResponse($sandbox);\n\n    if (!$res-\nhasHeader('Location')) {\n      return FALSE;\n    }\n    if ($res-\ngetStatusCode() \n 300 || $res-\ngetStatusCode() \n 400) {\n      return FALSE;\n    }\n    $headers = $res-\ngetHeader('Location');\n\n    $sandbox-\nsetParameter('location', $headers[0]);\n\n    return strpos($headers[0], 'https://') !== FALSE;\n  }\n\n\n\n\n\nSslAssertion\n\n\nClass: \nDrutiny\\Http\\Audit\\SslAssertion\n\nExtends: \nDrutiny\\Audit\\AbstractAnalysis\n\nPackage: \ndrutiny/http\n\n\nPolicies\n\n\nThese are the policies that use this class:\n\n\n\n\n\n\n\n\nName\n\n\nTitle\n\n\n\n\n\n\n\n\n\n\nSSL:DistrustedSymantecPKI\n\n\nChrome distrusted Symantec PKI\n\n\n\n\n\n\n\n\nParameters\n\n\n\n\n\n\n\n\nName\n\n\nType\n\n\nDescription\n\n\nDefault\n\n\n\n\n\n\n\n\n\n\nhost\n\n\nstring\n\n\nThe domain name to connect to.\n\n\nfalse\n\n\n\n\n\n\nport\n\n\ninteger\n\n\nThe SSL port to connect to\n\n\n443\n\n\n\n\n\n\nexpression\n\n\nstring\n\n\nThe expression language to evaludate. See https://symfony.com/doc/current/components/expression_language/syntax.html\n\n\n'true'\n\n\n\n\n\n\n\n\nTokens\n\n\n\n\n\n\n\n\nName\n\n\nType\n\n\nDescription\n\n\nDefault\n\n\n\n\n\n\n\n\n\n\nhost\n\n\nstring\n\n\nThe domain name to connect to.\n\n\nfalse\n\n\n\n\n\n\nport\n\n\ninteger\n\n\nThe SSL port to connect to\n\n\n443\n\n\n\n\n\n\nexpression\n\n\nstring\n\n\nThe expression language to evaludate. See https://symfony.com/doc/current/components/expression_language/syntax.html\n\n\n'true'\n\n\n\n\n\n\ncert\n\n\narray\n\n\nAn multidimension array of representing the certificate info\n\n\nnull\n\n\n\n\n\n\n\n\nSource\n\n\n  final public function audit(Sandbox $sandbox)\n  {\n    $this-\ngather($sandbox);\n    $expressionLanguage = new ExpressionLanguage();\n    $variables  = $sandbox-\ngetParameterTokens();\n    $sandbox-\nlogger()-\ninfo(__CLASS__ . ': ' . Yaml::dump($variables));\n\n    $expression = $sandbox-\ngetParameter('not_applicable', 'false');\n    $sandbox-\nlogger()-\ninfo(__CLASS__ . ': ' . $expression);\n    if ($expressionLanguage-\nevaluate($expression, $variables)) {\n      return self::NOT_APPLICABLE;\n    }\n\n    $expression = $sandbox-\ngetParameter('expression', 'true');\n    $sandbox-\nlogger()-\ninfo(__CLASS__ . ': ' . $expression);\n    return $expressionLanguage-\nevaluate($expression, $variables);\n  }", 
            "title": "Http "
        }, 
        {
            "location": "/audits/DrutinyHttpAudit/#http", 
            "text": "Class:  Drutiny\\Http\\Audit\\Http \nExtends:  Drutiny\\Audit \nPackage:  drutiny/http  NOTE : This Audit is  abstract  and cannot be used directly by a policy.", 
            "title": "Http"
        }, 
        {
            "location": "/audits/DrutinyHttpAudit/#httpheaderexists", 
            "text": "Class:  Drutiny\\Http\\Audit\\HttpHeaderExists \nExtends:  Drutiny\\Http\\Audit\\Http \nPackage:  drutiny/http", 
            "title": "HttpHeaderExists"
        }, 
        {
            "location": "/audits/DrutinyHttpAudit/#policies", 
            "text": "These are the policies that use this class:     Name  Title      HTTP:Content-Security-Policy  HTTP Content-Security-Policy    HTTP:HSTS  HTTP HSTS    HTTP:ReferrerPolicy  HTTP Referrer Policy    HTTP:X-Frame-Options  HTTP X-Frame-Options", 
            "title": "Policies"
        }, 
        {
            "location": "/audits/DrutinyHttpAudit/#parameters", 
            "text": "Name  Type  Description  Default      header  string  The HTTP header to check the value of.  null", 
            "title": "Parameters"
        }, 
        {
            "location": "/audits/DrutinyHttpAudit/#tokens", 
            "text": "Name  Type  Description  Default      header  string  The HTTP header to check the value of.  null    header_value  string  The value to check against.  null", 
            "title": "Tokens"
        }, 
        {
            "location": "/audits/DrutinyHttpAudit/#source", 
            "text": "public function audit(Sandbox $sandbox)\n  {\n    $res = $this- getHttpResponse($sandbox);\n    if ($has_header = $res- hasHeader($sandbox- getParameter('header'))) {\n        $headers = $res- getHeader($sandbox- getParameter('header'));\n        $sandbox- setParameter('header_value', $headers[0]);\n    }\n    return $has_header;\n  }", 
            "title": "Source"
        }, 
        {
            "location": "/audits/DrutinyHttpAudit/#httpheadermatch", 
            "text": "Class:  Drutiny\\Http\\Audit\\HttpHeaderMatch \nExtends:  Drutiny\\Http\\Audit\\Http \nPackage:  drutiny/http", 
            "title": "HttpHeaderMatch"
        }, 
        {
            "location": "/audits/DrutinyHttpAudit/#policies_1", 
            "text": "These are the policies that use this class:     Name  Title      Acquia:CloudEdgeCaching  Cloud Edge Caching    HTTP:X-Content-Type-Options  HTTP X-Content-Type-Options    HTTP:X-XSS-Protection  HTTP X-XSS-Protection", 
            "title": "Policies"
        }, 
        {
            "location": "/audits/DrutinyHttpAudit/#parameters_1", 
            "text": "Name  Type  Description  Default      header  string  The HTTP header to check the value of.  null    header_value  string  The value to check against.  null", 
            "title": "Parameters"
        }, 
        {
            "location": "/audits/DrutinyHttpAudit/#tokens_1", 
            "text": "Name  Type  Description  Default      header  string  The HTTP header to check the value of.  null    header_value  string  The value to check against.  null", 
            "title": "Tokens"
        }, 
        {
            "location": "/audits/DrutinyHttpAudit/#source_1", 
            "text": "public function audit(Sandbox $sandbox)\n  {\n    $value = $sandbox- getParameter('header_value');\n    $res = $this- getHttpResponse($sandbox);\n    $header = $sandbox- getParameter('header');\n\n    if (!$res- hasHeader($header)) {\n      return FALSE;\n    }\n    $headers = $res- getHeader($header);\n    return $value == $headers[0];\n  }", 
            "title": "Source"
        }, 
        {
            "location": "/audits/DrutinyHttpAudit/#httpheadernotexists", 
            "text": "Class:  Drutiny\\Http\\Audit\\HttpHeaderNotExists \nExtends:  Drutiny\\Http\\Audit\\HttpHeaderExists \nPackage:  drutiny/http", 
            "title": "HttpHeaderNotExists"
        }, 
        {
            "location": "/audits/DrutinyHttpAudit/#policies_2", 
            "text": "These are the policies that use this class:     Name  Title      HTTP:X-Drupal-Cache-Tags  X-Drupal-Cache-Tags Header Disabled    HTTP:Authorization  HTTP Authorization Disabled", 
            "title": "Policies"
        }, 
        {
            "location": "/audits/DrutinyHttpAudit/#parameters_2", 
            "text": "Name  Type  Description  Default      header  string  The HTTP header to check the value of.  null", 
            "title": "Parameters"
        }, 
        {
            "location": "/audits/DrutinyHttpAudit/#tokens_2", 
            "text": "Name  Type  Description  Default      header  string  The HTTP header to check the value of.  null    header_value  string  The value to check against.  null", 
            "title": "Tokens"
        }, 
        {
            "location": "/audits/DrutinyHttpAudit/#source_2", 
            "text": "public function audit(Sandbox $sandbox)\n  {\n    return !parent::audit($sandbox);\n  }", 
            "title": "Source"
        }, 
        {
            "location": "/audits/DrutinyHttpAudit/#httpheaderregex", 
            "text": "Class:  Drutiny\\Http\\Audit\\HttpHeaderRegex \nExtends:  Drutiny\\Http\\Audit\\Http \nPackage:  drutiny/http", 
            "title": "HttpHeaderRegex"
        }, 
        {
            "location": "/audits/DrutinyHttpAudit/#policies_3", 
            "text": "These are the policies that use this class:     Name  Title      HTTP:Cache-Control  HTTP Cache-Control", 
            "title": "Policies"
        }, 
        {
            "location": "/audits/DrutinyHttpAudit/#parameters_3", 
            "text": "Name  Type  Description  Default      header  string  The HTTP header to check the value of.  null    regex  string  A regular expressions to validate the header value against.  null", 
            "title": "Parameters"
        }, 
        {
            "location": "/audits/DrutinyHttpAudit/#tokens_3", 
            "text": "Name  Type  Description  Default      header  string  The HTTP header to check the value of.  null    regex  string  A regular expressions to validate the header value against.  null", 
            "title": "Tokens"
        }, 
        {
            "location": "/audits/DrutinyHttpAudit/#source_3", 
            "text": "public function audit(Sandbox $sandbox)\n  {\n    $regex = $sandbox- getParameter('regex');\n    $regex =  /$regex/ ;\n    $res = $this- getHttpResponse($sandbox);\n    $header = $sandbox- getParameter('header');\n\n    if (!$res- hasHeader($header)) {\n      return FALSE;\n    }\n    $headers = $res- getHeader($header);\n    return preg_match($regex, $headers[0]);\n  }", 
            "title": "Source"
        }, 
        {
            "location": "/audits/DrutinyHttpAudit/#httpstatuscode", 
            "text": "Class:  Drutiny\\Http\\Audit\\HttpStatusCode \nExtends:  Drutiny\\Http\\Audit\\Http \nPackage:  drutiny/http", 
            "title": "HttpStatusCode"
        }, 
        {
            "location": "/audits/DrutinyHttpAudit/#policies_4", 
            "text": "These are the policies that use this class:     Name  Title      HTTP:ValidSSL  HTTPS Valid SSL Certificate", 
            "title": "Policies"
        }, 
        {
            "location": "/audits/DrutinyHttpAudit/#parameters_4", 
            "text": "Name  Type  Description  Default      status_code  string  The expected status code from the HTTP response  200", 
            "title": "Parameters"
        }, 
        {
            "location": "/audits/DrutinyHttpAudit/#tokens_4", 
            "text": "Name  Type  Description  Default      status_code  string  The expected status code from the HTTP response  200", 
            "title": "Tokens"
        }, 
        {
            "location": "/audits/DrutinyHttpAudit/#source_4", 
            "text": "public function audit(Sandbox $sandbox)\n  {\n    $status_code = $sandbox- getParameter('status_code', 200);\n    $res = $this- getHttpResponse($sandbox);\n    return $status_code == $res- getStatusCode();\n  }", 
            "title": "Source"
        }, 
        {
            "location": "/audits/DrutinyHttpAudit/#httpsredirect", 
            "text": "Class:  Drutiny\\Http\\Audit\\HttpsRedirect \nExtends:  Drutiny\\Http\\Audit\\Http \nPackage:  drutiny/http", 
            "title": "HttpsRedirect"
        }, 
        {
            "location": "/audits/DrutinyHttpAudit/#policies_5", 
            "text": "These are the policies that use this class:     Name  Title      HTTP:ForceHTTPS  Force HTTPS", 
            "title": "Policies"
        }, 
        {
            "location": "/audits/DrutinyHttpAudit/#source_5", 
            "text": "public function audit(Sandbox $sandbox)\n  {\n    $url = $sandbox- getParameter('url', $uri = $sandbox- getTarget()- uri());\n    $url = strtr($url, [\n      'https://' =  'http://',\n    ]);\n    $sandbox- setParameter('url', $url);\n    $sandbox- setParameter('expected_location', strtr($url, [\n      'http://' =  'https://',\n    ]));\n\n    // Ensure the redirect is not followed.\n    $options = $sandbox- getParameter('options', []);\n    $options['allow_redirects'] = FALSE;\n    $sandbox- setParameter('options', $options);\n\n    $res = $this- getHttpResponse($sandbox);\n\n    if (!$res- hasHeader('Location')) {\n      return FALSE;\n    }\n    if ($res- getStatusCode()   300 || $res- getStatusCode()   400) {\n      return FALSE;\n    }\n    $headers = $res- getHeader('Location');\n\n    $sandbox- setParameter('location', $headers[0]);\n\n    return strpos($headers[0], 'https://') !== FALSE;\n  }", 
            "title": "Source"
        }, 
        {
            "location": "/audits/DrutinyHttpAudit/#sslassertion", 
            "text": "Class:  Drutiny\\Http\\Audit\\SslAssertion \nExtends:  Drutiny\\Audit\\AbstractAnalysis \nPackage:  drutiny/http", 
            "title": "SslAssertion"
        }, 
        {
            "location": "/audits/DrutinyHttpAudit/#policies_6", 
            "text": "These are the policies that use this class:     Name  Title      SSL:DistrustedSymantecPKI  Chrome distrusted Symantec PKI", 
            "title": "Policies"
        }, 
        {
            "location": "/audits/DrutinyHttpAudit/#parameters_5", 
            "text": "Name  Type  Description  Default      host  string  The domain name to connect to.  false    port  integer  The SSL port to connect to  443    expression  string  The expression language to evaludate. See https://symfony.com/doc/current/components/expression_language/syntax.html  'true'", 
            "title": "Parameters"
        }, 
        {
            "location": "/audits/DrutinyHttpAudit/#tokens_5", 
            "text": "Name  Type  Description  Default      host  string  The domain name to connect to.  false    port  integer  The SSL port to connect to  443    expression  string  The expression language to evaludate. See https://symfony.com/doc/current/components/expression_language/syntax.html  'true'    cert  array  An multidimension array of representing the certificate info  null", 
            "title": "Tokens"
        }, 
        {
            "location": "/audits/DrutinyHttpAudit/#source_6", 
            "text": "final public function audit(Sandbox $sandbox)\n  {\n    $this- gather($sandbox);\n    $expressionLanguage = new ExpressionLanguage();\n    $variables  = $sandbox- getParameterTokens();\n    $sandbox- logger()- info(__CLASS__ . ': ' . Yaml::dump($variables));\n\n    $expression = $sandbox- getParameter('not_applicable', 'false');\n    $sandbox- logger()- info(__CLASS__ . ': ' . $expression);\n    if ($expressionLanguage- evaluate($expression, $variables)) {\n      return self::NOT_APPLICABLE;\n    }\n\n    $expression = $sandbox- getParameter('expression', 'true');\n    $sandbox- logger()- info(__CLASS__ . ': ' . $expression);\n    return $expressionLanguage- evaluate($expression, $variables);\n  }", 
            "title": "Source"
        }, 
        {
            "location": "/audits/DrutinyPluginDrupal7Audit/", 
            "text": "BlacklistPermissions\n\n\nBlackList Permissions\n\n\nClass: \nDrutiny\\Plugin\\Drupal7\\Audit\\BlacklistPermissions\n\nExtends: \nDrutiny\\Audit\n\nPackage: \ndrutiny/plugin-drupal-7\n\n\nPolicies\n\n\nThese are the policies that use this class:\n\n\n\n\n\n\n\n\nName\n\n\nTitle\n\n\n\n\n\n\n\n\n\n\nDrupal-7:BlackListPermissions\n\n\nBlackList Permissions\n\n\n\n\n\n\n\n\nParameters\n\n\n\n\n\n\n\n\nName\n\n\nType\n\n\nDescription\n\n\nDefault\n\n\n\n\n\n\n\n\n\n\npermissions\n\n\narray\n\n\nAn array of permissions to ensure are not available to non-administrator roles\n\n\nnull\n\n\n\n\n\n\n\n\nTokens\n\n\n\n\n\n\n\n\nName\n\n\nType\n\n\nDescription\n\n\nDefault\n\n\n\n\n\n\n\n\n\n\npermissions\n\n\narray\n\n\nAn array of permissions to ensure are not available to non-administrator roles\n\n\nnull\n\n\n\n\n\n\n\n\nSource\n\n\n  public function audit(Sandbox $sandbox) {\n    $perms = $sandbox-\ngetParameter('permissions');\n\n    if (empty($perms)) {\n      return TRUE;\n    }\n\n    $where = [];\n    foreach ($perms as $perm) {\n      $where[] = 'rp.permission = \\'' . $perm . '\\'';\n    }\n\n    // We don't care about the 'administrator' role having access.\n    $variable = $sandbox-\ndrush(['format' =\n 'json'])-\nvariableGet('user_admin_role');\n    $user_admin_role = $variable['user_admin_role'];\n\n    try {\n      $output = $sandbox-\ndrush()-\nsqlQuery('SELECT r.rid, r.name, rp.permission FROM role r INNER JOIN role_permission rp ON rp.rid = r.rid WHERE r.rid != ' . $user_admin_role . ' AND (' . implode(' OR ', $where) . ');');\n      $output = array_filter($output);\n    }\n    catch (\\Exception $e) {\n      $sandbox-\nlogger()-\ninfo(get_class($e) . ': ' . $e-\ngetMessage());\n      return FALSE;\n    }\n\n    if (empty($output)) {\n      return TRUE;\n    }\n\n    $black_roles = [];\n    foreach ($output as $line) {\n      list($rid, $role, $permission) = explode(\n\\t\n, $line);\n      $black_roles[$role][] = $permission;\n    }\n\n    $roles = [];\n\n    foreach ($black_roles as $role =\n $perms) {\n      $roles[] = [\n        'role' =\n $role,\n        'perms' =\n $perms,\n      ];\n    }\n\n    $sandbox-\nsetParameter('roles', $roles);\n\n    return FALSE;\n  }\n\n\n\n\n\nCronLast\n\n\nCheck a configuration is set correctly.\n\n\nClass: \nDrutiny\\Plugin\\Drupal7\\Audit\\CronLast\n\nExtends: \nDrutiny\\Audit\n\nPackage: \ndrutiny/plugin-drupal-7\n\n\nPolicies\n\n\nThese are the policies that use this class:\n\n\n\n\n\n\n\n\nName\n\n\nTitle\n\n\n\n\n\n\n\n\n\n\nDrupal-7:CronLast\n\n\nCron running regularly\n\n\n\n\n\n\n\n\nSource\n\n\n  public function audit(Sandbox $sandbox) {\n\n    try {\n      $vars = $sandbox-\ndrush([\n        'format' =\n 'json'\n        ])-\nvariableGet();\n\n      if (!isset($vars['cron_last'])) {\n        return FALSE;\n      }\n\n      $sandbox-\nsetParameter('cron_last', date('l jS \\of F Y h:i:s A', $vars['cron_last']));\n\n      $time_diff = time() - $vars['cron_last'];\n      // Fail if cron hasn't run in the last 24 hours.\n      if ($time_diff \n 86400) {\n        return FALSE;\n      }\n      return TRUE;\n    }\n    catch (DrushFormatException $e) {\n      return Audit::ERROR;\n    }\n  }\n\n\n\n\n\nDuplicateModules\n\n\nDuplicate modules.\n\n\nClass: \nDrutiny\\Plugin\\Drupal7\\Audit\\DuplicateModules\n\nExtends: \nDrutiny\\Audit\n\nPackage: \ndrutiny/plugin-drupal-7\n\n\nPolicies\n\n\nThese are the policies that use this class:\n\n\n\n\n\n\n\n\nName\n\n\nTitle\n\n\n\n\n\n\n\n\n\n\nDrupal-7:NoDuplicateModules\n\n\nDuplicate modules\n\n\n\n\n\n\n\n\nSource\n\n\n  public function audit(Sandbox $sandbox) {\n    $config = $sandbox-\ndrush(['format' =\n 'json'])-\nstatus();\n    $docroot = $config['root'];\n\n    $command = \nCMD\nfind $docroot -name '*.module' -type f |\\\ngrep -Ev 'drupal_system_listing_(in)?compatible_test' |\\\ngrep -oe '[^/]*\\.module' | grep -Ev '^\\.module' | cut -d'.' -f1 | sort |\\\nuniq -c | sort -nr | awk '{print $2\n: \n$1}'\nCMD;\n\n    $output = $sandbox-\nexec($command);\n    $duplicateModules = array_filter(Yaml::parse($output), function ($count) {\n      return $count \n 1;\n    });\n\n    $modules = [];\n    foreach ($duplicateModules as $module =\n $count) {\n      $modules[] = [\n        'module' =\n $module,\n        'count' =\n $count,\n      ];\n    }\n\n    $sandbox-\nsetParameter('modules', $modules);\n    return count($modules) === 0;\n  }\n\n\n\n\n\nEntityReferenceAutocomplete\n\n\nEntity reference autocomplete\n\n\nClass: \nDrutiny\\Plugin\\Drupal7\\Audit\\EntityReferenceAutocomplete\n\nExtends: \nDrutiny\\Audit\n\nPackage: \ndrutiny/plugin-drupal-7\n\n\nPolicies\n\n\nThese are the policies that use this class:\n\n\n\n\n\n\n\n\nName\n\n\nTitle\n\n\n\n\n\n\n\n\n\n\nDrupal-7:entityreference\n\n\nEntityReference Autocomplete Performance\n\n\n\n\n\n\n\n\nParameters\n\n\n\n\n\n\n\n\nName\n\n\nType\n\n\nDescription\n\n\nDefault\n\n\n\n\n\n\n\n\n\n\nthreshold\n\n\ninteger\n\n\nThe limit of references allowed\n\n\n100\n\n\n\n\n\n\nerrors_count\n\n\ninteger\n\n\nThe number of errors found\n\n\n0\n\n\n\n\n\n\n\n\nTokens\n\n\n\n\n\n\n\n\nName\n\n\nType\n\n\nDescription\n\n\nDefault\n\n\n\n\n\n\n\n\n\n\nthreshold\n\n\ninteger\n\n\nThe limit of references allowed\n\n\n100\n\n\n\n\n\n\nerrors\n\n\narray\n\n\nAn array of errors if any\n\n\n{  }\n\n\n\n\n\n\nerrors_count\n\n\ninteger\n\n\nThe number of errors found\n\n\n0\n\n\n\n\n\n\n\n\nSource\n\n\n  public function audit(Sandbox $sandbox)\n  {\n\n    $errors = $sandbox-\ndrush()-\nevaluate(function () {\n      $results = db_query(\nSELECT fc.field_name, fc.data as field_info, fci.data as field_instance_info\n        FROM {field_config} fc\n        JOIN {field_config_instance} fci ON fc.id = fci.field_id\n        WHERE fc.type = 'entityreference'\n);\n\n      $errors = [];\n      foreach ($results as $record) {\n        if (!$record-\nfield_info = unserialize($record-\nfield_info)) {\n          continue;\n        }\n\n        // Correct configuration is to use an autocomplete as this will limit\n        // the number of referenced entities from being rendered.\n        if (strpos($record-\nfield_instance_info['widget']['type'], 'autocomplete') \n -1) {\n          continue;\n        }\n\n        $record-\nfield_instance_info = unserialize($record-\nfield_instance_info);\n        if (!$record-\nfield_instance_info = unserialize($record-\nfield_instance_info)) {\n          continue;\n        }\n\n        $args = [];\n\n        $handler_settings = isset($record-\nfield_info['settings']['handler_settings']) ? $record-\nfield_info['settings']['handler_settings'] : NULL;\n\n        // Attempt to find the node types in the $field_info.\n        if (isset($handler_settings['target_bundles'])) {\n          $args = array_keys($handler_settings['target_bundles']);\n        }\n        elseif (isset($handler_settings['view']['args'])) {\n          $args = [];\n          foreach ($handler_settings['view']['args'] as $arg) {\n            // If we're using views we can pass multiple entity types in\n            // contextually separated by a +.\n            $args = array_merge($args, explode('+', $arg));\n          }\n        }\n\n        switch ($record-\nfield_info['settings']['target_type']) {\n          case 'node':\n            $count = db_query(\nSELECT count(*) as count FROM {node} node WHERE node.type in (\n . $args . \n)\n);\n            break;\n\n          case 'taxonomy_term':\n            $count = db_query(\nSELECT count(*) as count FROM {taxonomy_term_data}\n)-\nfetchField();\n            break;\n        }\n\n        if ($count \n $sandbox-\ngetParameter('threshold', 100)) {\n          $errors[] = \n{$record-\nfield_instance_info['label']} `{$record-\nfield_instance['label']}`, found *{$count}* referenced entities.\n;\n        }\n      }\n      return $errors;\n    });\n\n    $sandbox-\nsetParameter('errors', $errors);\n    $sandbox-\nsetParameter('errors_count', count($errors));\n\n    return count($errors) == 0;\n  }\n\n\n\n\n\nMissingModules\n\n\nMissing modules.\n\n\nClass: \nDrutiny\\Plugin\\Drupal7\\Audit\\MissingModules\n\nExtends: \nDrutiny\\Audit\n\nPackage: \ndrutiny/plugin-drupal-7\n\n\nPolicies\n\n\nThese are the policies that use this class:\n\n\n\n\n\n\n\n\nName\n\n\nTitle\n\n\n\n\n\n\n\n\n\n\nDrupal-7:MissingModules\n\n\nMissing modules\n\n\n\n\n\n\n\n\nParameters\n\n\n\n\n\n\n\n\nName\n\n\nType\n\n\nDescription\n\n\nDefault\n\n\n\n\n\n\n\n\n\n\nkey\n\n\nstring\n\n\nThe name of the variable to compare.\n\n\nnull\n\n\n\n\n\n\n\n\nTokens\n\n\n\n\n\n\n\n\nName\n\n\nType\n\n\nDescription\n\n\nDefault\n\n\n\n\n\n\n\n\n\n\nkey\n\n\nstring\n\n\nThe name of the variable to compare.\n\n\nnull\n\n\n\n\n\n\n\n\nSource\n\n\n  public function audit(Sandbox $sandbox) {\n    $rows = $sandbox-\ndrush()-\nevaluate(function () {\n      $rows = [];\n\n      // Grab all the modules in the system table.\n      $query = db_query(\nSELECT filename, type, name FROM {system}\n);\n      // Go through the query and check to see if the module exists in the directory.\n      foreach ($query-\nfetchAll() as $record) {\n        if ($record-\nname == 'default') {\n          continue;\n        }\n\n        // Grab the checker.\n        $check = drupal_get_filename($record-\ntype, $record-\nname, $record-\nfilename, FALSE);\n        // If drupal_get_filename returns null = we got problems.\n        if (!is_null($check)) {\n          continue;\n        }\n\n        // Go ahead and set the row if all is well.\n        $rows[$record-\nname] = array(\n          'name' =\n $record-\nname,\n          'type' =\n $record-\ntype,\n          'filename' =\n $record-\nfilename,\n        );\n      }\n      return $rows;\n    });\n\n    $sandbox-\nsetParameter('messages', array_values(array_map(function ($row) {\n      return \nCannot file {$row['type']} `{$row['name']}`. Expected to be in {$row['filename']}.\n;\n    }, $rows)));\n\n    print_r($sandbox-\ngetParameter('messages'));\n\n    return empty($rows);\n  }\n\n\n\n\n\nModuleDisabled\n\n\nGeneric module is disabled check.\n\n\nClass: \nDrutiny\\Plugin\\Drupal7\\Audit\\ModuleDisabled\n\nExtends: \nDrutiny\\Audit\n\nPackage: \ndrutiny/plugin-drupal-7\n\n\nThis class can \nremediate\n failed audits.\n\n\nPolicies\n\n\nThese are the policies that use this class:\n\n\n\n\n\n\n\n\nName\n\n\nTitle\n\n\n\n\n\n\n\n\n\n\nDrupal-7:DblogModuleDisabled\n\n\nDatabase logging disabled\n\n\n\n\n\n\nDrupal-7:StatisticsModuleDisabled\n\n\nStatistics\n\n\n\n\n\n\nDrupal-7:PhpModuleDisabled\n\n\nPHP\n\n\n\n\n\n\nDrupal-7:Search404ModuleDisabled\n\n\nSearch404 module disabled\n\n\n\n\n\n\nDrupal-7:UpdateModuleDisabled\n\n\nUpdate\n\n\n\n\n\n\nDrupal-7:ShieldModuleDisabled\n\n\nShield Disabled\n\n\n\n\n\n\nDrupal-7:SimpletestModuleDisabled\n\n\nSimpletest\n\n\n\n\n\n\nDrupal-7:OverlayModuleDisabled\n\n\nOverlay module disabled\n\n\n\n\n\n\n\n\nParameters\n\n\n\n\n\n\n\n\nName\n\n\nType\n\n\nDescription\n\n\nDefault\n\n\n\n\n\n\n\n\n\n\nmodule\n\n\nstring\n\n\nThe name of the module to check is disabled.\n\n\nnull\n\n\n\n\n\n\n\n\nTokens\n\n\n\n\n\n\n\n\nName\n\n\nType\n\n\nDescription\n\n\nDefault\n\n\n\n\n\n\n\n\n\n\nmodule\n\n\nstring\n\n\nThe name of the module to check is disabled.\n\n\nnull\n\n\n\n\n\n\n\n\nSource\n\n\n  public function audit(Sandbox $sandbox) {\n\n    $module = $sandbox-\ngetParameter('module');\n\n    try {\n      $info = $sandbox-\ndrush(['format' =\n 'json'])-\npmList();\n    }\n    catch (DrushFormatException $e) {\n      return strpos($e-\ngetOutput(), $module . ' was not found.') !== FALSE;\n    }\n\n    if (!isset($info[$module])) {\n      return TRUE;\n    }\n\n    $status = strtolower($info[$module]['status']);\n\n    return ($status == 'not installed');\n  }\n\n\n\n\n\nModulesEnabled\n\n\nGeneric modules are enabled check.\n\n\nClass: \nDrutiny\\Plugin\\Drupal7\\Audit\\ModulesEnabled\n\nExtends: \nDrutiny\\Audit\n\nPackage: \ndrutiny/plugin-drupal-7\n\n\nThis class can \nremediate\n failed audits.\n\n\nPolicies\n\n\nThese are the policies that use this class:\n\n\n\n\n\n\n\n\nName\n\n\nTitle\n\n\n\n\n\n\n\n\n\n\nDrupal-7:ModulesEnabled\n\n\nModules enabled\n\n\n\n\n\n\n\n\nParameters\n\n\n\n\n\n\n\n\nName\n\n\nType\n\n\nDescription\n\n\nDefault\n\n\n\n\n\n\n\n\n\n\nmodules\n\n\narray\n\n\nList of modules to check that are enabled.\n\n\nnull\n\n\n\n\n\n\n\n\nTokens\n\n\n\n\n\n\n\n\nName\n\n\nType\n\n\nDescription\n\n\nDefault\n\n\n\n\n\n\n\n\n\n\nmodules\n\n\narray\n\n\nList of modules to check that are enabled.\n\n\nnull\n\n\n\n\n\n\n\n\nSource\n\n\n  public function audit(Sandbox $sandbox) {\n    $modules = $sandbox-\ngetParameter('modules');\n    if (empty($modules)) {\n      return TRUE;\n    }\n\n    $notEnabled = [];\n    foreach ($modules as $moduleName) {\n      try {\n        if (!$sandbox-\ndrush()-\nmoduleEnabled($moduleName)) {\n          throw new \\Exception($moduleName);\n        }\n      }\n      catch (\\Exception $e) {\n        $notEnabled[] = $moduleName;\n      }\n    }\n    if (!empty($notEnabled)) {\n      $sandbox-\nsetParameter('notEnabled', $notEnabled);\n      return FALSE;\n    }\n    // Seems like the best way to comma separate things.\n    else {\n      $sandbox-\nsetParameter('enabled', '`' . implode('`, `', $modules) . '`');\n    }\n\n    return TRUE;\n  }\n\n\n\n\n\nNoAdministrators\n\n\nClass: \nDrutiny\\Plugin\\Drupal7\\Audit\\NoAdministrators\n\nExtends: \nDrutiny\\Audit\n\nPackage: \ndrutiny/plugin-drupal-7\n\n\nPolicies\n\n\nThese are the policies that use this class:\n\n\n\n\n\n\n\n\nName\n\n\nTitle\n\n\n\n\n\n\n\n\n\n\nDrupal-7:NoAdmins\n\n\nNo Administrators\n\n\n\n\n\n\n\n\nSource\n\n\n  public function audit(Sandbox $sandbox) {\n    $variable = $sandbox-\ndrush(['format' =\n 'json'])-\nvget('user_admin_role');\n    $admin_rid = (int) $variable['user_admin_role'];\n    $role_list = $sandbox-\ndrush(['format' =\n 'json'])-\nroleList();\n\n    $roles = [];\n    foreach ($role_list as $role) {\n      // Find out the role name of the role ID defined in 'user_admin_role'.\n      if ($role['rid'] === $admin_rid) {\n        $roles[$admin_rid] = $role['label'];\n      }\n      elseif ($role['label'] === 'administrator') {\n        $roles[$role['rid']] = $role['label'];\n      }\n    }\n\n    // No administrator roles defined, and no roles called 'administrator' in\n    // Drupal.\n    if (empty($roles)) {\n      return;\n    }\n\n    // '0' is disabled.\n    // @see https://github.com/drupal/drupal/blob/7.x/modules/user/user.admin.inc#L305\n    if (count($roles) === 1 \n $admin_rid === 0) {\n      return;\n    }\n\n    $rows = $sandbox-\ndrush()\n    -\nsqlQuery(\nSELECT CONCAT(ur.uid, ',', u.name)\n      FROM {users_roles} ur\n      LEFT JOIN {users} u ON ur.uid = u.uid\n      WHERE ur.uid \n 1 AND ur.rid IN (\n . implode(',', array_keys($roles)) . \n);\n\n    );\n\n    // Remove blank rows.\n    $rows = array_filter($rows);\n\n    // Format rows into token data.\n    $rows = array_map(function ($row) {\n      $row = trim($row);\n      list($uid, $name) = explode(',', $row, 2);\n      return \n{$name} - [UID {$uid}]\n;\n    }, $rows);\n\n    $sandbox-\nsetParameter('count', count($rows));\n    $sandbox-\nsetParameter('issues', $rows);\n    $sandbox-\nsetParameter('plural', count($rows) \n 1 ? 's' : '');\n\n    return empty($rows);\n  }\n\n\n\n\n\nSearchApiDb\n\n\nSearch API Database.\n\n\nClass: \nDrutiny\\Plugin\\Drupal7\\Audit\\SearchApiDb\n\nExtends: \nDrutiny\\Audit\n\nPackage: \ndrutiny/plugin-drupal-7\n\n\nPolicies\n\n\nThese are the policies that use this class:\n\n\n\n\n\n\n\n\nName\n\n\nTitle\n\n\n\n\n\n\n\n\n\n\nDrupal-7:SearchApiDb\n\n\nSearch API Database\n\n\n\n\n\n\n\n\nSource\n\n\n  public function audit(Sandbox $sandbox) {\n    if (!$sandbox-\ndrush()-\nmoduleEnabled('search_api_db')) {\n      return Audit::NOT_APPLICABLE;\n    }\n\n    // Find out if there are active indexes using the db service class.\n    $output = $sandbox-\ndrush()-\nsqlQuery(\nSELECT COUNT(i.machine_name) as count FROM {search_api_index} i LEFT JOIN {search_api_server} s ON i.server = s.machine_name WHERE i.status \n 0 AND s.class = 'search_api_db_service';\n);\n    if (empty($output)) {\n      $number_of_db_indexes = 0;\n    }\n    elseif (count($output) === 1) {\n      $number_of_db_indexes = (int) $output[0];\n    }\n    else {\n      $number_of_db_indexes = (int) $output[1];\n    }\n    $sandbox-\nsetParameter('number_of_db_indexes', $number_of_db_indexes);\n    $number_of_db_indexes \n 1 ? $sandbox-\nsetParameter('plural_index', 'es') : $sandbox-\nsetParameter('plural_index', '');\n    // No database indexes.\n    if ($number_of_db_indexes === 0) {\n      return Audit::SUCCESS;\n    }\n    // If the database is in use, find out how many nodes are in it.\n    $output = $sandbox-\ndrush()-\nsqlQuery('SELECT COUNT(item_id) FROM {search_api_db_default_node_index};');\n    // There are some differences in running the command on site factory then\n    // locally.\n    if (count($output) == 1) {\n      $nodes_in_search = (int) $output[0];\n    }\n    else {\n      $nodes_in_search = (int) $output[1];\n    }\n    $sandbox-\nsetParameter('nodes_in_search', $nodes_in_search);\n    $max_size = (int) $sandbox-\ngetParameter('max_size');\n    if ($nodes_in_search \n $max_size) {\n      return Audit::WARNING;\n    }\n    return Audit::FAILURE;\n  }\n\n\n\n\n\nUntrustedRoles\n\n\nCheck untrusted roles for administrative permissions.\n\n\nClass: \nDrutiny\\Plugin\\Drupal7\\Audit\\UntrustedRoles\n\nExtends: \nDrutiny\\Audit\n\nPackage: \ndrutiny/plugin-drupal-7\n\n\nPolicies\n\n\nThese are the policies that use this class:\n\n\n\n\n\n\n\n\nName\n\n\nTitle\n\n\n\n\n\n\n\n\n\n\nDrupal-7:UntrustedRoles\n\n\nUntrusted Roles with administrative permissions\n\n\n\n\n\n\n\n\nParameters\n\n\n\n\n\n\n\n\nName\n\n\nType\n\n\nDescription\n\n\nDefault\n\n\n\n\n\n\n\n\n\n\nuntrusted_roles\n\n\narray\n\n\nThe names of untrusted Roles.\n\n\n'[''anonymous user'',''authenticated user'']'\n\n\n\n\n\n\n\n\nTokens\n\n\n\n\n\n\n\n\nName\n\n\nType\n\n\nDescription\n\n\nDefault\n\n\n\n\n\n\n\n\n\n\nuntrusted_roles\n\n\narray\n\n\nThe names of untrusted Roles.\n\n\n'[''anonymous user'',''authenticated user'']'\n\n\n\n\n\n\n\n\nSource\n\n\n  public function audit(Sandbox $sandbox) {\n    $rows = $sandbox-\ndrush()-\nevaluate(function ($roles) {\n      $rows = [];\n      $all_roles = user_roles();\n      $untrusted_roles = array_intersect($all_roles, $roles);\n\n      foreach ($untrusted_roles as $rid =\n $role_name) {\n        $untrusted_permissions = [];\n\n        // Grab all permissions associated with the role.\n        $permissions = user_role_permissions([$rid =\n $role_name]);\n\n        // Check each permission assigned to the untrusted role and determine if\n        // it is administrative. Administrative permissions contain the string\n        // \nadminister\n in the name.\n        $output['permissions'][$role_name] = $permissions;\n        foreach ($permissions[$rid] as $permission =\n $foo) {\n          if (strstr($permission, 'administer') !== FALSE ) {\n            $untrusted_permissions[] = $permission;\n\n          }\n        }\n\n        // Add the untrusted role and administrative permission to an output array\n        if (!empty($untrusted_permissions)) {\n          $rows[] = [\n            'role' =\n $role_name,\n            'permissions' =\n implode(', ', $untrusted_permissions),\n          ];\n        }\n      }\n      return $rows;\n    }, [\n      'roles' =\n $sandbox-\ngetParameter('untrusted_roles')\n    ]);\n\n    $sandbox-\nsetParameter('rows', $rows);\n\n    return empty($rows) ? AUDIT::SUCCESS : AUDIT::FAIL;\n  }\n\n\n\n\n\nUser1\n\n\nUser #1 Locked Down\n\n\nClass: \nDrutiny\\Plugin\\Drupal7\\Audit\\User1\n\nExtends: \nDrutiny\\Audit\n\nPackage: \ndrutiny/plugin-drupal-7\n\n\nThis class can \nremediate\n failed audits.\n\n\nPolicies\n\n\nThese are the policies that use this class:\n\n\n\n\n\n\n\n\nName\n\n\nTitle\n\n\n\n\n\n\n\n\n\n\nDrupal-7:User1LockDown\n\n\nUser #1 Locked Down\n\n\n\n\n\n\n\n\nParameters\n\n\n\n\n\n\n\n\nName\n\n\nType\n\n\nDescription\n\n\nDefault\n\n\n\n\n\n\n\n\n\n\nblacklist\n\n\nstring\n\n\nThe usernames of the the uid:1 user that are considered forbidden. Expression maybe a regular expression to match patterns.\n\n\nnull\n\n\n\n\n\n\nemail\n\n\nstring\n\n\nThe email that the uid:1 user should have. If an empty string is provided then this check is omitted.\n\n\nnull\n\n\n\n\n\n\nstatus\n\n\ninteger\n\n\nEnsures the uid:1 user status reflects the same as this argument. Defaults to active (1).\n\n\n1\n\n\n\n\n\n\n\n\nTokens\n\n\n\n\n\n\n\n\nName\n\n\nType\n\n\nDescription\n\n\nDefault\n\n\n\n\n\n\n\n\n\n\nblacklist\n\n\nstring\n\n\nThe usernames of the the uid:1 user that are considered forbidden. Expression maybe a regular expression to match patterns.\n\n\nnull\n\n\n\n\n\n\nemail\n\n\nstring\n\n\nThe email that the uid:1 user should have. If an empty string is provided then this check is omitted.\n\n\nnull\n\n\n\n\n\n\nstatus\n\n\ninteger\n\n\nEnsures the uid:1 user status reflects the same as this argument. Defaults to active (1).\n\n\n1\n\n\n\n\n\n\n\n\nSource\n\n\n  public function audit(Sandbox $sandbox) {\n    // Get the details for user #1.\n    $user = $sandbox-\ndrush(['format' =\n 'json'])-\nuserInformation(1);\n    $user = (object) array_pop($user);\n\n    $errors = [];\n\n    // Username.\n    $pattern = $sandbox-\ngetParameter('blacklist');\n    if (preg_match(\n#${pattern}#i\n, $user-\nname)) {\n      $errors[] = \nUsername '$user-\nname' is too easy to guess.\n;\n    }\n    $sandbox-\nsetParameter('username', $user-\nname);\n\n    // Email address.\n    $email = $sandbox-\ngetParameter('email');\n    if (!empty($email) \n ($email !== $user-\nmail)) {\n      $errors[] = \nEmail address '$user-\nmail' is not set correctly.\n;\n    }\n\n    // Status.\n    $status = (bool) $sandbox-\ngetParameter('status');\n    if ($status !== (bool) $user-\nstatus) {\n      $errors[] = 'Status is not set correctly. Should be ' . ($user-\nstatus ? 'active' : 'inactive') . '.';\n    }\n\n    $sandbox-\nsetParameter('errors', $errors);\n    return empty($errors);\n  }\n\n\n\n\n\nVariableCompare\n\n\nCheck a configuration is set correctly.\n\n\nClass: \nDrutiny\\Plugin\\Drupal7\\Audit\\VariableCompare\n\nExtends: \nDrutiny\\Audit\n\nPackage: \ndrutiny/plugin-drupal-7\n\n\nPolicies\n\n\nThese are the policies that use this class:\n\n\n\n\n\n\n\n\nName\n\n\nTitle\n\n\n\n\n\n\n\n\n\n\nDrupal-7:JsAggregation\n\n\nJs Aggregation\n\n\n\n\n\n\nDrupal-7:XMLSitemapBaseURL\n\n\nXML sitemap base URL\n\n\n\n\n\n\nDrupal-7:ViewsSqlSignature\n\n\nViews SQL Signature\n\n\n\n\n\n\nDrupal-7:CSSAggregation\n\n\nCSS Aggregation\n\n\n\n\n\n\nDrupal-7:ImageDerivatives\n\n\nImage Derivatives\n\n\n\n\n\n\nDrupal-7:SecurePagesListed\n\n\nSecure Pages Listed\n\n\n\n\n\n\nDrupal-7:UserRegistrationDisabled\n\n\nUser Registration Disabled\n\n\n\n\n\n\nDrupal-7:ErrorLevel\n\n\nError Level\n\n\n\n\n\n\nDrupal-7:PoorMansCronDisabled\n\n\nPoor Mans Cron Disabled\n\n\n\n\n\n\nDrupal-7:CacheLifetime\n\n\nApplication Page Cache\n\n\n\n\n\n\nDrupal-7:SecurePagesConfig:NoDowngrade\n\n\nSecure Pages Config: No Downgrade\n\n\n\n\n\n\nDrupal-7:InstallTaskCompleted\n\n\nInstallation Complete\n\n\n\n\n\n\nDrupal-7:SecureHTTPRedirect\n\n\nSecure Pages: HTTP Redirect\n\n\n\n\n\n\nDrupal-7:PageCacheMaximumAge\n\n\nPage Cache Control Max Age\n\n\n\n\n\n\nDrupal-7:SecurePagesConfig:Enabled\n\n\nSecure Pages Config: Enabled\n\n\n\n\n\n\nAcquia:SiteFactory:SearchAutoSwitch\n\n\nAcquia Search Auto Switch (D7)\n\n\n\n\n\n\nDrupal-7:NoPageCompression\n\n\nNo Page Compression\n\n\n\n\n\n\n\n\nParameters\n\n\n\n\n\n\n\n\nName\n\n\nType\n\n\nDescription\n\n\nDefault\n\n\n\n\n\n\n\n\n\n\nkey\n\n\nstring\n\n\nThe name of the variable to compare.\n\n\nnull\n\n\n\n\n\n\nvalue\n\n\nmixed\n\n\nThe value to compare against\n\n\nnull\n\n\n\n\n\n\ncomp_type\n\n\nstring\n\n\nThe comparison operator to use\n\n\n'=='\n\n\n\n\n\n\nrequired_modules\n\n\narray\n\n\nAn optional array of modules required in order to check variables\n\n\n{  }\n\n\n\n\n\n\ndefault\n\n\nmixed\n\n\nAn optional default value if a value is not found\n\n\nno-value-provided\n\n\n\n\n\n\n\n\nTokens\n\n\n\n\n\n\n\n\nName\n\n\nType\n\n\nDescription\n\n\nDefault\n\n\n\n\n\n\n\n\n\n\nkey\n\n\nstring\n\n\nThe name of the variable to compare.\n\n\nnull\n\n\n\n\n\n\nvalue\n\n\nmixed\n\n\nThe value to compare against\n\n\nnull\n\n\n\n\n\n\ncomp_type\n\n\nstring\n\n\nThe comparison operator to use\n\n\n'=='\n\n\n\n\n\n\nrequired_modules\n\n\narray\n\n\nAn optional array of modules required in order to check variables\n\n\n{  }\n\n\n\n\n\n\ndefault\n\n\nmixed\n\n\nAn optional default value if a value is not found\n\n\nno-value-provided\n\n\n\n\n\n\nreading\n\n\nmixed\n\n\nThe value read from the Drupal variables system\n\n\nnull\n\n\n\n\n\n\n\n\nSource\n\n\n  public function audit(Sandbox $sandbox) {\n    $key = $sandbox-\ngetParameter('key');\n    $value = $sandbox-\ngetParameter('value');\n\n    if ($required_modules = $sandbox-\ngetParameter('required_modules')) {\n      $required_modules = is_array($required_modules) ? $required_modules : [$required_modules];\n      $info = $sandbox-\ndrush(['format' =\n 'json'])-\npmList();\n      $missing_modules = array_diff($required_modules, array_keys($info));\n\n      if (!empty($missing_modules)) {\n        return Audit::NOT_APPLICABLE;\n      }\n    }\n\n    try {\n      $vars = $sandbox-\ndrush([\n        'format' =\n 'json'\n        ])-\nvariableGet();\n\n      if (!isset($vars[$key])) {\n        throw new DrushFormatException(__CLASS__ . \n: $key is not a set variable.\n, '');\n      }\n      $reading = $vars[$key];\n    }\n    catch (DrushFormatException $e) {\n      $sandbox-\nsetParameter('exception', $e-\ngetMessage());\n\n      $default_value = $sandbox-\ngetParameter('default', 'no-value-provided');\n\n      // If no default value was provided then we can not provide an accruate\n      // outcome based on the absense of a successful drush command.\n      if ($default_value === 'no-value-provided') {\n        return FALSE;\n      }\n\n      $reading = $default_value;\n    }\n\n    $sandbox-\nsetParameter('reading', $reading);\n\n    $comp_type = $sandbox-\ngetParameter('comp_type', '==');\n    $sandbox-\nlogger()-\ninfo('Comparative config values: ' . var_export([\n      'reading' =\n $reading,\n      'value' =\n $value,\n      'expression' =\n 'reading ' . $comp_type . ' value',\n    ], TRUE));\n\n    switch ($comp_type) {\n      case 'lt':\n      case '\n':\n        return $reading \n $value;\n      case 'gt':\n      case '\n':\n        return $reading \n $value;\n      case 'lte':\n      case '\n=':\n        return $reading \n= $value;\n      case 'gte':\n      case '\n=':\n        return $reading \n= $value;\n      case 'ne':\n      case '!=':\n        return $reading != $value;\n      case 'nie':\n      case '!==':\n        return $reading !== $value;\n      case 'matches':\n      case '~':\n        return strpos($reading, $value) !== FALSE;\n      case 'identical':\n      case '===':\n        return $value === $reading;\n      case 'in_array':\n        return in_array($reading, $value);\n      case 'regex':\n        return preg_match(\n#${value}#\n, $reading);\n      case 'equal':\n      case '==':\n      default:\n        return $value == $reading;\n    }\n  }\n\n\n\n\n\nViewsCache\n\n\nViews Cache\n\n\nClass: \nDrutiny\\Plugin\\Drupal7\\Audit\\ViewsCache\n\nExtends: \nDrutiny\\Audit\n\nPackage: \ndrutiny/plugin-drupal-7\n\n\nPolicies\n\n\nThese are the policies that use this class:\n\n\n\n\n\n\n\n\nName\n\n\nTitle\n\n\n\n\n\n\n\n\n\n\nDrupal-7:ViewsCache\n\n\nViews Cache\n\n\n\n\n\n\n\n\nSource\n\n\n  public function audit(Sandbox $sandbox) {\n    $views = $sandbox-\ndrush()-\nevaluate(function () {\n      $bad_views = [];\n      foreach (views_get_all_views() as $view_name =\n $view) {\n        foreach ($view-\ndisplay as $display_name =\n $display) {\n          if (empty($display-\ndisplay_options['cache'])) {\n            $bad_views[] = \n$view_name:$display_name\n;\n            continue;\n          }\n          $cache = $display-\ndisplay_options['cache'];\n          if ($cache['type'] == 'none') {\n            $bad_views[] = \n$view_name:$display_name\n;\n          }\n        }\n      }\n      return $bad_views;\n    });\n\n    if (empty($views)) {\n      return TRUE;\n    }\n\n    $sandbox-\nsetParameter('views', $views);\n    return FALSE;\n\n\n    // $valid = 0;\n    // $errors = [];\n    //\n    // // View settings are set per display so we need to query the views display table.\n    // $views = $this-\ncontext-\ndrush-\nsqlQuery(\nSELECT vd.vid, vd.display_title, vd.display_options, vv.name, vv.human_name FROM {views_display} vd JOIN {views_view} vv ON vv.vid = vd.vid\n);\n    //\n    // foreach ($views as $view) {\n    //   list($display_id, $display_name, $display_options, $view_machine_name, $view_name) = explode(\n\\t\n, $view);\n    //   $display_options = Serializer::unserialize($display_options);\n    //\n    //   if (empty($display_options['pager']['options']['items_per_page'])) {\n    //     continue;\n    //   }\n    //\n    //   if ($display_options['pager']['options']['items_per_page'] \n $this-\ngetOption('threshold', 30)) {\n    //     $errors[] = \nstrong\n$view_name\n/strong\n \ncode\n[$display_name]\n/code\n is displaying \ncode\n{$display_options['pager']['options']['items_per_page']}\n/code\n;\n    //     continue;\n    //   }\n    //\n    //   $valid++;\n    // }\n    //\n    // $this-\nsetToken('total', $valid);\n    // $this-\nsetToken('plural', $valid \n 1 ? 's' : '');\n    // $this-\nsetToken('error', implode('\n/li\nli\n', $errors));\n    // $this-\nsetToken('threshold', $this-\ngetOption('threshold', 30));\n    // $this-\nsetToken('error_count', count($errors));\n    //\n    // return empty($errors) ? AuditResponse::AUDIT_SUCCESS : AuditResponse::AUDIT_FAILURE;\n  }\n\n\n\n\n\nViewsPagination\n\n\nViews Pagination\n\n\nClass: \nDrutiny\\Plugin\\Drupal7\\Audit\\ViewsPagination\n\nExtends: \nDrutiny\\Audit\n\nPackage: \ndrutiny/plugin-drupal-7\n\n\nPolicies\n\n\nThese are the policies that use this class:\n\n\n\n\n\n\n\n\nName\n\n\nTitle\n\n\n\n\n\n\n\n\n\n\nDrupal-7:ViewsPagination\n\n\nViews Pagination\n\n\n\n\n\n\n\n\nParameters\n\n\n\n\n\n\n\n\nName\n\n\nType\n\n\nDescription\n\n\nDefault\n\n\n\n\n\n\n\n\n\n\nlimit\n\n\ninteger\n\n\nThe maximum number of rows a view can list\n\n\nnull\n\n\n\n\n\n\n\n\nTokens\n\n\n\n\n\n\n\n\nName\n\n\nType\n\n\nDescription\n\n\nDefault\n\n\n\n\n\n\n\n\n\n\nlimit\n\n\ninteger\n\n\nThe maximum number of rows a view can list\n\n\nnull\n\n\n\n\n\n\n\n\nSource\n\n\n  public function audit(Sandbox $sandbox) {\n    $views = $sandbox-\ndrush()-\nevaluate(function ($limit) {\n      $bad_views = [];\n      foreach (views_get_all_views() as $view_name =\n $view) {\n        foreach ($view-\ndisplay as $display_name =\n $display) {\n          if ($display-\ndisplay_options['pager']['options']['items_per_page'] \n $limit) {\n            $bad_views[] = \n$view_name:$display_name contains \n .  $display-\ndisplay_options['pager']['options']['items_per_page'] . \n per page.\n;\n          }\n        }\n      }\n      return $bad_views;\n    }, ['limit' =\n $sandbox-\ngetParameter('limit', 60)]);\n\n    if (empty($views)) {\n      return TRUE;\n    }\n\n    $sandbox-\nsetParameter('views', $views);\n    return FALSE;\n\n\n    // $valid = 0;\n    // $errors = [];\n    //\n    // // View settings are set per display so we need to query the views display table.\n    // $views = $this-\ncontext-\ndrush-\nsqlQuery(\nSELECT vd.vid, vd.display_title, vd.display_options, vv.name, vv.human_name FROM {views_display} vd JOIN {views_view} vv ON vv.vid = vd.vid\n);\n    //\n    // foreach ($views as $view) {\n    //   list($display_id, $display_name, $display_options, $view_machine_name, $view_name) = explode(\n\\t\n, $view);\n    //   $display_options = Serializer::unserialize($display_options);\n    //\n    //   if (empty($display_options['pager']['options']['items_per_page'])) {\n    //     continue;\n    //   }\n    //\n    //   if ($display_options['pager']['options']['items_per_page'] \n $this-\ngetOption('threshold', 30)) {\n    //     $errors[] = \nstrong\n$view_name\n/strong\n \ncode\n[$display_name]\n/code\n is displaying \ncode\n{$display_options['pager']['options']['items_per_page']}\n/code\n;\n    //     continue;\n    //   }\n    //\n    //   $valid++;\n    // }\n    //\n    // $this-\nsetToken('total', $valid);\n    // $this-\nsetToken('plural', $valid \n 1 ? 's' : '');\n    // $this-\nsetToken('error', implode('\n/li\nli\n', $errors));\n    // $this-\nsetToken('threshold', $this-\ngetOption('threshold', 30));\n    // $this-\nsetToken('error_count', count($errors));\n    //\n    // return empty($errors) ? AuditResponse::AUDIT_SUCCESS : AuditResponse::AUDIT_FAILURE;\n  }\n\n\n\n\n\nZenRebuildRegistry\n\n\nClass: \nDrutiny\\Plugin\\Drupal7\\Audit\\ZenRebuildRegistry\n\nExtends: \nDrutiny\\Audit\n\nPackage: \ndrutiny/plugin-drupal-7\n\n\nPolicies\n\n\nThese are the policies that use this class:\n\n\n\n\n\n\n\n\nName\n\n\nTitle\n\n\n\n\n\n\n\n\n\n\nDrupal-7:ZenRegistryRebuild\n\n\nZen rebuild registry disabled\n\n\n\n\n\n\n\n\nSource\n\n\n  public function audit(Sandbox $sandbox) {\n\n    $output = $sandbox-\ndrush()-\nsqlQuery(\nSELECT * FROM {variable} WHERE name LIKE 'theme_%';\n);\n    $themes_with_rebuild_enabled = [];\n    foreach ($output as $row) {\n      preg_match('/^theme_([a-zA-Z_]+)_settings/', $row, $matches);\n\n      // 'theme_default' is also a variable we want to exclude.\n      if (empty($matches)) {\n        continue;\n      }\n\n      $theme_name = $matches[1];\n\n      if (preg_match('/zen_rebuild_registry.;i:1/', $row)) {\n        $themes_with_rebuild_enabled[] = $theme_name;\n      }\n    }\n\n    if (count($themes_with_rebuild_enabled) \n 0) {\n      $sandbox-\nsetParameter('number_of_themes', count($themes_with_rebuild_enabled));\n      $sandbox-\nsetParameter('themes', '\ncode\n' . implode('\n/code\n, \ncode\n', $themes_with_rebuild_enabled) . '\n/code\n');\n      $sandbox-\nsetParameter('plural', count($themes_with_rebuild_enabled) \n 1 ? 's' : '');\n      $sandbox-\nsetParameter('prefix', count($themes_with_rebuild_enabled) \n 1 ? 'are' : 'is');\n      return FALSE;\n    }\n\n    return TRUE;\n  }", 
            "title": "Plugin Drupal7 "
        }, 
        {
            "location": "/audits/DrutinyPluginDrupal7Audit/#blacklistpermissions", 
            "text": "BlackList Permissions  Class:  Drutiny\\Plugin\\Drupal7\\Audit\\BlacklistPermissions \nExtends:  Drutiny\\Audit \nPackage:  drutiny/plugin-drupal-7", 
            "title": "BlacklistPermissions"
        }, 
        {
            "location": "/audits/DrutinyPluginDrupal7Audit/#policies", 
            "text": "These are the policies that use this class:     Name  Title      Drupal-7:BlackListPermissions  BlackList Permissions", 
            "title": "Policies"
        }, 
        {
            "location": "/audits/DrutinyPluginDrupal7Audit/#parameters", 
            "text": "Name  Type  Description  Default      permissions  array  An array of permissions to ensure are not available to non-administrator roles  null", 
            "title": "Parameters"
        }, 
        {
            "location": "/audits/DrutinyPluginDrupal7Audit/#tokens", 
            "text": "Name  Type  Description  Default      permissions  array  An array of permissions to ensure are not available to non-administrator roles  null", 
            "title": "Tokens"
        }, 
        {
            "location": "/audits/DrutinyPluginDrupal7Audit/#source", 
            "text": "public function audit(Sandbox $sandbox) {\n    $perms = $sandbox- getParameter('permissions');\n\n    if (empty($perms)) {\n      return TRUE;\n    }\n\n    $where = [];\n    foreach ($perms as $perm) {\n      $where[] = 'rp.permission = \\'' . $perm . '\\'';\n    }\n\n    // We don't care about the 'administrator' role having access.\n    $variable = $sandbox- drush(['format' =  'json'])- variableGet('user_admin_role');\n    $user_admin_role = $variable['user_admin_role'];\n\n    try {\n      $output = $sandbox- drush()- sqlQuery('SELECT r.rid, r.name, rp.permission FROM role r INNER JOIN role_permission rp ON rp.rid = r.rid WHERE r.rid != ' . $user_admin_role . ' AND (' . implode(' OR ', $where) . ');');\n      $output = array_filter($output);\n    }\n    catch (\\Exception $e) {\n      $sandbox- logger()- info(get_class($e) . ': ' . $e- getMessage());\n      return FALSE;\n    }\n\n    if (empty($output)) {\n      return TRUE;\n    }\n\n    $black_roles = [];\n    foreach ($output as $line) {\n      list($rid, $role, $permission) = explode( \\t , $line);\n      $black_roles[$role][] = $permission;\n    }\n\n    $roles = [];\n\n    foreach ($black_roles as $role =  $perms) {\n      $roles[] = [\n        'role' =  $role,\n        'perms' =  $perms,\n      ];\n    }\n\n    $sandbox- setParameter('roles', $roles);\n\n    return FALSE;\n  }", 
            "title": "Source"
        }, 
        {
            "location": "/audits/DrutinyPluginDrupal7Audit/#cronlast", 
            "text": "Check a configuration is set correctly.  Class:  Drutiny\\Plugin\\Drupal7\\Audit\\CronLast \nExtends:  Drutiny\\Audit \nPackage:  drutiny/plugin-drupal-7", 
            "title": "CronLast"
        }, 
        {
            "location": "/audits/DrutinyPluginDrupal7Audit/#policies_1", 
            "text": "These are the policies that use this class:     Name  Title      Drupal-7:CronLast  Cron running regularly", 
            "title": "Policies"
        }, 
        {
            "location": "/audits/DrutinyPluginDrupal7Audit/#source_1", 
            "text": "public function audit(Sandbox $sandbox) {\n\n    try {\n      $vars = $sandbox- drush([\n        'format' =  'json'\n        ])- variableGet();\n\n      if (!isset($vars['cron_last'])) {\n        return FALSE;\n      }\n\n      $sandbox- setParameter('cron_last', date('l jS \\of F Y h:i:s A', $vars['cron_last']));\n\n      $time_diff = time() - $vars['cron_last'];\n      // Fail if cron hasn't run in the last 24 hours.\n      if ($time_diff   86400) {\n        return FALSE;\n      }\n      return TRUE;\n    }\n    catch (DrushFormatException $e) {\n      return Audit::ERROR;\n    }\n  }", 
            "title": "Source"
        }, 
        {
            "location": "/audits/DrutinyPluginDrupal7Audit/#duplicatemodules", 
            "text": "Duplicate modules.  Class:  Drutiny\\Plugin\\Drupal7\\Audit\\DuplicateModules \nExtends:  Drutiny\\Audit \nPackage:  drutiny/plugin-drupal-7", 
            "title": "DuplicateModules"
        }, 
        {
            "location": "/audits/DrutinyPluginDrupal7Audit/#policies_2", 
            "text": "These are the policies that use this class:     Name  Title      Drupal-7:NoDuplicateModules  Duplicate modules", 
            "title": "Policies"
        }, 
        {
            "location": "/audits/DrutinyPluginDrupal7Audit/#source_2", 
            "text": "public function audit(Sandbox $sandbox) {\n    $config = $sandbox- drush(['format' =  'json'])- status();\n    $docroot = $config['root'];\n\n    $command =  CMD\nfind $docroot -name '*.module' -type f |\\\ngrep -Ev 'drupal_system_listing_(in)?compatible_test' |\\\ngrep -oe '[^/]*\\.module' | grep -Ev '^\\.module' | cut -d'.' -f1 | sort |\\\nuniq -c | sort -nr | awk '{print $2 :  $1}'\nCMD;\n\n    $output = $sandbox- exec($command);\n    $duplicateModules = array_filter(Yaml::parse($output), function ($count) {\n      return $count   1;\n    });\n\n    $modules = [];\n    foreach ($duplicateModules as $module =  $count) {\n      $modules[] = [\n        'module' =  $module,\n        'count' =  $count,\n      ];\n    }\n\n    $sandbox- setParameter('modules', $modules);\n    return count($modules) === 0;\n  }", 
            "title": "Source"
        }, 
        {
            "location": "/audits/DrutinyPluginDrupal7Audit/#entityreferenceautocomplete", 
            "text": "Entity reference autocomplete  Class:  Drutiny\\Plugin\\Drupal7\\Audit\\EntityReferenceAutocomplete \nExtends:  Drutiny\\Audit \nPackage:  drutiny/plugin-drupal-7", 
            "title": "EntityReferenceAutocomplete"
        }, 
        {
            "location": "/audits/DrutinyPluginDrupal7Audit/#policies_3", 
            "text": "These are the policies that use this class:     Name  Title      Drupal-7:entityreference  EntityReference Autocomplete Performance", 
            "title": "Policies"
        }, 
        {
            "location": "/audits/DrutinyPluginDrupal7Audit/#parameters_1", 
            "text": "Name  Type  Description  Default      threshold  integer  The limit of references allowed  100    errors_count  integer  The number of errors found  0", 
            "title": "Parameters"
        }, 
        {
            "location": "/audits/DrutinyPluginDrupal7Audit/#tokens_1", 
            "text": "Name  Type  Description  Default      threshold  integer  The limit of references allowed  100    errors  array  An array of errors if any  {  }    errors_count  integer  The number of errors found  0", 
            "title": "Tokens"
        }, 
        {
            "location": "/audits/DrutinyPluginDrupal7Audit/#source_3", 
            "text": "public function audit(Sandbox $sandbox)\n  {\n\n    $errors = $sandbox- drush()- evaluate(function () {\n      $results = db_query( SELECT fc.field_name, fc.data as field_info, fci.data as field_instance_info\n        FROM {field_config} fc\n        JOIN {field_config_instance} fci ON fc.id = fci.field_id\n        WHERE fc.type = 'entityreference' );\n\n      $errors = [];\n      foreach ($results as $record) {\n        if (!$record- field_info = unserialize($record- field_info)) {\n          continue;\n        }\n\n        // Correct configuration is to use an autocomplete as this will limit\n        // the number of referenced entities from being rendered.\n        if (strpos($record- field_instance_info['widget']['type'], 'autocomplete')   -1) {\n          continue;\n        }\n\n        $record- field_instance_info = unserialize($record- field_instance_info);\n        if (!$record- field_instance_info = unserialize($record- field_instance_info)) {\n          continue;\n        }\n\n        $args = [];\n\n        $handler_settings = isset($record- field_info['settings']['handler_settings']) ? $record- field_info['settings']['handler_settings'] : NULL;\n\n        // Attempt to find the node types in the $field_info.\n        if (isset($handler_settings['target_bundles'])) {\n          $args = array_keys($handler_settings['target_bundles']);\n        }\n        elseif (isset($handler_settings['view']['args'])) {\n          $args = [];\n          foreach ($handler_settings['view']['args'] as $arg) {\n            // If we're using views we can pass multiple entity types in\n            // contextually separated by a +.\n            $args = array_merge($args, explode('+', $arg));\n          }\n        }\n\n        switch ($record- field_info['settings']['target_type']) {\n          case 'node':\n            $count = db_query( SELECT count(*) as count FROM {node} node WHERE node.type in (  . $args .  ) );\n            break;\n\n          case 'taxonomy_term':\n            $count = db_query( SELECT count(*) as count FROM {taxonomy_term_data} )- fetchField();\n            break;\n        }\n\n        if ($count   $sandbox- getParameter('threshold', 100)) {\n          $errors[] =  {$record- field_instance_info['label']} `{$record- field_instance['label']}`, found *{$count}* referenced entities. ;\n        }\n      }\n      return $errors;\n    });\n\n    $sandbox- setParameter('errors', $errors);\n    $sandbox- setParameter('errors_count', count($errors));\n\n    return count($errors) == 0;\n  }", 
            "title": "Source"
        }, 
        {
            "location": "/audits/DrutinyPluginDrupal7Audit/#missingmodules", 
            "text": "Missing modules.  Class:  Drutiny\\Plugin\\Drupal7\\Audit\\MissingModules \nExtends:  Drutiny\\Audit \nPackage:  drutiny/plugin-drupal-7", 
            "title": "MissingModules"
        }, 
        {
            "location": "/audits/DrutinyPluginDrupal7Audit/#policies_4", 
            "text": "These are the policies that use this class:     Name  Title      Drupal-7:MissingModules  Missing modules", 
            "title": "Policies"
        }, 
        {
            "location": "/audits/DrutinyPluginDrupal7Audit/#parameters_2", 
            "text": "Name  Type  Description  Default      key  string  The name of the variable to compare.  null", 
            "title": "Parameters"
        }, 
        {
            "location": "/audits/DrutinyPluginDrupal7Audit/#tokens_2", 
            "text": "Name  Type  Description  Default      key  string  The name of the variable to compare.  null", 
            "title": "Tokens"
        }, 
        {
            "location": "/audits/DrutinyPluginDrupal7Audit/#source_4", 
            "text": "public function audit(Sandbox $sandbox) {\n    $rows = $sandbox- drush()- evaluate(function () {\n      $rows = [];\n\n      // Grab all the modules in the system table.\n      $query = db_query( SELECT filename, type, name FROM {system} );\n      // Go through the query and check to see if the module exists in the directory.\n      foreach ($query- fetchAll() as $record) {\n        if ($record- name == 'default') {\n          continue;\n        }\n\n        // Grab the checker.\n        $check = drupal_get_filename($record- type, $record- name, $record- filename, FALSE);\n        // If drupal_get_filename returns null = we got problems.\n        if (!is_null($check)) {\n          continue;\n        }\n\n        // Go ahead and set the row if all is well.\n        $rows[$record- name] = array(\n          'name' =  $record- name,\n          'type' =  $record- type,\n          'filename' =  $record- filename,\n        );\n      }\n      return $rows;\n    });\n\n    $sandbox- setParameter('messages', array_values(array_map(function ($row) {\n      return  Cannot file {$row['type']} `{$row['name']}`. Expected to be in {$row['filename']}. ;\n    }, $rows)));\n\n    print_r($sandbox- getParameter('messages'));\n\n    return empty($rows);\n  }", 
            "title": "Source"
        }, 
        {
            "location": "/audits/DrutinyPluginDrupal7Audit/#moduledisabled", 
            "text": "Generic module is disabled check.  Class:  Drutiny\\Plugin\\Drupal7\\Audit\\ModuleDisabled \nExtends:  Drutiny\\Audit \nPackage:  drutiny/plugin-drupal-7  This class can  remediate  failed audits.", 
            "title": "ModuleDisabled"
        }, 
        {
            "location": "/audits/DrutinyPluginDrupal7Audit/#policies_5", 
            "text": "These are the policies that use this class:     Name  Title      Drupal-7:DblogModuleDisabled  Database logging disabled    Drupal-7:StatisticsModuleDisabled  Statistics    Drupal-7:PhpModuleDisabled  PHP    Drupal-7:Search404ModuleDisabled  Search404 module disabled    Drupal-7:UpdateModuleDisabled  Update    Drupal-7:ShieldModuleDisabled  Shield Disabled    Drupal-7:SimpletestModuleDisabled  Simpletest    Drupal-7:OverlayModuleDisabled  Overlay module disabled", 
            "title": "Policies"
        }, 
        {
            "location": "/audits/DrutinyPluginDrupal7Audit/#parameters_3", 
            "text": "Name  Type  Description  Default      module  string  The name of the module to check is disabled.  null", 
            "title": "Parameters"
        }, 
        {
            "location": "/audits/DrutinyPluginDrupal7Audit/#tokens_3", 
            "text": "Name  Type  Description  Default      module  string  The name of the module to check is disabled.  null", 
            "title": "Tokens"
        }, 
        {
            "location": "/audits/DrutinyPluginDrupal7Audit/#source_5", 
            "text": "public function audit(Sandbox $sandbox) {\n\n    $module = $sandbox- getParameter('module');\n\n    try {\n      $info = $sandbox- drush(['format' =  'json'])- pmList();\n    }\n    catch (DrushFormatException $e) {\n      return strpos($e- getOutput(), $module . ' was not found.') !== FALSE;\n    }\n\n    if (!isset($info[$module])) {\n      return TRUE;\n    }\n\n    $status = strtolower($info[$module]['status']);\n\n    return ($status == 'not installed');\n  }", 
            "title": "Source"
        }, 
        {
            "location": "/audits/DrutinyPluginDrupal7Audit/#modulesenabled", 
            "text": "Generic modules are enabled check.  Class:  Drutiny\\Plugin\\Drupal7\\Audit\\ModulesEnabled \nExtends:  Drutiny\\Audit \nPackage:  drutiny/plugin-drupal-7  This class can  remediate  failed audits.", 
            "title": "ModulesEnabled"
        }, 
        {
            "location": "/audits/DrutinyPluginDrupal7Audit/#policies_6", 
            "text": "These are the policies that use this class:     Name  Title      Drupal-7:ModulesEnabled  Modules enabled", 
            "title": "Policies"
        }, 
        {
            "location": "/audits/DrutinyPluginDrupal7Audit/#parameters_4", 
            "text": "Name  Type  Description  Default      modules  array  List of modules to check that are enabled.  null", 
            "title": "Parameters"
        }, 
        {
            "location": "/audits/DrutinyPluginDrupal7Audit/#tokens_4", 
            "text": "Name  Type  Description  Default      modules  array  List of modules to check that are enabled.  null", 
            "title": "Tokens"
        }, 
        {
            "location": "/audits/DrutinyPluginDrupal7Audit/#source_6", 
            "text": "public function audit(Sandbox $sandbox) {\n    $modules = $sandbox- getParameter('modules');\n    if (empty($modules)) {\n      return TRUE;\n    }\n\n    $notEnabled = [];\n    foreach ($modules as $moduleName) {\n      try {\n        if (!$sandbox- drush()- moduleEnabled($moduleName)) {\n          throw new \\Exception($moduleName);\n        }\n      }\n      catch (\\Exception $e) {\n        $notEnabled[] = $moduleName;\n      }\n    }\n    if (!empty($notEnabled)) {\n      $sandbox- setParameter('notEnabled', $notEnabled);\n      return FALSE;\n    }\n    // Seems like the best way to comma separate things.\n    else {\n      $sandbox- setParameter('enabled', '`' . implode('`, `', $modules) . '`');\n    }\n\n    return TRUE;\n  }", 
            "title": "Source"
        }, 
        {
            "location": "/audits/DrutinyPluginDrupal7Audit/#noadministrators", 
            "text": "Class:  Drutiny\\Plugin\\Drupal7\\Audit\\NoAdministrators \nExtends:  Drutiny\\Audit \nPackage:  drutiny/plugin-drupal-7", 
            "title": "NoAdministrators"
        }, 
        {
            "location": "/audits/DrutinyPluginDrupal7Audit/#policies_7", 
            "text": "These are the policies that use this class:     Name  Title      Drupal-7:NoAdmins  No Administrators", 
            "title": "Policies"
        }, 
        {
            "location": "/audits/DrutinyPluginDrupal7Audit/#source_7", 
            "text": "public function audit(Sandbox $sandbox) {\n    $variable = $sandbox- drush(['format' =  'json'])- vget('user_admin_role');\n    $admin_rid = (int) $variable['user_admin_role'];\n    $role_list = $sandbox- drush(['format' =  'json'])- roleList();\n\n    $roles = [];\n    foreach ($role_list as $role) {\n      // Find out the role name of the role ID defined in 'user_admin_role'.\n      if ($role['rid'] === $admin_rid) {\n        $roles[$admin_rid] = $role['label'];\n      }\n      elseif ($role['label'] === 'administrator') {\n        $roles[$role['rid']] = $role['label'];\n      }\n    }\n\n    // No administrator roles defined, and no roles called 'administrator' in\n    // Drupal.\n    if (empty($roles)) {\n      return;\n    }\n\n    // '0' is disabled.\n    // @see https://github.com/drupal/drupal/blob/7.x/modules/user/user.admin.inc#L305\n    if (count($roles) === 1   $admin_rid === 0) {\n      return;\n    }\n\n    $rows = $sandbox- drush()\n    - sqlQuery( SELECT CONCAT(ur.uid, ',', u.name)\n      FROM {users_roles} ur\n      LEFT JOIN {users} u ON ur.uid = u.uid\n      WHERE ur.uid   1 AND ur.rid IN (  . implode(',', array_keys($roles)) .  ); \n    );\n\n    // Remove blank rows.\n    $rows = array_filter($rows);\n\n    // Format rows into token data.\n    $rows = array_map(function ($row) {\n      $row = trim($row);\n      list($uid, $name) = explode(',', $row, 2);\n      return  {$name} - [UID {$uid}] ;\n    }, $rows);\n\n    $sandbox- setParameter('count', count($rows));\n    $sandbox- setParameter('issues', $rows);\n    $sandbox- setParameter('plural', count($rows)   1 ? 's' : '');\n\n    return empty($rows);\n  }", 
            "title": "Source"
        }, 
        {
            "location": "/audits/DrutinyPluginDrupal7Audit/#searchapidb", 
            "text": "Search API Database.  Class:  Drutiny\\Plugin\\Drupal7\\Audit\\SearchApiDb \nExtends:  Drutiny\\Audit \nPackage:  drutiny/plugin-drupal-7", 
            "title": "SearchApiDb"
        }, 
        {
            "location": "/audits/DrutinyPluginDrupal7Audit/#policies_8", 
            "text": "These are the policies that use this class:     Name  Title      Drupal-7:SearchApiDb  Search API Database", 
            "title": "Policies"
        }, 
        {
            "location": "/audits/DrutinyPluginDrupal7Audit/#source_8", 
            "text": "public function audit(Sandbox $sandbox) {\n    if (!$sandbox- drush()- moduleEnabled('search_api_db')) {\n      return Audit::NOT_APPLICABLE;\n    }\n\n    // Find out if there are active indexes using the db service class.\n    $output = $sandbox- drush()- sqlQuery( SELECT COUNT(i.machine_name) as count FROM {search_api_index} i LEFT JOIN {search_api_server} s ON i.server = s.machine_name WHERE i.status   0 AND s.class = 'search_api_db_service'; );\n    if (empty($output)) {\n      $number_of_db_indexes = 0;\n    }\n    elseif (count($output) === 1) {\n      $number_of_db_indexes = (int) $output[0];\n    }\n    else {\n      $number_of_db_indexes = (int) $output[1];\n    }\n    $sandbox- setParameter('number_of_db_indexes', $number_of_db_indexes);\n    $number_of_db_indexes   1 ? $sandbox- setParameter('plural_index', 'es') : $sandbox- setParameter('plural_index', '');\n    // No database indexes.\n    if ($number_of_db_indexes === 0) {\n      return Audit::SUCCESS;\n    }\n    // If the database is in use, find out how many nodes are in it.\n    $output = $sandbox- drush()- sqlQuery('SELECT COUNT(item_id) FROM {search_api_db_default_node_index};');\n    // There are some differences in running the command on site factory then\n    // locally.\n    if (count($output) == 1) {\n      $nodes_in_search = (int) $output[0];\n    }\n    else {\n      $nodes_in_search = (int) $output[1];\n    }\n    $sandbox- setParameter('nodes_in_search', $nodes_in_search);\n    $max_size = (int) $sandbox- getParameter('max_size');\n    if ($nodes_in_search   $max_size) {\n      return Audit::WARNING;\n    }\n    return Audit::FAILURE;\n  }", 
            "title": "Source"
        }, 
        {
            "location": "/audits/DrutinyPluginDrupal7Audit/#untrustedroles", 
            "text": "Check untrusted roles for administrative permissions.  Class:  Drutiny\\Plugin\\Drupal7\\Audit\\UntrustedRoles \nExtends:  Drutiny\\Audit \nPackage:  drutiny/plugin-drupal-7", 
            "title": "UntrustedRoles"
        }, 
        {
            "location": "/audits/DrutinyPluginDrupal7Audit/#policies_9", 
            "text": "These are the policies that use this class:     Name  Title      Drupal-7:UntrustedRoles  Untrusted Roles with administrative permissions", 
            "title": "Policies"
        }, 
        {
            "location": "/audits/DrutinyPluginDrupal7Audit/#parameters_5", 
            "text": "Name  Type  Description  Default      untrusted_roles  array  The names of untrusted Roles.  '[''anonymous user'',''authenticated user'']'", 
            "title": "Parameters"
        }, 
        {
            "location": "/audits/DrutinyPluginDrupal7Audit/#tokens_5", 
            "text": "Name  Type  Description  Default      untrusted_roles  array  The names of untrusted Roles.  '[''anonymous user'',''authenticated user'']'", 
            "title": "Tokens"
        }, 
        {
            "location": "/audits/DrutinyPluginDrupal7Audit/#source_9", 
            "text": "public function audit(Sandbox $sandbox) {\n    $rows = $sandbox- drush()- evaluate(function ($roles) {\n      $rows = [];\n      $all_roles = user_roles();\n      $untrusted_roles = array_intersect($all_roles, $roles);\n\n      foreach ($untrusted_roles as $rid =  $role_name) {\n        $untrusted_permissions = [];\n\n        // Grab all permissions associated with the role.\n        $permissions = user_role_permissions([$rid =  $role_name]);\n\n        // Check each permission assigned to the untrusted role and determine if\n        // it is administrative. Administrative permissions contain the string\n        //  administer  in the name.\n        $output['permissions'][$role_name] = $permissions;\n        foreach ($permissions[$rid] as $permission =  $foo) {\n          if (strstr($permission, 'administer') !== FALSE ) {\n            $untrusted_permissions[] = $permission;\n\n          }\n        }\n\n        // Add the untrusted role and administrative permission to an output array\n        if (!empty($untrusted_permissions)) {\n          $rows[] = [\n            'role' =  $role_name,\n            'permissions' =  implode(', ', $untrusted_permissions),\n          ];\n        }\n      }\n      return $rows;\n    }, [\n      'roles' =  $sandbox- getParameter('untrusted_roles')\n    ]);\n\n    $sandbox- setParameter('rows', $rows);\n\n    return empty($rows) ? AUDIT::SUCCESS : AUDIT::FAIL;\n  }", 
            "title": "Source"
        }, 
        {
            "location": "/audits/DrutinyPluginDrupal7Audit/#user1", 
            "text": "User #1 Locked Down  Class:  Drutiny\\Plugin\\Drupal7\\Audit\\User1 \nExtends:  Drutiny\\Audit \nPackage:  drutiny/plugin-drupal-7  This class can  remediate  failed audits.", 
            "title": "User1"
        }, 
        {
            "location": "/audits/DrutinyPluginDrupal7Audit/#policies_10", 
            "text": "These are the policies that use this class:     Name  Title      Drupal-7:User1LockDown  User #1 Locked Down", 
            "title": "Policies"
        }, 
        {
            "location": "/audits/DrutinyPluginDrupal7Audit/#parameters_6", 
            "text": "Name  Type  Description  Default      blacklist  string  The usernames of the the uid:1 user that are considered forbidden. Expression maybe a regular expression to match patterns.  null    email  string  The email that the uid:1 user should have. If an empty string is provided then this check is omitted.  null    status  integer  Ensures the uid:1 user status reflects the same as this argument. Defaults to active (1).  1", 
            "title": "Parameters"
        }, 
        {
            "location": "/audits/DrutinyPluginDrupal7Audit/#tokens_6", 
            "text": "Name  Type  Description  Default      blacklist  string  The usernames of the the uid:1 user that are considered forbidden. Expression maybe a regular expression to match patterns.  null    email  string  The email that the uid:1 user should have. If an empty string is provided then this check is omitted.  null    status  integer  Ensures the uid:1 user status reflects the same as this argument. Defaults to active (1).  1", 
            "title": "Tokens"
        }, 
        {
            "location": "/audits/DrutinyPluginDrupal7Audit/#source_10", 
            "text": "public function audit(Sandbox $sandbox) {\n    // Get the details for user #1.\n    $user = $sandbox- drush(['format' =  'json'])- userInformation(1);\n    $user = (object) array_pop($user);\n\n    $errors = [];\n\n    // Username.\n    $pattern = $sandbox- getParameter('blacklist');\n    if (preg_match( #${pattern}#i , $user- name)) {\n      $errors[] =  Username '$user- name' is too easy to guess. ;\n    }\n    $sandbox- setParameter('username', $user- name);\n\n    // Email address.\n    $email = $sandbox- getParameter('email');\n    if (!empty($email)   ($email !== $user- mail)) {\n      $errors[] =  Email address '$user- mail' is not set correctly. ;\n    }\n\n    // Status.\n    $status = (bool) $sandbox- getParameter('status');\n    if ($status !== (bool) $user- status) {\n      $errors[] = 'Status is not set correctly. Should be ' . ($user- status ? 'active' : 'inactive') . '.';\n    }\n\n    $sandbox- setParameter('errors', $errors);\n    return empty($errors);\n  }", 
            "title": "Source"
        }, 
        {
            "location": "/audits/DrutinyPluginDrupal7Audit/#variablecompare", 
            "text": "Check a configuration is set correctly.  Class:  Drutiny\\Plugin\\Drupal7\\Audit\\VariableCompare \nExtends:  Drutiny\\Audit \nPackage:  drutiny/plugin-drupal-7", 
            "title": "VariableCompare"
        }, 
        {
            "location": "/audits/DrutinyPluginDrupal7Audit/#policies_11", 
            "text": "These are the policies that use this class:     Name  Title      Drupal-7:JsAggregation  Js Aggregation    Drupal-7:XMLSitemapBaseURL  XML sitemap base URL    Drupal-7:ViewsSqlSignature  Views SQL Signature    Drupal-7:CSSAggregation  CSS Aggregation    Drupal-7:ImageDerivatives  Image Derivatives    Drupal-7:SecurePagesListed  Secure Pages Listed    Drupal-7:UserRegistrationDisabled  User Registration Disabled    Drupal-7:ErrorLevel  Error Level    Drupal-7:PoorMansCronDisabled  Poor Mans Cron Disabled    Drupal-7:CacheLifetime  Application Page Cache    Drupal-7:SecurePagesConfig:NoDowngrade  Secure Pages Config: No Downgrade    Drupal-7:InstallTaskCompleted  Installation Complete    Drupal-7:SecureHTTPRedirect  Secure Pages: HTTP Redirect    Drupal-7:PageCacheMaximumAge  Page Cache Control Max Age    Drupal-7:SecurePagesConfig:Enabled  Secure Pages Config: Enabled    Acquia:SiteFactory:SearchAutoSwitch  Acquia Search Auto Switch (D7)    Drupal-7:NoPageCompression  No Page Compression", 
            "title": "Policies"
        }, 
        {
            "location": "/audits/DrutinyPluginDrupal7Audit/#parameters_7", 
            "text": "Name  Type  Description  Default      key  string  The name of the variable to compare.  null    value  mixed  The value to compare against  null    comp_type  string  The comparison operator to use  '=='    required_modules  array  An optional array of modules required in order to check variables  {  }    default  mixed  An optional default value if a value is not found  no-value-provided", 
            "title": "Parameters"
        }, 
        {
            "location": "/audits/DrutinyPluginDrupal7Audit/#tokens_7", 
            "text": "Name  Type  Description  Default      key  string  The name of the variable to compare.  null    value  mixed  The value to compare against  null    comp_type  string  The comparison operator to use  '=='    required_modules  array  An optional array of modules required in order to check variables  {  }    default  mixed  An optional default value if a value is not found  no-value-provided    reading  mixed  The value read from the Drupal variables system  null", 
            "title": "Tokens"
        }, 
        {
            "location": "/audits/DrutinyPluginDrupal7Audit/#source_11", 
            "text": "public function audit(Sandbox $sandbox) {\n    $key = $sandbox- getParameter('key');\n    $value = $sandbox- getParameter('value');\n\n    if ($required_modules = $sandbox- getParameter('required_modules')) {\n      $required_modules = is_array($required_modules) ? $required_modules : [$required_modules];\n      $info = $sandbox- drush(['format' =  'json'])- pmList();\n      $missing_modules = array_diff($required_modules, array_keys($info));\n\n      if (!empty($missing_modules)) {\n        return Audit::NOT_APPLICABLE;\n      }\n    }\n\n    try {\n      $vars = $sandbox- drush([\n        'format' =  'json'\n        ])- variableGet();\n\n      if (!isset($vars[$key])) {\n        throw new DrushFormatException(__CLASS__ .  : $key is not a set variable. , '');\n      }\n      $reading = $vars[$key];\n    }\n    catch (DrushFormatException $e) {\n      $sandbox- setParameter('exception', $e- getMessage());\n\n      $default_value = $sandbox- getParameter('default', 'no-value-provided');\n\n      // If no default value was provided then we can not provide an accruate\n      // outcome based on the absense of a successful drush command.\n      if ($default_value === 'no-value-provided') {\n        return FALSE;\n      }\n\n      $reading = $default_value;\n    }\n\n    $sandbox- setParameter('reading', $reading);\n\n    $comp_type = $sandbox- getParameter('comp_type', '==');\n    $sandbox- logger()- info('Comparative config values: ' . var_export([\n      'reading' =  $reading,\n      'value' =  $value,\n      'expression' =  'reading ' . $comp_type . ' value',\n    ], TRUE));\n\n    switch ($comp_type) {\n      case 'lt':\n      case ' ':\n        return $reading   $value;\n      case 'gt':\n      case ' ':\n        return $reading   $value;\n      case 'lte':\n      case ' =':\n        return $reading  = $value;\n      case 'gte':\n      case ' =':\n        return $reading  = $value;\n      case 'ne':\n      case '!=':\n        return $reading != $value;\n      case 'nie':\n      case '!==':\n        return $reading !== $value;\n      case 'matches':\n      case '~':\n        return strpos($reading, $value) !== FALSE;\n      case 'identical':\n      case '===':\n        return $value === $reading;\n      case 'in_array':\n        return in_array($reading, $value);\n      case 'regex':\n        return preg_match( #${value}# , $reading);\n      case 'equal':\n      case '==':\n      default:\n        return $value == $reading;\n    }\n  }", 
            "title": "Source"
        }, 
        {
            "location": "/audits/DrutinyPluginDrupal7Audit/#viewscache", 
            "text": "Views Cache  Class:  Drutiny\\Plugin\\Drupal7\\Audit\\ViewsCache \nExtends:  Drutiny\\Audit \nPackage:  drutiny/plugin-drupal-7", 
            "title": "ViewsCache"
        }, 
        {
            "location": "/audits/DrutinyPluginDrupal7Audit/#policies_12", 
            "text": "These are the policies that use this class:     Name  Title      Drupal-7:ViewsCache  Views Cache", 
            "title": "Policies"
        }, 
        {
            "location": "/audits/DrutinyPluginDrupal7Audit/#source_12", 
            "text": "public function audit(Sandbox $sandbox) {\n    $views = $sandbox- drush()- evaluate(function () {\n      $bad_views = [];\n      foreach (views_get_all_views() as $view_name =  $view) {\n        foreach ($view- display as $display_name =  $display) {\n          if (empty($display- display_options['cache'])) {\n            $bad_views[] =  $view_name:$display_name ;\n            continue;\n          }\n          $cache = $display- display_options['cache'];\n          if ($cache['type'] == 'none') {\n            $bad_views[] =  $view_name:$display_name ;\n          }\n        }\n      }\n      return $bad_views;\n    });\n\n    if (empty($views)) {\n      return TRUE;\n    }\n\n    $sandbox- setParameter('views', $views);\n    return FALSE;\n\n\n    // $valid = 0;\n    // $errors = [];\n    //\n    // // View settings are set per display so we need to query the views display table.\n    // $views = $this- context- drush- sqlQuery( SELECT vd.vid, vd.display_title, vd.display_options, vv.name, vv.human_name FROM {views_display} vd JOIN {views_view} vv ON vv.vid = vd.vid );\n    //\n    // foreach ($views as $view) {\n    //   list($display_id, $display_name, $display_options, $view_machine_name, $view_name) = explode( \\t , $view);\n    //   $display_options = Serializer::unserialize($display_options);\n    //\n    //   if (empty($display_options['pager']['options']['items_per_page'])) {\n    //     continue;\n    //   }\n    //\n    //   if ($display_options['pager']['options']['items_per_page']   $this- getOption('threshold', 30)) {\n    //     $errors[] =  strong $view_name /strong   code [$display_name] /code  is displaying  code {$display_options['pager']['options']['items_per_page']} /code ;\n    //     continue;\n    //   }\n    //\n    //   $valid++;\n    // }\n    //\n    // $this- setToken('total', $valid);\n    // $this- setToken('plural', $valid   1 ? 's' : '');\n    // $this- setToken('error', implode(' /li li ', $errors));\n    // $this- setToken('threshold', $this- getOption('threshold', 30));\n    // $this- setToken('error_count', count($errors));\n    //\n    // return empty($errors) ? AuditResponse::AUDIT_SUCCESS : AuditResponse::AUDIT_FAILURE;\n  }", 
            "title": "Source"
        }, 
        {
            "location": "/audits/DrutinyPluginDrupal7Audit/#viewspagination", 
            "text": "Views Pagination  Class:  Drutiny\\Plugin\\Drupal7\\Audit\\ViewsPagination \nExtends:  Drutiny\\Audit \nPackage:  drutiny/plugin-drupal-7", 
            "title": "ViewsPagination"
        }, 
        {
            "location": "/audits/DrutinyPluginDrupal7Audit/#policies_13", 
            "text": "These are the policies that use this class:     Name  Title      Drupal-7:ViewsPagination  Views Pagination", 
            "title": "Policies"
        }, 
        {
            "location": "/audits/DrutinyPluginDrupal7Audit/#parameters_8", 
            "text": "Name  Type  Description  Default      limit  integer  The maximum number of rows a view can list  null", 
            "title": "Parameters"
        }, 
        {
            "location": "/audits/DrutinyPluginDrupal7Audit/#tokens_8", 
            "text": "Name  Type  Description  Default      limit  integer  The maximum number of rows a view can list  null", 
            "title": "Tokens"
        }, 
        {
            "location": "/audits/DrutinyPluginDrupal7Audit/#source_13", 
            "text": "public function audit(Sandbox $sandbox) {\n    $views = $sandbox- drush()- evaluate(function ($limit) {\n      $bad_views = [];\n      foreach (views_get_all_views() as $view_name =  $view) {\n        foreach ($view- display as $display_name =  $display) {\n          if ($display- display_options['pager']['options']['items_per_page']   $limit) {\n            $bad_views[] =  $view_name:$display_name contains   .  $display- display_options['pager']['options']['items_per_page'] .   per page. ;\n          }\n        }\n      }\n      return $bad_views;\n    }, ['limit' =  $sandbox- getParameter('limit', 60)]);\n\n    if (empty($views)) {\n      return TRUE;\n    }\n\n    $sandbox- setParameter('views', $views);\n    return FALSE;\n\n\n    // $valid = 0;\n    // $errors = [];\n    //\n    // // View settings are set per display so we need to query the views display table.\n    // $views = $this- context- drush- sqlQuery( SELECT vd.vid, vd.display_title, vd.display_options, vv.name, vv.human_name FROM {views_display} vd JOIN {views_view} vv ON vv.vid = vd.vid );\n    //\n    // foreach ($views as $view) {\n    //   list($display_id, $display_name, $display_options, $view_machine_name, $view_name) = explode( \\t , $view);\n    //   $display_options = Serializer::unserialize($display_options);\n    //\n    //   if (empty($display_options['pager']['options']['items_per_page'])) {\n    //     continue;\n    //   }\n    //\n    //   if ($display_options['pager']['options']['items_per_page']   $this- getOption('threshold', 30)) {\n    //     $errors[] =  strong $view_name /strong   code [$display_name] /code  is displaying  code {$display_options['pager']['options']['items_per_page']} /code ;\n    //     continue;\n    //   }\n    //\n    //   $valid++;\n    // }\n    //\n    // $this- setToken('total', $valid);\n    // $this- setToken('plural', $valid   1 ? 's' : '');\n    // $this- setToken('error', implode(' /li li ', $errors));\n    // $this- setToken('threshold', $this- getOption('threshold', 30));\n    // $this- setToken('error_count', count($errors));\n    //\n    // return empty($errors) ? AuditResponse::AUDIT_SUCCESS : AuditResponse::AUDIT_FAILURE;\n  }", 
            "title": "Source"
        }, 
        {
            "location": "/audits/DrutinyPluginDrupal7Audit/#zenrebuildregistry", 
            "text": "Class:  Drutiny\\Plugin\\Drupal7\\Audit\\ZenRebuildRegistry \nExtends:  Drutiny\\Audit \nPackage:  drutiny/plugin-drupal-7", 
            "title": "ZenRebuildRegistry"
        }, 
        {
            "location": "/audits/DrutinyPluginDrupal7Audit/#policies_14", 
            "text": "These are the policies that use this class:     Name  Title      Drupal-7:ZenRegistryRebuild  Zen rebuild registry disabled", 
            "title": "Policies"
        }, 
        {
            "location": "/audits/DrutinyPluginDrupal7Audit/#source_14", 
            "text": "public function audit(Sandbox $sandbox) {\n\n    $output = $sandbox- drush()- sqlQuery( SELECT * FROM {variable} WHERE name LIKE 'theme_%'; );\n    $themes_with_rebuild_enabled = [];\n    foreach ($output as $row) {\n      preg_match('/^theme_([a-zA-Z_]+)_settings/', $row, $matches);\n\n      // 'theme_default' is also a variable we want to exclude.\n      if (empty($matches)) {\n        continue;\n      }\n\n      $theme_name = $matches[1];\n\n      if (preg_match('/zen_rebuild_registry.;i:1/', $row)) {\n        $themes_with_rebuild_enabled[] = $theme_name;\n      }\n    }\n\n    if (count($themes_with_rebuild_enabled)   0) {\n      $sandbox- setParameter('number_of_themes', count($themes_with_rebuild_enabled));\n      $sandbox- setParameter('themes', ' code ' . implode(' /code ,  code ', $themes_with_rebuild_enabled) . ' /code ');\n      $sandbox- setParameter('plural', count($themes_with_rebuild_enabled)   1 ? 's' : '');\n      $sandbox- setParameter('prefix', count($themes_with_rebuild_enabled)   1 ? 'are' : 'is');\n      return FALSE;\n    }\n\n    return TRUE;\n  }", 
            "title": "Source"
        }, 
        {
            "location": "/audits/DrutinyPluginDrupal7AuditSecurity/", 
            "text": "WebformPSA_2016_003\n\n\nClass: \nDrutiny\\Plugin\\Drupal7\\Audit\\Security\\WebformPSA_2016_003\n\nExtends: \nDrutiny\\Audit\\Drupal\\ModuleEnabled\n\nPackage: \ndrutiny/plugin-drupal-7\n\n\nThis class can \nremediate\n failed audits.\n\n\nPolicies\n\n\nThese are the policies that use this class:\n\n\n\n\n\n\n\n\nName\n\n\nTitle\n\n\n\n\n\n\n\n\n\n\nDrupal-7:PSA-2016-003\n\n\nPSA-2016-003: Scan webform files for anon PDF uploads\n\n\n\n\n\n\n\n\nSource\n\n\n  public function audit(Sandbox $sandbox) {\n    // Use the audit from ModuleEnable to validate check.\n    $sandbox-\nsetParameter('module', 'webform');\n    if (!parent::audit($sandbox)) {\n      return NULL;\n    }\n\n    // Look for NFL uploads.\n    // See https://www.drupal.org/forum/newsletters/security-public-service-announcements/2016-10-10/drupal-file-upload-by-anonymous\n    $output = $sandbox-\ndrush()-\nsqlq(\nSELECT filename FROM {file_managed} WHERE UPPER(filename) LIKE '%NFL%' AND status = 0;\n);\n\n    if (empty($output)) {\n      $number_of_silly_uploads = 0;\n      $sandbox-\nsetParameter('files', '');\n    }\n    else {\n      $output = explode(PHP_EOL, $output);\n      $output = array_filter($output);\n      $number_of_silly_uploads = count($output);\n\n      // Format with markdown code backticks.\n      $output = array_map(function ($filepath) {\n        return \n`$filepath`\n;\n      }, $output);\n\n      $sandbox-\nsetParameter('files', '- ' . implode(\n\\n- \n, $output) . '\n/code\n');\n    }\n    $sandbox-\nsetParameter('number_of_silly_uploads', $number_of_silly_uploads);\n    $sandbox-\nsetParameter('plural', $number_of_silly_uploads \n 1 ? 's' : '');\n    $sandbox-\nsetParameter('prefix', $number_of_silly_uploads \n 1 ? 'are' : 'is');\n\n    return $number_of_silly_uploads === 0;\n  }", 
            "title": "Plugin Drupal7 Security"
        }, 
        {
            "location": "/audits/DrutinyPluginDrupal7AuditSecurity/#webformpsa_2016_003", 
            "text": "Class:  Drutiny\\Plugin\\Drupal7\\Audit\\Security\\WebformPSA_2016_003 \nExtends:  Drutiny\\Audit\\Drupal\\ModuleEnabled \nPackage:  drutiny/plugin-drupal-7  This class can  remediate  failed audits.", 
            "title": "WebformPSA_2016_003"
        }, 
        {
            "location": "/audits/DrutinyPluginDrupal7AuditSecurity/#policies", 
            "text": "These are the policies that use this class:     Name  Title      Drupal-7:PSA-2016-003  PSA-2016-003: Scan webform files for anon PDF uploads", 
            "title": "Policies"
        }, 
        {
            "location": "/audits/DrutinyPluginDrupal7AuditSecurity/#source", 
            "text": "public function audit(Sandbox $sandbox) {\n    // Use the audit from ModuleEnable to validate check.\n    $sandbox- setParameter('module', 'webform');\n    if (!parent::audit($sandbox)) {\n      return NULL;\n    }\n\n    // Look for NFL uploads.\n    // See https://www.drupal.org/forum/newsletters/security-public-service-announcements/2016-10-10/drupal-file-upload-by-anonymous\n    $output = $sandbox- drush()- sqlq( SELECT filename FROM {file_managed} WHERE UPPER(filename) LIKE '%NFL%' AND status = 0; );\n\n    if (empty($output)) {\n      $number_of_silly_uploads = 0;\n      $sandbox- setParameter('files', '');\n    }\n    else {\n      $output = explode(PHP_EOL, $output);\n      $output = array_filter($output);\n      $number_of_silly_uploads = count($output);\n\n      // Format with markdown code backticks.\n      $output = array_map(function ($filepath) {\n        return  `$filepath` ;\n      }, $output);\n\n      $sandbox- setParameter('files', '- ' . implode( \\n-  , $output) . ' /code ');\n    }\n    $sandbox- setParameter('number_of_silly_uploads', $number_of_silly_uploads);\n    $sandbox- setParameter('plural', $number_of_silly_uploads   1 ? 's' : '');\n    $sandbox- setParameter('prefix', $number_of_silly_uploads   1 ? 'are' : 'is');\n\n    return $number_of_silly_uploads === 0;\n  }", 
            "title": "Source"
        }, 
        {
            "location": "/audits/DrutinyPluginDrupal8Audit/", 
            "text": "ConfigCheck\n\n\nCheck a configuration is set correctly.\n\n\nClass: \nDrutiny\\Plugin\\Drupal8\\Audit\\ConfigCheck\n\nExtends: \nDrutiny\\Audit\\AbstractComparison\n\nPackage: \ndrutiny/plugin-drupal-8\n\n\nThis class can \nremediate\n failed audits.\n\n\nPolicies\n\n\nThese are the policies that use this class:\n\n\n\n\n\n\n\n\nName\n\n\nTitle\n\n\n\n\n\n\n\n\n\n\nDrupal-8:Fast404Enabled\n\n\nCore Fast 404 Enabled\n\n\n\n\n\n\nDrupal-8:UserRegistrationAdminOnly\n\n\nUser registration available to administrators only\n\n\n\n\n\n\nDrupal-8:ErrorLevel\n\n\nHide errors from screen (log only)\n\n\n\n\n\n\nDrupal-8:JsAggregation\n\n\nJavascript aggregation\n\n\n\n\n\n\nDrupal-8:CssAggregation\n\n\nCSS aggregation is enabled\n\n\n\n\n\n\nDrupal-8:PageCacheExpiry\n\n\nPage cache expiry is set\n\n\n\n\n\n\n\n\nParameters\n\n\n\n\n\n\n\n\nName\n\n\nType\n\n\nDescription\n\n\nDefault\n\n\n\n\n\n\n\n\n\n\ncollection\n\n\nstring\n\n\nThe collection the config belongs to.\n\n\nnull\n\n\n\n\n\n\nkey\n\n\nstring\n\n\nThe key the config belongs to.\n\n\nnull\n\n\n\n\n\n\nvalue\n\n\nmixed\n\n\nThe value to compare against the retrived value.\n\n\nnull\n\n\n\n\n\n\ncomp_type\n\n\nstring\n\n\nThe type of comparison to conduct. Defaults to equals. See Drutiny\\Audit\\AbstractComparison\n\n\nnull\n\n\n\n\n\n\n\n\nTokens\n\n\n\n\n\n\n\n\nName\n\n\nType\n\n\nDescription\n\n\nDefault\n\n\n\n\n\n\n\n\n\n\ncollection\n\n\nstring\n\n\nThe collection the config belongs to.\n\n\nnull\n\n\n\n\n\n\nkey\n\n\nstring\n\n\nThe key the config belongs to.\n\n\nnull\n\n\n\n\n\n\nvalue\n\n\nmixed\n\n\nThe value to compare against the retrived value.\n\n\nnull\n\n\n\n\n\n\ncomp_type\n\n\nstring\n\n\nThe type of comparison to conduct. Defaults to equals. See Drutiny\\Audit\\AbstractComparison\n\n\nnull\n\n\n\n\n\n\n\n\nSource\n\n\n  public function audit(Sandbox $sandbox) {\n    $collection = $sandbox-\ngetParameter('collection');\n    $key = $sandbox-\ngetParameter('key');\n    $value = $sandbox-\ngetParameter('value');\n\n    $config = $sandbox-\ndrush([\n      'format' =\n 'json',\n      'include-overridden' =\n NULL,\n      ])-\nconfigGet($collection, $key);\n    $reading = $config[$collection . ':' . $key];\n\n    $sandbox-\nsetParameter('reading', $reading);\n\n    return $this-\ncompare($reading, $value, $sandbox);\n  }\n\n\n\n\n\nCronHasRun\n\n\nCron last run.\n\n\nClass: \nDrutiny\\Plugin\\Drupal8\\Audit\\CronHasRun\n\nExtends: \nDrutiny\\Audit\n\nPackage: \ndrutiny/plugin-drupal-8\n\n\nPolicies\n\n\nThese are the policies that use this class:\n\n\n\n\n\n\n\n\nName\n\n\nTitle\n\n\n\n\n\n\n\n\n\n\nDrupal-8:CronHasRun\n\n\nCron last run\n\n\n\n\n\n\n\n\nParameters\n\n\n\n\n\n\n\n\nName\n\n\nType\n\n\nDescription\n\n\nDefault\n\n\n\n\n\n\n\n\n\n\ncron_max_interval\n\n\ninteger\n\n\nThe maximum interval between\n\n\nnull\n\n\n\n\n\n\n\n\nTokens\n\n\n\n\n\n\n\n\nName\n\n\nType\n\n\nDescription\n\n\nDefault\n\n\n\n\n\n\n\n\n\n\ncron_max_interval\n\n\ninteger\n\n\nThe maximum interval between\n\n\nnull\n\n\n\n\n\n\n\n\nSource\n\n\n  public function audit(Sandbox $sandbox) {\n\n    try {\n      $timestamp = $sandbox-\ndrush(['format' =\n 'json'])-\nstateGet('system.cron_last');\n    }\n    catch (DrushFormatException $e) {\n      return FALSE;\n    }\n\n    // Check that cron was run in the last day.\n    $since = time() - $timestamp;\n    $sandbox-\nsetParameter('cron_last', date('Y-m-d H:i:s', $timestamp));\n\n    if ($since \n $sandbox-\ngetParameter('cron_max_interval')) {\n      return FALSE;\n    }\n\n    return TRUE;\n  }\n\n\n\n\n\nCronLast\n\n\nCheck a configuration is set correctly.\n\n\nClass: \nDrutiny\\Plugin\\Drupal8\\Audit\\CronLast\n\nExtends: \nDrutiny\\Audit\n\nPackage: \ndrutiny/plugin-drupal-8\n\n\nPolicies\n\n\nThese are the policies that use this class:\n\n\n\n\n\n\n\n\nName\n\n\nTitle\n\n\n\n\n\n\n\n\n\n\nDrupal-8:CronLast\n\n\nCron running regularly\n\n\n\n\n\n\n\n\nSource\n\n\n  public function audit(Sandbox $sandbox) {\n\n    try {\n      $last = $sandbox-\ndrush([\n        'format' =\n 'json'\n        ])-\nstateGet('system.cron_last');\n\n      if (empty($last)) {\n        return FALSE;\n      }\n\n      $sandbox-\nsetParameter('cron_last', date('l jS \\of F Y h:i:s A', $last));\n\n      $time_diff = time() - $last;\n      // Fail if cron hasn't run in the last 24 hours.\n      if ($time_diff \n 86400) {\n        return FALSE;\n      }\n      return TRUE;\n    }\n    catch (DrushFormatException $e) {\n      return Audit::ERROR;\n    }\n  }\n\n\n\n\n\nDuplicateModules\n\n\nDuplicate modules.\n\n\nClass: \nDrutiny\\Plugin\\Drupal8\\Audit\\DuplicateModules\n\nExtends: \nDrutiny\\Audit\n\nPackage: \ndrutiny/plugin-drupal-8\n\n\nPolicies\n\n\nThese are the policies that use this class:\n\n\n\n\n\n\n\n\nName\n\n\nTitle\n\n\n\n\n\n\n\n\n\n\nDrupal-8:DuplicateModules\n\n\nNo duplicate modules found\n\n\n\n\n\n\n\n\nSource\n\n\n  public function audit(Sandbox $sandbox) {\n    $config = $sandbox-\ndrush(['format' =\n 'json'])\n      -\nstatus();\n\n    $docroot = $config['root'];\n\n    $command = \nCMD\nfind $docroot -name '*.info.yml' -type f |\\\ngrep -Ev '/themes/|/test' |\\\ngrep -oe '[^/]*\\.info.yml' | cut -d'.' -f1 | sort |\\\nuniq -c | sort -nr | awk '{print $2\n: \n$1}'\nCMD;\n\n    $output = $sandbox-\nexec($command);\n\n    if (empty($output)) {\n      return TRUE;\n    }\n\n    // Ignore modules where there are only 1 of them.\n    $module_count = array_filter(Yaml::parse($output), function ($count) {\n      return $count \n 1;\n    });\n\n    $sandbox-\nsetParameter('duplicate_modules', array_keys($module_count));\n\n    return count($module_count) == 0;\n  }\n\n\n\n\n\nModuleDisabled\n\n\nGeneric module is disabled check.\n\n\nClass: \nDrutiny\\Plugin\\Drupal8\\Audit\\ModuleDisabled\n\nExtends: \nDrutiny\\Audit\n\nPackage: \ndrutiny/plugin-drupal-8\n\n\nThis class can \nremediate\n failed audits.\n\n\nPolicies\n\n\nThese are the policies that use this class:\n\n\n\n\n\n\n\n\nName\n\n\nTitle\n\n\n\n\n\n\n\n\n\n\nDrupal-8:NoBackupAndMigrate\n\n\nBackup and Migrate is not installed\n\n\n\n\n\n\nDrupal-8:WebprofilerDisabled\n\n\nWebprofiler module is not installed\n\n\n\n\n\n\nDrupal-8:DblogDisabled\n\n\nDatabase logging is not installed\n\n\n\n\n\n\nDrupal-8:ConfigDevelDisabled\n\n\nConfiguration development module is not installed\n\n\n\n\n\n\nDrupal-8:StatisticsDisabled\n\n\nStatistics module is not installed\n\n\n\n\n\n\nDrupal-8:PhpDisabled\n\n\nPHP module is not installed\n\n\n\n\n\n\nDrupal-8:NoAutomatedCron\n\n\nAutomated Cron module is not installed\n\n\n\n\n\n\nDrupal-8:DevelDisabled\n\n\nDevel module is not installed\n\n\n\n\n\n\nDrupal-8:UpdateDisabled\n\n\nUpdate module is not installed\n\n\n\n\n\n\nDrupal-8:ShieldDisabled\n\n\nShield module is not installed\n\n\n\n\n\n\nDrupal-8:KintDisabled\n\n\nKint module is not installed\n\n\n\n\n\n\nDrupal-8:SimpleTestDisabled\n\n\nSimpletest module is not installed\n\n\n\n\n\n\nAcquia:CloudEdgeNoPurge\n\n\nAcquia Cloud Edge Purging Enabled\n\n\n\n\n\n\n\n\nParameters\n\n\n\n\n\n\n\n\nName\n\n\nType\n\n\nDescription\n\n\nDefault\n\n\n\n\n\n\n\n\n\n\nmodule\n\n\nstring\n\n\nThe module to check is enabled.\n\n\nnull\n\n\n\n\n\n\n\n\nTokens\n\n\n\n\n\n\n\n\nName\n\n\nType\n\n\nDescription\n\n\nDefault\n\n\n\n\n\n\n\n\n\n\nmodule\n\n\nstring\n\n\nThe module to check is enabled.\n\n\nnull\n\n\n\n\n\n\n\n\nSource\n\n\n  public function audit(Sandbox $sandbox)\n  {\n\n    $module = $sandbox-\ngetParameter('module');\n\n    try {\n      $info = $sandbox-\ndrush(['format' =\n 'json'])-\npmList();\n    }\n    catch (DrushFormatException $e) {\n      return strpos($e-\ngetOutput(), $module . ' was not found.') !== FALSE;\n    }\n\n    if (!isset($info[$module])) {\n      return TRUE;\n    }\n\n    $status = strtolower($info[$module]['status']);\n\n    return ($status == 'not installed');\n  }\n\n\n\n\n\nNoExperimentalCore\n\n\nGeneric module is disabled check.\n\n\nClass: \nDrutiny\\Plugin\\Drupal8\\Audit\\NoExperimentalCore\n\nExtends: \nDrutiny\\Audit\n\nPackage: \ndrutiny/plugin-drupal-8\n\n\nPolicies\n\n\nThese are the policies that use this class:\n\n\n\n\n\n\n\n\nName\n\n\nTitle\n\n\n\n\n\n\n\n\n\n\nDrupal-8:NoExperimental\n\n\nNo Experimental Modules in Use\n\n\n\n\n\n\n\n\nSource\n\n\n  public function audit(Sandbox $sandbox)\n  {\n\n    $info = $sandbox-\ndrush([\n      'format' =\n 'json',\n      'status' =\n 'Enabled',\n      'core',\n    ])-\npmList();\n\n    $info = array_filter($info, function ($package) {\n      return strpos('experimental', strtolower($package['package'])) !== FALSE;\n    });\n\n    if (empty($info)) {\n      return TRUE;\n    }\n\n    $sandbox-\nsetParameter('modules', array_values($info));\n    return FALSE;\n  }\n\n\n\n\n\nPurgePluginExists\n\n\nCheck a purge plugin exists.\n\n\nClass: \nDrutiny\\Plugin\\Drupal8\\Audit\\PurgePluginExists\n\nExtends: \nDrutiny\\Audit\n\nPackage: \ndrutiny/plugin-drupal-8\n\n\nPolicies\n\n\nThese are the policies that use this class:\n\n\n\n\n\n\n\n\nName\n\n\nTitle\n\n\n\n\n\n\n\n\n\n\nAcquia:PurgePlugin\n\n\nAcquia Purge Plugin Exists\n\n\n\n\n\n\n\n\nParameters\n\n\n\n\n\n\n\n\nName\n\n\nType\n\n\nDescription\n\n\nDefault\n\n\n\n\n\n\n\n\n\n\nplugin\n\n\nstring\n\n\nThe plugins to check exists\n\n\nnull\n\n\n\n\n\n\n\n\nTokens\n\n\n\n\n\n\n\n\nName\n\n\nType\n\n\nDescription\n\n\nDefault\n\n\n\n\n\n\n\n\n\n\nplugin\n\n\nstring\n\n\nThe plugins to check exists\n\n\nnull\n\n\n\n\n\n\n\n\nSource\n\n\n  public function audit(Sandbox $sandbox) {\n    $plugin_name = $sandbox-\ngetParameter('plugin');\n\n    try {\n      $config = $sandbox-\ndrush([\n        'format' =\n 'json',\n        'include-overridden' =\n NULL,\n        ])-\nconfigGet('purge.plugins');\n      $plugins = $config['purgers'];\n\n      foreach ($plugins as $plugin) {\n        if ($plugin['plugin_id'] == $plugin_name) {\n          return TRUE;\n        }\n      }\n    }\n    catch (\\Drutiny\\Driver\\DrushFormatException $e) {\n      $sandbox-\nsetParameter('exception', $e-\ngetMessage());\n    }\n\n    return FALSE;\n  }\n\n\n\n\n\nPurgePluginNotExists\n\n\nCheck a purge plugin exists.\n\n\nClass: \nDrutiny\\Plugin\\Drupal8\\Audit\\PurgePluginNotExists\n\nExtends: \nDrutiny\\Plugin\\Drupal8\\Audit\\PurgePluginExists\n\nPackage: \ndrutiny/plugin-drupal-8\n\n\nSource\n\n\n  public function audit(Sandbox $sandbox) {\n    return !parent::audit($sandbox);\n  }\n\n\n\n\n\nSettingCompare\n\n\nCheck a configuration is set correctly.\n\n\nClass: \nDrutiny\\Plugin\\Drupal8\\Audit\\SettingCompare\n\nExtends: \nDrutiny\\Audit\\AbstractComparison\n\nPackage: \ndrutiny/plugin-drupal-8\n\n\nPolicies\n\n\nThese are the policies that use this class:\n\n\n\n\n\n\n\n\nName\n\n\nTitle\n\n\n\n\n\n\n\n\n\n\nDrupal-8:DefaultCacheMemcache\n\n\nMemcache set as default cache backend\n\n\n\n\n\n\nDrupal-8:MemcachedExtension\n\n\nMemcache extension set\n\n\n\n\n\n\n\n\nParameters\n\n\n\n\n\n\n\n\nName\n\n\nType\n\n\nDescription\n\n\nDefault\n\n\n\n\n\n\n\n\n\n\nkey\n\n\nstring\n\n\nThe settings key to evauate\n\n\nnull\n\n\n\n\n\n\nvalue\n\n\nstring\n\n\nThe value of the key you want to compare against.\n\n\nnull\n\n\n\n\n\n\n\n\nTokens\n\n\n\n\n\n\n\n\nName\n\n\nType\n\n\nDescription\n\n\nDefault\n\n\n\n\n\n\n\n\n\n\nkey\n\n\nstring\n\n\nThe settings key to evauate\n\n\nnull\n\n\n\n\n\n\nvalue\n\n\nstring\n\n\nThe value of the key you want to compare against.\n\n\nnull\n\n\n\n\n\n\nreading\n\n\nmixed\n\n\nThe value retrieve from the key in the Drupal site.\n\n\nnull\n\n\n\n\n\n\n\n\nSource\n\n\n  public function audit(Sandbox $sandbox) {\n    $key = $sandbox-\ngetParameter('key');\n    $value = $sandbox-\ngetParameter('value');\n\n    $settings = $sandbox-\ndrush()-\nevaluate(function () {\n      return \\Drupal\\Core\\Site\\Settings::getAll();\n    });\n\n    if (!is_array($settings)){\n      throw new \\Exception(\nSettings retrieved were not in a known format. Expected Array.\n);\n    }\n\n    $keys = explode('.', $key);\n\n    while ($k = array_shift($keys)) {\n      if (!isset($settings[$k])) {\n        $sandbox-\nlogger()-\ninfo(\nCould not find '$k' value in $key. No such setting exists.\n);\n        return FALSE;\n      }\n      $settings = $settings[$k];\n    }\n\n    $reading = $settings;\n\n    $sandbox-\nsetParameter('reading', $reading);\n\n    return $this-\ncompare($reading, $value, $sandbox);\n  }\n\n\n\n\n\nUntrustedRoles\n\n\nUser #1\n\n\nClass: \nDrutiny\\Plugin\\Drupal8\\Audit\\UntrustedRoles\n\nExtends: \nDrutiny\\Audit\n\nPackage: \ndrutiny/plugin-drupal-8\n\n\nPolicies\n\n\nThese are the policies that use this class:\n\n\n\n\n\n\n\n\nName\n\n\nTitle\n\n\n\n\n\n\n\n\n\n\nDrupal-8:UntrustedRoles\n\n\nUntrusted Roles with administrative permissions\n\n\n\n\n\n\n\n\nSource\n\n\n  public function audit(Sandbox $sandbox) {\n    $rows = $sandbox-\ndrush()-\nevaluate(function ($roles) {\n      // Load all of Drupal's permissions so that we have access to the\n      // \nrestrict access\n property.\n      $all_permissions = \\Drupal::service('user.permissions')-\ngetPermissions();\n\n      $rows = [];\n      foreach ($roles as $role) {\n        $untrusted_permissions = [];\n\n        // Get all permissions assigned to the untrusted role.\n        $roleObj = \\Drupal\\user\\Entity\\Role::load($role);\n        $permissions = $roleObj-\ngetPermissions();\n\n        // Check each permission assigned to the untrusted role and determine if\n        // it is administrative.\n        // Administrative permissions will either have the \nrestrict access\n\n        // property set, or the permission name contains the string \nadminister\n.\n        foreach ($permissions as $permission) {\n          if (isset($all_permissions[$permission]['restrict access']) ||\n            strstr($permission, 'administer') !== FALSE ) {\n              $untrusted_permissions[] = $all_permissions[$permission]['title'];\n          }\n        }\n\n        if (!empty($untrusted_permissions)) {\n          $rows[] = [\n            'role' =\n $role,\n            'permissions' =\n implode(', ', $untrusted_permissions),\n          ];\n        }\n      }\n      return $rows;\n    }, [\n      'roles' =\n $sandbox-\ngetParameter('untrusted_roles', ['anonymous', 'authenticated'])\n    ]);\n\n    $sandbox-\nsetParameter('rows', $rows);\n\n    return empty($rows) ? AUDIT::SUCCESS : AUDIT::FAIL;\n  }\n\n\n\n\n\nUnusedModules\n\n\nCron last run.\n\n\nClass: \nDrutiny\\Plugin\\Drupal8\\Audit\\UnusedModules\n\nExtends: \nDrutiny\\Audit\n\nPackage: \ndrutiny/plugin-drupal-8\n\n\nPolicies\n\n\nThese are the policies that use this class:\n\n\n\n\n\n\n\n\nName\n\n\nTitle\n\n\n\n\n\n\n\n\n\n\nDrupal-8:UnusedModules\n\n\nUnused modules in the codebase\n\n\n\n\n\n\n\n\nSource\n\n\n  public function audit(Sandbox $sandbox) {\n\n    try {\n      $list = $sandbox-\ndrush(['format' =\n 'json'])-\npmInfo();\n    }\n    catch (DrushFormatException $e) {\n      return FALSE;\n    }\n\n    $installed_paths = [];\n    $disabled = [];\n    foreach ($list as $project =\n $info) {\n\n      if (strpos($info['package'], 'Core') !== FALSE) {\n        continue;\n      }\n      if ($info['type'] == 'theme') {\n        continue;\n      }\n      if ($info['status'] == 'enabled') {\n        $installed_paths[] = $info['path'];\n        continue;\n      }\n      $disabled[$project] = $info;\n    }\n\n    $unused = [];\n    foreach ($disabled as $project =\n $info) {\n      foreach ($installed_paths as $path) {\n        if (strpos($info['path'], $path) !== FALSE) {\n          continue 2;\n        }\n      }\n      $unused[] = $info['title'];\n    }\n\n    $sandbox-\nsetParameter('unused_modules', $unused);\n\n    return !count($unused);\n  }\n\n\n\n\n\nUser1\n\n\nUser #1\n\n\nClass: \nDrutiny\\Plugin\\Drupal8\\Audit\\User1\n\nExtends: \nDrutiny\\Audit\n\nPackage: \ndrutiny/plugin-drupal-8\n\n\nThis class can \nremediate\n failed audits.\n\n\nPolicies\n\n\nThese are the policies that use this class:\n\n\n\n\n\n\n\n\nName\n\n\nTitle\n\n\n\n\n\n\n\n\n\n\nDrupal-8:User1LockDown\n\n\nAdministrator login is locked down (uid:1)\n\n\n\n\n\n\n\n\nParameters\n\n\n\n\n\n\n\n\nName\n\n\nType\n\n\nDescription\n\n\nDefault\n\n\n\n\n\n\n\n\n\n\nemail\n\n\n\n\nThe email the user account should be.\n\n\nnull\n\n\n\n\n\n\nblacklist\n\n\n\n\nList of usernames that are not acceptable.\n\n\nnull\n\n\n\n\n\n\nstatus\n\n\n\n\nWhether the account should be enabled or disabled.\n\n\nnull\n\n\n\n\n\n\n\n\nTokens\n\n\n\n\n\n\n\n\nName\n\n\nType\n\n\nDescription\n\n\nDefault\n\n\n\n\n\n\n\n\n\n\nemail\n\n\n\n\nThe email the user account should be.\n\n\nnull\n\n\n\n\n\n\nblacklist\n\n\n\n\nList of usernames that are not acceptable.\n\n\nnull\n\n\n\n\n\n\nstatus\n\n\n\n\nWhether the account should be enabled or disabled.\n\n\nnull\n\n\n\n\n\n\n\n\nSource\n\n\n  public function audit(Sandbox $sandbox) {\n    // Get the details for user #1.\n    $user = $sandbox-\ndrush(['format' =\n 'json'])\n                    -\nuserInformation(1);\n\n    $user = (object) array_pop($user);\n\n    $errors = [];\n    $fixups = [];\n\n    // Username.\n    $pattern = $sandbox-\ngetParameter('blacklist');\n    if (preg_match(\n#${pattern}#i\n, $user-\nname)) {\n      $errors[] = \nUsername '$user-\nname' is too easy to guess.\n;\n    }\n    $sandbox-\nsetParameter('username', $user-\nname);\n\n    // Email address.\n    $email = $sandbox-\ngetParameter('email');\n\n    if (!empty($email) \n ($email !== $user-\nmail)) {\n      $errors[] = \nEmail address '$user-\nmail' is not set correctly.\n;\n    }\n\n    // Status.\n    $status = (bool) $sandbox-\ngetParameter('status');\n    if ($status !== (bool) $user-\nstatus) {\n      $errors[] = 'Status is not set correctly. Should be ' . ($user-\nstatus ? 'active' : 'inactive') . '.';\n    }\n\n    $sandbox-\nsetParameter('errors', $errors);\n    return empty($errors) ? TRUE : Audit::WARNING;\n  }", 
            "title": "Plugin Drupal8 "
        }, 
        {
            "location": "/audits/DrutinyPluginDrupal8Audit/#configcheck", 
            "text": "Check a configuration is set correctly.  Class:  Drutiny\\Plugin\\Drupal8\\Audit\\ConfigCheck \nExtends:  Drutiny\\Audit\\AbstractComparison \nPackage:  drutiny/plugin-drupal-8  This class can  remediate  failed audits.", 
            "title": "ConfigCheck"
        }, 
        {
            "location": "/audits/DrutinyPluginDrupal8Audit/#policies", 
            "text": "These are the policies that use this class:     Name  Title      Drupal-8:Fast404Enabled  Core Fast 404 Enabled    Drupal-8:UserRegistrationAdminOnly  User registration available to administrators only    Drupal-8:ErrorLevel  Hide errors from screen (log only)    Drupal-8:JsAggregation  Javascript aggregation    Drupal-8:CssAggregation  CSS aggregation is enabled    Drupal-8:PageCacheExpiry  Page cache expiry is set", 
            "title": "Policies"
        }, 
        {
            "location": "/audits/DrutinyPluginDrupal8Audit/#parameters", 
            "text": "Name  Type  Description  Default      collection  string  The collection the config belongs to.  null    key  string  The key the config belongs to.  null    value  mixed  The value to compare against the retrived value.  null    comp_type  string  The type of comparison to conduct. Defaults to equals. See Drutiny\\Audit\\AbstractComparison  null", 
            "title": "Parameters"
        }, 
        {
            "location": "/audits/DrutinyPluginDrupal8Audit/#tokens", 
            "text": "Name  Type  Description  Default      collection  string  The collection the config belongs to.  null    key  string  The key the config belongs to.  null    value  mixed  The value to compare against the retrived value.  null    comp_type  string  The type of comparison to conduct. Defaults to equals. See Drutiny\\Audit\\AbstractComparison  null", 
            "title": "Tokens"
        }, 
        {
            "location": "/audits/DrutinyPluginDrupal8Audit/#source", 
            "text": "public function audit(Sandbox $sandbox) {\n    $collection = $sandbox- getParameter('collection');\n    $key = $sandbox- getParameter('key');\n    $value = $sandbox- getParameter('value');\n\n    $config = $sandbox- drush([\n      'format' =  'json',\n      'include-overridden' =  NULL,\n      ])- configGet($collection, $key);\n    $reading = $config[$collection . ':' . $key];\n\n    $sandbox- setParameter('reading', $reading);\n\n    return $this- compare($reading, $value, $sandbox);\n  }", 
            "title": "Source"
        }, 
        {
            "location": "/audits/DrutinyPluginDrupal8Audit/#cronhasrun", 
            "text": "Cron last run.  Class:  Drutiny\\Plugin\\Drupal8\\Audit\\CronHasRun \nExtends:  Drutiny\\Audit \nPackage:  drutiny/plugin-drupal-8", 
            "title": "CronHasRun"
        }, 
        {
            "location": "/audits/DrutinyPluginDrupal8Audit/#policies_1", 
            "text": "These are the policies that use this class:     Name  Title      Drupal-8:CronHasRun  Cron last run", 
            "title": "Policies"
        }, 
        {
            "location": "/audits/DrutinyPluginDrupal8Audit/#parameters_1", 
            "text": "Name  Type  Description  Default      cron_max_interval  integer  The maximum interval between  null", 
            "title": "Parameters"
        }, 
        {
            "location": "/audits/DrutinyPluginDrupal8Audit/#tokens_1", 
            "text": "Name  Type  Description  Default      cron_max_interval  integer  The maximum interval between  null", 
            "title": "Tokens"
        }, 
        {
            "location": "/audits/DrutinyPluginDrupal8Audit/#source_1", 
            "text": "public function audit(Sandbox $sandbox) {\n\n    try {\n      $timestamp = $sandbox- drush(['format' =  'json'])- stateGet('system.cron_last');\n    }\n    catch (DrushFormatException $e) {\n      return FALSE;\n    }\n\n    // Check that cron was run in the last day.\n    $since = time() - $timestamp;\n    $sandbox- setParameter('cron_last', date('Y-m-d H:i:s', $timestamp));\n\n    if ($since   $sandbox- getParameter('cron_max_interval')) {\n      return FALSE;\n    }\n\n    return TRUE;\n  }", 
            "title": "Source"
        }, 
        {
            "location": "/audits/DrutinyPluginDrupal8Audit/#cronlast", 
            "text": "Check a configuration is set correctly.  Class:  Drutiny\\Plugin\\Drupal8\\Audit\\CronLast \nExtends:  Drutiny\\Audit \nPackage:  drutiny/plugin-drupal-8", 
            "title": "CronLast"
        }, 
        {
            "location": "/audits/DrutinyPluginDrupal8Audit/#policies_2", 
            "text": "These are the policies that use this class:     Name  Title      Drupal-8:CronLast  Cron running regularly", 
            "title": "Policies"
        }, 
        {
            "location": "/audits/DrutinyPluginDrupal8Audit/#source_2", 
            "text": "public function audit(Sandbox $sandbox) {\n\n    try {\n      $last = $sandbox- drush([\n        'format' =  'json'\n        ])- stateGet('system.cron_last');\n\n      if (empty($last)) {\n        return FALSE;\n      }\n\n      $sandbox- setParameter('cron_last', date('l jS \\of F Y h:i:s A', $last));\n\n      $time_diff = time() - $last;\n      // Fail if cron hasn't run in the last 24 hours.\n      if ($time_diff   86400) {\n        return FALSE;\n      }\n      return TRUE;\n    }\n    catch (DrushFormatException $e) {\n      return Audit::ERROR;\n    }\n  }", 
            "title": "Source"
        }, 
        {
            "location": "/audits/DrutinyPluginDrupal8Audit/#duplicatemodules", 
            "text": "Duplicate modules.  Class:  Drutiny\\Plugin\\Drupal8\\Audit\\DuplicateModules \nExtends:  Drutiny\\Audit \nPackage:  drutiny/plugin-drupal-8", 
            "title": "DuplicateModules"
        }, 
        {
            "location": "/audits/DrutinyPluginDrupal8Audit/#policies_3", 
            "text": "These are the policies that use this class:     Name  Title      Drupal-8:DuplicateModules  No duplicate modules found", 
            "title": "Policies"
        }, 
        {
            "location": "/audits/DrutinyPluginDrupal8Audit/#source_3", 
            "text": "public function audit(Sandbox $sandbox) {\n    $config = $sandbox- drush(['format' =  'json'])\n      - status();\n\n    $docroot = $config['root'];\n\n    $command =  CMD\nfind $docroot -name '*.info.yml' -type f |\\\ngrep -Ev '/themes/|/test' |\\\ngrep -oe '[^/]*\\.info.yml' | cut -d'.' -f1 | sort |\\\nuniq -c | sort -nr | awk '{print $2 :  $1}'\nCMD;\n\n    $output = $sandbox- exec($command);\n\n    if (empty($output)) {\n      return TRUE;\n    }\n\n    // Ignore modules where there are only 1 of them.\n    $module_count = array_filter(Yaml::parse($output), function ($count) {\n      return $count   1;\n    });\n\n    $sandbox- setParameter('duplicate_modules', array_keys($module_count));\n\n    return count($module_count) == 0;\n  }", 
            "title": "Source"
        }, 
        {
            "location": "/audits/DrutinyPluginDrupal8Audit/#moduledisabled", 
            "text": "Generic module is disabled check.  Class:  Drutiny\\Plugin\\Drupal8\\Audit\\ModuleDisabled \nExtends:  Drutiny\\Audit \nPackage:  drutiny/plugin-drupal-8  This class can  remediate  failed audits.", 
            "title": "ModuleDisabled"
        }, 
        {
            "location": "/audits/DrutinyPluginDrupal8Audit/#policies_4", 
            "text": "These are the policies that use this class:     Name  Title      Drupal-8:NoBackupAndMigrate  Backup and Migrate is not installed    Drupal-8:WebprofilerDisabled  Webprofiler module is not installed    Drupal-8:DblogDisabled  Database logging is not installed    Drupal-8:ConfigDevelDisabled  Configuration development module is not installed    Drupal-8:StatisticsDisabled  Statistics module is not installed    Drupal-8:PhpDisabled  PHP module is not installed    Drupal-8:NoAutomatedCron  Automated Cron module is not installed    Drupal-8:DevelDisabled  Devel module is not installed    Drupal-8:UpdateDisabled  Update module is not installed    Drupal-8:ShieldDisabled  Shield module is not installed    Drupal-8:KintDisabled  Kint module is not installed    Drupal-8:SimpleTestDisabled  Simpletest module is not installed    Acquia:CloudEdgeNoPurge  Acquia Cloud Edge Purging Enabled", 
            "title": "Policies"
        }, 
        {
            "location": "/audits/DrutinyPluginDrupal8Audit/#parameters_2", 
            "text": "Name  Type  Description  Default      module  string  The module to check is enabled.  null", 
            "title": "Parameters"
        }, 
        {
            "location": "/audits/DrutinyPluginDrupal8Audit/#tokens_2", 
            "text": "Name  Type  Description  Default      module  string  The module to check is enabled.  null", 
            "title": "Tokens"
        }, 
        {
            "location": "/audits/DrutinyPluginDrupal8Audit/#source_4", 
            "text": "public function audit(Sandbox $sandbox)\n  {\n\n    $module = $sandbox- getParameter('module');\n\n    try {\n      $info = $sandbox- drush(['format' =  'json'])- pmList();\n    }\n    catch (DrushFormatException $e) {\n      return strpos($e- getOutput(), $module . ' was not found.') !== FALSE;\n    }\n\n    if (!isset($info[$module])) {\n      return TRUE;\n    }\n\n    $status = strtolower($info[$module]['status']);\n\n    return ($status == 'not installed');\n  }", 
            "title": "Source"
        }, 
        {
            "location": "/audits/DrutinyPluginDrupal8Audit/#noexperimentalcore", 
            "text": "Generic module is disabled check.  Class:  Drutiny\\Plugin\\Drupal8\\Audit\\NoExperimentalCore \nExtends:  Drutiny\\Audit \nPackage:  drutiny/plugin-drupal-8", 
            "title": "NoExperimentalCore"
        }, 
        {
            "location": "/audits/DrutinyPluginDrupal8Audit/#policies_5", 
            "text": "These are the policies that use this class:     Name  Title      Drupal-8:NoExperimental  No Experimental Modules in Use", 
            "title": "Policies"
        }, 
        {
            "location": "/audits/DrutinyPluginDrupal8Audit/#source_5", 
            "text": "public function audit(Sandbox $sandbox)\n  {\n\n    $info = $sandbox- drush([\n      'format' =  'json',\n      'status' =  'Enabled',\n      'core',\n    ])- pmList();\n\n    $info = array_filter($info, function ($package) {\n      return strpos('experimental', strtolower($package['package'])) !== FALSE;\n    });\n\n    if (empty($info)) {\n      return TRUE;\n    }\n\n    $sandbox- setParameter('modules', array_values($info));\n    return FALSE;\n  }", 
            "title": "Source"
        }, 
        {
            "location": "/audits/DrutinyPluginDrupal8Audit/#purgepluginexists", 
            "text": "Check a purge plugin exists.  Class:  Drutiny\\Plugin\\Drupal8\\Audit\\PurgePluginExists \nExtends:  Drutiny\\Audit \nPackage:  drutiny/plugin-drupal-8", 
            "title": "PurgePluginExists"
        }, 
        {
            "location": "/audits/DrutinyPluginDrupal8Audit/#policies_6", 
            "text": "These are the policies that use this class:     Name  Title      Acquia:PurgePlugin  Acquia Purge Plugin Exists", 
            "title": "Policies"
        }, 
        {
            "location": "/audits/DrutinyPluginDrupal8Audit/#parameters_3", 
            "text": "Name  Type  Description  Default      plugin  string  The plugins to check exists  null", 
            "title": "Parameters"
        }, 
        {
            "location": "/audits/DrutinyPluginDrupal8Audit/#tokens_3", 
            "text": "Name  Type  Description  Default      plugin  string  The plugins to check exists  null", 
            "title": "Tokens"
        }, 
        {
            "location": "/audits/DrutinyPluginDrupal8Audit/#source_6", 
            "text": "public function audit(Sandbox $sandbox) {\n    $plugin_name = $sandbox- getParameter('plugin');\n\n    try {\n      $config = $sandbox- drush([\n        'format' =  'json',\n        'include-overridden' =  NULL,\n        ])- configGet('purge.plugins');\n      $plugins = $config['purgers'];\n\n      foreach ($plugins as $plugin) {\n        if ($plugin['plugin_id'] == $plugin_name) {\n          return TRUE;\n        }\n      }\n    }\n    catch (\\Drutiny\\Driver\\DrushFormatException $e) {\n      $sandbox- setParameter('exception', $e- getMessage());\n    }\n\n    return FALSE;\n  }", 
            "title": "Source"
        }, 
        {
            "location": "/audits/DrutinyPluginDrupal8Audit/#purgepluginnotexists", 
            "text": "Check a purge plugin exists.  Class:  Drutiny\\Plugin\\Drupal8\\Audit\\PurgePluginNotExists \nExtends:  Drutiny\\Plugin\\Drupal8\\Audit\\PurgePluginExists \nPackage:  drutiny/plugin-drupal-8", 
            "title": "PurgePluginNotExists"
        }, 
        {
            "location": "/audits/DrutinyPluginDrupal8Audit/#source_7", 
            "text": "public function audit(Sandbox $sandbox) {\n    return !parent::audit($sandbox);\n  }", 
            "title": "Source"
        }, 
        {
            "location": "/audits/DrutinyPluginDrupal8Audit/#settingcompare", 
            "text": "Check a configuration is set correctly.  Class:  Drutiny\\Plugin\\Drupal8\\Audit\\SettingCompare \nExtends:  Drutiny\\Audit\\AbstractComparison \nPackage:  drutiny/plugin-drupal-8", 
            "title": "SettingCompare"
        }, 
        {
            "location": "/audits/DrutinyPluginDrupal8Audit/#policies_7", 
            "text": "These are the policies that use this class:     Name  Title      Drupal-8:DefaultCacheMemcache  Memcache set as default cache backend    Drupal-8:MemcachedExtension  Memcache extension set", 
            "title": "Policies"
        }, 
        {
            "location": "/audits/DrutinyPluginDrupal8Audit/#parameters_4", 
            "text": "Name  Type  Description  Default      key  string  The settings key to evauate  null    value  string  The value of the key you want to compare against.  null", 
            "title": "Parameters"
        }, 
        {
            "location": "/audits/DrutinyPluginDrupal8Audit/#tokens_4", 
            "text": "Name  Type  Description  Default      key  string  The settings key to evauate  null    value  string  The value of the key you want to compare against.  null    reading  mixed  The value retrieve from the key in the Drupal site.  null", 
            "title": "Tokens"
        }, 
        {
            "location": "/audits/DrutinyPluginDrupal8Audit/#source_8", 
            "text": "public function audit(Sandbox $sandbox) {\n    $key = $sandbox- getParameter('key');\n    $value = $sandbox- getParameter('value');\n\n    $settings = $sandbox- drush()- evaluate(function () {\n      return \\Drupal\\Core\\Site\\Settings::getAll();\n    });\n\n    if (!is_array($settings)){\n      throw new \\Exception( Settings retrieved were not in a known format. Expected Array. );\n    }\n\n    $keys = explode('.', $key);\n\n    while ($k = array_shift($keys)) {\n      if (!isset($settings[$k])) {\n        $sandbox- logger()- info( Could not find '$k' value in $key. No such setting exists. );\n        return FALSE;\n      }\n      $settings = $settings[$k];\n    }\n\n    $reading = $settings;\n\n    $sandbox- setParameter('reading', $reading);\n\n    return $this- compare($reading, $value, $sandbox);\n  }", 
            "title": "Source"
        }, 
        {
            "location": "/audits/DrutinyPluginDrupal8Audit/#untrustedroles", 
            "text": "User #1  Class:  Drutiny\\Plugin\\Drupal8\\Audit\\UntrustedRoles \nExtends:  Drutiny\\Audit \nPackage:  drutiny/plugin-drupal-8", 
            "title": "UntrustedRoles"
        }, 
        {
            "location": "/audits/DrutinyPluginDrupal8Audit/#policies_8", 
            "text": "These are the policies that use this class:     Name  Title      Drupal-8:UntrustedRoles  Untrusted Roles with administrative permissions", 
            "title": "Policies"
        }, 
        {
            "location": "/audits/DrutinyPluginDrupal8Audit/#source_9", 
            "text": "public function audit(Sandbox $sandbox) {\n    $rows = $sandbox- drush()- evaluate(function ($roles) {\n      // Load all of Drupal's permissions so that we have access to the\n      //  restrict access  property.\n      $all_permissions = \\Drupal::service('user.permissions')- getPermissions();\n\n      $rows = [];\n      foreach ($roles as $role) {\n        $untrusted_permissions = [];\n\n        // Get all permissions assigned to the untrusted role.\n        $roleObj = \\Drupal\\user\\Entity\\Role::load($role);\n        $permissions = $roleObj- getPermissions();\n\n        // Check each permission assigned to the untrusted role and determine if\n        // it is administrative.\n        // Administrative permissions will either have the  restrict access \n        // property set, or the permission name contains the string  administer .\n        foreach ($permissions as $permission) {\n          if (isset($all_permissions[$permission]['restrict access']) ||\n            strstr($permission, 'administer') !== FALSE ) {\n              $untrusted_permissions[] = $all_permissions[$permission]['title'];\n          }\n        }\n\n        if (!empty($untrusted_permissions)) {\n          $rows[] = [\n            'role' =  $role,\n            'permissions' =  implode(', ', $untrusted_permissions),\n          ];\n        }\n      }\n      return $rows;\n    }, [\n      'roles' =  $sandbox- getParameter('untrusted_roles', ['anonymous', 'authenticated'])\n    ]);\n\n    $sandbox- setParameter('rows', $rows);\n\n    return empty($rows) ? AUDIT::SUCCESS : AUDIT::FAIL;\n  }", 
            "title": "Source"
        }, 
        {
            "location": "/audits/DrutinyPluginDrupal8Audit/#unusedmodules", 
            "text": "Cron last run.  Class:  Drutiny\\Plugin\\Drupal8\\Audit\\UnusedModules \nExtends:  Drutiny\\Audit \nPackage:  drutiny/plugin-drupal-8", 
            "title": "UnusedModules"
        }, 
        {
            "location": "/audits/DrutinyPluginDrupal8Audit/#policies_9", 
            "text": "These are the policies that use this class:     Name  Title      Drupal-8:UnusedModules  Unused modules in the codebase", 
            "title": "Policies"
        }, 
        {
            "location": "/audits/DrutinyPluginDrupal8Audit/#source_10", 
            "text": "public function audit(Sandbox $sandbox) {\n\n    try {\n      $list = $sandbox- drush(['format' =  'json'])- pmInfo();\n    }\n    catch (DrushFormatException $e) {\n      return FALSE;\n    }\n\n    $installed_paths = [];\n    $disabled = [];\n    foreach ($list as $project =  $info) {\n\n      if (strpos($info['package'], 'Core') !== FALSE) {\n        continue;\n      }\n      if ($info['type'] == 'theme') {\n        continue;\n      }\n      if ($info['status'] == 'enabled') {\n        $installed_paths[] = $info['path'];\n        continue;\n      }\n      $disabled[$project] = $info;\n    }\n\n    $unused = [];\n    foreach ($disabled as $project =  $info) {\n      foreach ($installed_paths as $path) {\n        if (strpos($info['path'], $path) !== FALSE) {\n          continue 2;\n        }\n      }\n      $unused[] = $info['title'];\n    }\n\n    $sandbox- setParameter('unused_modules', $unused);\n\n    return !count($unused);\n  }", 
            "title": "Source"
        }, 
        {
            "location": "/audits/DrutinyPluginDrupal8Audit/#user1", 
            "text": "User #1  Class:  Drutiny\\Plugin\\Drupal8\\Audit\\User1 \nExtends:  Drutiny\\Audit \nPackage:  drutiny/plugin-drupal-8  This class can  remediate  failed audits.", 
            "title": "User1"
        }, 
        {
            "location": "/audits/DrutinyPluginDrupal8Audit/#policies_10", 
            "text": "These are the policies that use this class:     Name  Title      Drupal-8:User1LockDown  Administrator login is locked down (uid:1)", 
            "title": "Policies"
        }, 
        {
            "location": "/audits/DrutinyPluginDrupal8Audit/#parameters_5", 
            "text": "Name  Type  Description  Default      email   The email the user account should be.  null    blacklist   List of usernames that are not acceptable.  null    status   Whether the account should be enabled or disabled.  null", 
            "title": "Parameters"
        }, 
        {
            "location": "/audits/DrutinyPluginDrupal8Audit/#tokens_5", 
            "text": "Name  Type  Description  Default      email   The email the user account should be.  null    blacklist   List of usernames that are not acceptable.  null    status   Whether the account should be enabled or disabled.  null", 
            "title": "Tokens"
        }, 
        {
            "location": "/audits/DrutinyPluginDrupal8Audit/#source_11", 
            "text": "public function audit(Sandbox $sandbox) {\n    // Get the details for user #1.\n    $user = $sandbox- drush(['format' =  'json'])\n                    - userInformation(1);\n\n    $user = (object) array_pop($user);\n\n    $errors = [];\n    $fixups = [];\n\n    // Username.\n    $pattern = $sandbox- getParameter('blacklist');\n    if (preg_match( #${pattern}#i , $user- name)) {\n      $errors[] =  Username '$user- name' is too easy to guess. ;\n    }\n    $sandbox- setParameter('username', $user- name);\n\n    // Email address.\n    $email = $sandbox- getParameter('email');\n\n    if (!empty($email)   ($email !== $user- mail)) {\n      $errors[] =  Email address '$user- mail' is not set correctly. ;\n    }\n\n    // Status.\n    $status = (bool) $sandbox- getParameter('status');\n    if ($status !== (bool) $user- status) {\n      $errors[] = 'Status is not set correctly. Should be ' . ($user- status ? 'active' : 'inactive') . '.';\n    }\n\n    $sandbox- setParameter('errors', $errors);\n    return empty($errors) ? TRUE : Audit::WARNING;\n  }", 
            "title": "Source"
        }, 
        {
            "location": "/audits/DrutinySumoLogicAudit/", 
            "text": "ApiEnabledAudit\n\n\nClass: \nDrutiny\\SumoLogic\\Audit\\ApiEnabledAudit\n\nExtends: \nDrutiny\\Audit\n\nPackage: \ndrutiny/sumologic\n\n\nNOTE\n: This Audit is \nabstract\n and cannot be used directly by a policy.\n\n\nNoLogsFound\n\n\nClass: \nDrutiny\\SumoLogic\\Audit\\NoLogsFound\n\nExtends: \nDrutiny\\SumoLogic\\Audit\\ApiEnabledAudit\n\nPackage: \ndrutiny/sumologic\n\n\nSource\n\n\n  public function audit(Sandbox $sandbox)\n  {\n    list($sitegroup, $env) = explode('.', str_replace('@', '', $sandbox-\ndrush()-\ngetAlias()), 2);\n    $tokens['@sitegroup'] = $sitegroup;\n    $tokens['@environment'] = $env;\n\n    $query = $sandbox-\ngetParameter('query');\n\n    $query = strtr($query, $tokens);\n\n    $records = $this-\nsearch($sandbox, $query);\n\n    if ($globals = $sandbox-\ngetParameter('globals', []) \n $row = reset($records)) {\n      foreach ($globals as $key) {\n        $sandbox-\nsetParameter($key, $row[$key]);\n      }\n    }\n\n    $sandbox-\nsetParameter('count', count($records));\n\n    return count($records) === 0;\n  }\n\n\n\n\n\nQuery\n\n\nClass: \nDrutiny\\SumoLogic\\Audit\\Query\n\nExtends: \nDrutiny\\SumoLogic\\Audit\\ApiEnabledAudit\n\nPackage: \ndrutiny/sumologic\n\n\nSource\n\n\n  public function audit(Sandbox $sandbox)\n  {\n    list($sitegroup, $env) = explode('.', str_replace('@', '', $sandbox-\ndrush()-\ngetAlias()), 2);\n    $tokens['@sitegroup'] = $sitegroup;\n    $tokens['@environment'] = $env;\n\n    $query = $sandbox-\ngetParameter('query');\n\n    $query = strtr($query, $tokens);\n\n    $records = $this-\nsearch($sandbox, $query);\n\n    if ($globals = $sandbox-\ngetParameter('globals', []) \n $row = reset($records)) {\n      foreach ($globals as $key) {\n        $sandbox-\nsetParameter($key, $row[$key]);\n      }\n    }\n\n    return count($records) === 0 ? self::NOT_APPLICABLE : self::NOTICE;\n  }", 
            "title": "SumoLogic "
        }, 
        {
            "location": "/audits/DrutinySumoLogicAudit/#apienabledaudit", 
            "text": "Class:  Drutiny\\SumoLogic\\Audit\\ApiEnabledAudit \nExtends:  Drutiny\\Audit \nPackage:  drutiny/sumologic  NOTE : This Audit is  abstract  and cannot be used directly by a policy.", 
            "title": "ApiEnabledAudit"
        }, 
        {
            "location": "/audits/DrutinySumoLogicAudit/#nologsfound", 
            "text": "Class:  Drutiny\\SumoLogic\\Audit\\NoLogsFound \nExtends:  Drutiny\\SumoLogic\\Audit\\ApiEnabledAudit \nPackage:  drutiny/sumologic", 
            "title": "NoLogsFound"
        }, 
        {
            "location": "/audits/DrutinySumoLogicAudit/#source", 
            "text": "public function audit(Sandbox $sandbox)\n  {\n    list($sitegroup, $env) = explode('.', str_replace('@', '', $sandbox- drush()- getAlias()), 2);\n    $tokens['@sitegroup'] = $sitegroup;\n    $tokens['@environment'] = $env;\n\n    $query = $sandbox- getParameter('query');\n\n    $query = strtr($query, $tokens);\n\n    $records = $this- search($sandbox, $query);\n\n    if ($globals = $sandbox- getParameter('globals', [])   $row = reset($records)) {\n      foreach ($globals as $key) {\n        $sandbox- setParameter($key, $row[$key]);\n      }\n    }\n\n    $sandbox- setParameter('count', count($records));\n\n    return count($records) === 0;\n  }", 
            "title": "Source"
        }, 
        {
            "location": "/audits/DrutinySumoLogicAudit/#query", 
            "text": "Class:  Drutiny\\SumoLogic\\Audit\\Query \nExtends:  Drutiny\\SumoLogic\\Audit\\ApiEnabledAudit \nPackage:  drutiny/sumologic", 
            "title": "Query"
        }, 
        {
            "location": "/audits/DrutinySumoLogicAudit/#source_1", 
            "text": "public function audit(Sandbox $sandbox)\n  {\n    list($sitegroup, $env) = explode('.', str_replace('@', '', $sandbox- drush()- getAlias()), 2);\n    $tokens['@sitegroup'] = $sitegroup;\n    $tokens['@environment'] = $env;\n\n    $query = $sandbox- getParameter('query');\n\n    $query = strtr($query, $tokens);\n\n    $records = $this- search($sandbox, $query);\n\n    if ($globals = $sandbox- getParameter('globals', [])   $row = reset($records)) {\n      foreach ($globals as $key) {\n        $sandbox- setParameter($key, $row[$key]);\n      }\n    }\n\n    return count($records) === 0 ? self::NOT_APPLICABLE : self::NOTICE;\n  }", 
            "title": "Source"
        }
    ]
}